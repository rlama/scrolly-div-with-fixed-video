{"version":3,"sources":["global-css/index.css","../node_modules/video-react/dist/video-react.css","js/components/Waypoints/Videos/VideoQuotesSideBySide/DVideo/DVideo.css","js/components/Waypoints/Videos/VideoQuotesSideBySide/VideoWaypoint/VideoWaypoint.css","js/components/App/App.css","js/components/App/ArticleSection.css","js/components/App/Footer.css"],"names":[],"mappings":"AAoLA,wBACE,GACE,gCACQ,uBAA0B,CAAE,CACxC,gBACE,GACE,gCACQ,uBAA0B,CAAE,CAiTxC,qCACE,GACE,kEACQ,yDAA4D,CAAE,CAC1E,6BACE,GACE,kEACQ,yDAA4D,CAAE,CAw5B1E,EACE,8BACQ,qBAAuB,CAEjC,2ZAiFE,aACA,eACA,SACA,UACA,wBACA,QAAU,CAEZ,2FAaE,aAAe,CAEjB,KACE,aAAe,CAEjB,MAEE,eAAiB,CAEnB,aAEE,WAAa,CAEf,oDAIE,WACA,YAAc,CAEhB,MACE,iBACA,wBAA0B,CAE5B,KACE,oBAAsB,CAExB,oDAEE,uBAAyB,CAE3B,mBACE,4BAA8B,CAEhC,OACE,YAAc,CAKhB,WACE,+BACA,gBACA,kBACA,kBAEA,8FAAwM,CAM1M,WACE,oBACA,gBACA,kBACA,sBACA,8FAA8K,CAEhL,WACE,oBACA,gBACA,kBACA,sBACA,8FAAwK,CAM1K,WACE,qBACA,gBACA,kBACA,sBACA,8FAAkL,CAEpL,WACE,qBACA,gBACA,kBACA,sBACA,8FAA4K,CAE9K,eACE,qGACA,gBACA,aAAe,CAEjB,GACE,eACA,kBACA,mBAAqB,CAEvB,MACE,eACA,kBACA,eAAiB,CAEnB,MACE,eACA,eACA,gBAAkB,CAEpB,EACE,yDACA,cACA,eACA,oBACA,oBACA,kBAAoB,CAEtB,yCACE,GACE,eACA,eACA,mBAAqB,CACvB,MACE,eACA,kBACA,mBAAqB,CACvB,GACE,eACA,kBACA,eAAiB,CACnB,EACE,yDACA,cACA,eACA,mBACA,mBAAqB,CAAE,CAE3B,0CACE,GACE,eACA,kBACA,mBAAqB,CAAE,CAAE,ieC3nD7B,0FACE,kBACA,MACA,OACA,WACA,YAIA,iBAAmB,CAGrB,WACE,wBACA,woQAA0oQ,CAE5oQ,WACE,wBACA,+3fACA,gBACA,iBAAmB,CAErB,8TAGE,kCACA,WACA,kBACA,gBACA,oBACA,oBACA,cAEA,mCACA,iCAAmC,CAGrC,uMACE,eAAa,CAGf,4CACE,eAAa,CAGf,6CACE,eAAa,CAGf,sKACE,eAAa,CAGf,6CACE,eAAa,CAGf,8CACE,eAAa,CAGf,8BACE,eAAa,CAGf,gHACE,eAAa,CAGf,kHACE,eAAa,CAGf,uCACE,eAAa,CAGf,mCACE,eAAa,CAGf,0GACE,eAAa,CAGf,4GACE,eAAa,CAGf,4GACE,eAAa,CAGf,4GACE,eAAa,CAGf,8GACE,eAAa,CAGf,8GACE,eAAa,CAGf,4PAEE,eAAa,CAGf,2KAEE,eAAa,CAGf,4XAGE,eAAa,CAGf,8MAEE,eAAa,CAGf,oCACE,eAAa,CAGf,yCACE,eAAa,CAGf,wCACE,eAAa,CAGf,4BACE,eAAa,CAGf,kCACE,eAAa,CAGf,+BACE,eAAa,CAGf,8BACE,eAAa,CAGf,sCACE,eAAa,CAGf,+BACE,eAAa,CAGf,6HACE,eAAa,CAGf,wCACE,eAAa,CAGf,6CACE,eAAa,CAGf,aACE,cACA,mBACA,8BACQ,sBACR,WACA,sBACA,kBACA,eACA,cACA,kBACA,yBACA,sBACA,qBACA,gBAAkB,CAEpB,8BACE,iBAAmB,CAErB,iCACE,qBACA,qBAAwB,CAE1B,wDAGE,2BACQ,kBAAoB,CAE9B,gBACE,oBACA,kBACA,oBACA,4BACA,QAAe,CAKjB,0FACE,WACA,eACA,QAAU,CAEZ,8BACE,kBAAoB,CAEtB,6BACE,eAAiB,CAEnB,8BACE,WACA,WAAa,CAEf,gCACE,kBACA,MACA,OACA,WACA,WAAa,CAEf,oCACE,qBACA,sBACA,uBAA0B,CAE5B,8DACE,WAAa,CAGf,6BACE,UACA,SACA,YACA,eAAiB,CAEnB,qDACE,eACA,gBACA,aACA,OACA,MACA,SACA,OAAS,CAGX,oBACE,gBACA,YACA,cACA,qBACA,eACA,iBACA,kBACA,oBACA,oBACA,qBACA,wBACA,mBACA,gBACA,wBACA,qBACA,eAAiB,CAGnB,0CACE,aACA,kBACA,QACA,SACA,uBACA,YACA,gBACA,mCACA,8BACQ,sBACR,4BACA,WACA,YACA,kBAAoB,CAEtB,iGACE,WACA,kBACA,YACA,2BACQ,mBACR,cACA,eACA,sBACA,UACA,eACA,yBACA,sBACA,gIACA,uHAAgI,CAGlI,oGAEE,aAAe,CAGjB,kHAEE,qBAAwB,CAG1B,gHAEE,sBACA,6BACA,oBAAuB,CAGzB,oCACE,GACE,gCACQ,uBAA0B,CACnC,CAEH,4CACE,GACE,+BAAkC,CACnC,CAEH,oCACE,GACE,wBAA0B,CAE5B,IACE,wBAA0B,CAE5B,IACE,qBAAwB,CAE1B,IACE,wBAA0B,CAE5B,GACE,wBAA0B,CAC3B,CAEH,4CACE,GACE,wBAA0B,CAE5B,IACE,wBAA0B,CAE5B,IACE,qBAAwB,CAE1B,IACE,wBAA0B,CAE5B,GACE,wBAA0B,CAC3B,CAEH,0CACE,cACA,kBACA,aACA,UACA,cACA,kBACA,SACA,UACA,UACA,eACA,UACA,2BACA,yBACA,mCACA,mBACA,2BACA,sBACA,kBAAqB,CAEvB,6EACE,QACA,SACA,kBACA,kBAAoB,CAEtB,+DACE,YAAc,CAEhB,gGAEE,UACA,kBACA,yBACA,sCACA,0BACA,qBACA,iBAAmB,CAGrB,yBACE,cAAgB,CAElB,8CACE,cAAgB,CAGlB,4CACE,cACA,UACA,SACA,cACA,iBAA6C,CAE/C,qBACE,gBACA,SACA,eACA,kBACA,gBACA,kBACA,wBAA0B,CAE5B,sDACE,UACA,yBACA,qCAA2C,CAE7C,0IACE,sBACA,aAAe,CAEjB,oCACE,kBACA,yBACA,cACA,gBACA,UACA,gBACA,gBACA,cAAgB,CAGlB,gEACE,YAAc,CAGhB,8DACE,aACA,kBACA,SACA,WACA,UACA,SACA,oBACA,kCAAwC,CAE1C,wFACE,yBACA,mCACA,kBACA,WACA,aACA,eAAiB,CAGnB,0EACE,aAAe,CAGjB,6CACE,2BACA,sBACA,mBACA,eAAiB,CAEnB,oDACE,mBAAqB,CAEvB,6KACE,UAAY,CAEd,mOACE,cACA,SAAW,CAEb,uEACE,wBACA,mBACA,eAAiB,CAEnB,+DACE,UACA,YACA,WACA,kBACA,SACA,MACA,UACA,SACA,2BACA,sBACA,kBAAqB,CAEvB,uEACE,WACA,YACA,SACA,eAAiB,CAGnB,uEACE,cACA,UACA,kBACA,UAAY,CAEd,qMACE,UAAY,CAGd,iCACE,qBACA,sBACA,4BACA,4BACA,wBACA,sBACA,eACA,SACA,UACA,kBACA,MACA,QACA,SACA,OACA,WAAa,CAEf,qCACE,cACA,sBACA,cACA,gBACA,UACA,UAAY,CAGd,iCACE,UACA,kBACA,eACA,UACA,eACA,yBACA,qCAA2C,CAE7C,uCACE,gCACA,uBAAyB,CAG3B,kCACE,aACA,kBACA,kBACA,SACA,UACA,YACA,UACA,cACA,SAAW,CAEb,yCACE,gBACA,gBAAkB,CAEpB,sIACE,sCAAkD,CAGpD,uCACE,SACA,mBACA,WACA,YACA,gBACA,UACA,kBACA,SAAW,CAGb,0CACE,mBACA,qBAAuB,CAGzB,sCACE,aACA,WACA,kBACA,SACA,OACA,QACA,WACA,yBACA,kCAAwC,CAG1C,kDACE,oBACA,aACA,mBACA,UACA,8CACA,yCACA,qCAA0C,CAG5C,kIACE,mBACA,UACA,4CACA,uCACA,mCAAsC,CAGxC,gKAGE,sBAAyB,CAG3B,kHACE,UACA,kBAAoB,CAGtB,sEACE,aAAe,CAGjB,2CACE,cACA,UACA,oBACA,aACA,sBACA,mBACA,aAAe,CAGjB,gDACE,YAAc,CAGhB,0CACE,cACA,UACA,2BACA,sBACA,mBACA,WAAc,CAGhB,8EACE,wBAA0B,CAM5B,+OAGE,mBACA,cAAiB,CAGnB,+RAIE,kBACA,cACA,YACA,SACA,UACA,QACA,OACA,KAAO,CAGT,wCACE,qBAAuB,CAEzB,+CACE,kBACA,mBACA,YACA,cAAiB,CAGnB,mIAGE,kBACA,oBACA,kBACA,WACA,aACA,eACA,WACA,gCACA,oBACA,sBACA,oCACA,kBAAqB,CAGvB,oIAGE,SAAW,CAGb,mFACE,YAAc,CAGhB,wCACE,mBACA,+BAAqC,CAGvC,4CACE,gBACA,gCAAsC,CAGxC,+DACE,UAAY,CAGd,uCACE,qBACA,aACA,kBACA,YACA,YAAc,CAGhB,+CACE,iBAAmB,CAGrB,sEACE,aACA,kBACA,UACA,YACA,sBACA,SAAW,CAGb,8EACE,SAAW,CAGb,4EACE,aAAe,CAGjB,sMAEE,kBACA,UACA,4CACA,uCACA,mCAAsC,CAGxC,8OAEE,YAAc,CAGhB,8IAEE,WACA,sBACA,+BAAqC,CAQvC,oFACE,eACA,cACA,SAAW,CAGb,oCACE,eACA,OACA,MACA,SACA,QACA,YAAc,CAGhB,uCACE,cACA,UACA,cACA,gBACA,cACA,WACA,iBACA,iBAAmB,CAErB,uCACE,gBACA,YACA,SAAW,CAGb,oFAEE,eACA,cACA,SAAW,CAEb,yCACE,UACA,cACA,UACA,oBACA,aACA,sBACA,kBAAoB,CAEtB,qCACE,mBAAsB,CAExB,mEACE,UACA,WAAc,CAEhB,6FACE,UAAY,CAEd,iEACE,WACA,WACA,kBAAoB,CAEtB,2FACE,WAAa,CAEf,uCACE,kBACA,SACA,OACA,qBAAuB,CAEzB,8CACE,kBACA,cAAiB,CAEnB,oEACE,UAAa,CAEf,2EACE,UACA,UAAa,CAEf,sEACE,WAAc,CAEhB,6EACE,UACA,WAAc,CAEhB,6FACE,cACA,QACA,SACA,4BAA8B,CAEhC,sGACE,UACA,UAAY,CAEd,wGACE,SAAW,CAEb,qGACE,SACA,QACA,kBACA,iBAAmB,CAErB,gYAIE,WACA,WAAa,CAEf,yYAIE,aACA,SAAW,CAEb,sGACE,sCAAyC,CAG3C,yEACE,gBACA,iBAAmB,CAErB,0DACE,UACA,MAAU,CAGZ,gCACE,kBACA,SACA,QACA,WACA,YACA,WACA,kBACA,iBACA,0BACA,kBAAoB,CAEtB,4DACE,yEACA,iEACA,mBAAqB,CAEvB,gEACE,6EACA,qEACA,mBAAqB,CAEvB,wDACE,WACA,YACA,WACA,eACA,iBACA,iBAAmB,CAErB,6CACE,GACE,SAAW,CAEb,GACE,UACA,2BACQ,kBAAoB,CAC7B,CAEH,qCACE,GACE,SAAW,CAEb,GACE,UACA,2BACQ,kBAAoB,CAC7B,CAEH,iDACE,GACE,SAAW,CAEb,GACE,UACA,2BACQ,kBAAoB,CAC7B,CAEH,yCACE,GACE,SAAW,CAEb,GACE,UACA,2BACQ,kBAAoB,CAC7B,CCt0BH,wBACE,GACE,gCACQ,uBAA0B,CAAE,CACxC,gBACE,GACE,gCACQ,uBAA0B,CAAE,CAiTxC,qCACE,GACE,kEACQ,yDAA4D,CAAE,CAC1E,6BACE,GACE,kEACQ,yDAA4D,CAAE,CAw5B1E,QACE,WACA,6BAAgC,CAChC,cACE,oBACA,aACA,qBACI,uBACJ,WACA,gBACA,cACA,aACA,YAAc,CACd,0BACE,cACE,gBAAkB,CAAE,CACxB,0BACE,cACE,gBAAkB,CAAE,CACxB,qBACE,2BACI,kBACJ,WACA,iBACA,iBAAmB,CACnB,2BACE,WACA,YACA,WAAa,CACb,yCACE,qCACA,gCACA,4BAA+B,CACjC,yCACE,2BACE,WACA,WAAa,CAAE,CACnB,0CACE,2BACE,UACA,WAAa,CAAE,CACrB,4BACE,WACA,WAAa,CACb,0CACE,qCACA,gCACA,4BAA+B,CACjC,yCACE,4BACE,WACA,WAAa,CAAE,CACnB,0CACE,4BACE,UACA,WAAa,CAAE,CACrB,yBACE,qBACE,gBAAkB,CAAE,CAG9B,aACE,wBAA0B,CAE5B,gCACE,YAAc,CAEhB,6EACE,SAAW,CAEb,iCACE,wBAA0B,CAE5B,oHACE,yDACA,gBACA,cAAgB,CAElB,SACE,2BACI,kBACJ,WACA,iBACA,iBAAmB,CACnB,eACE,UACA,iBACA,YACA,YAAc,CACd,yCACE,eACE,SAAW,CAAE,CACjB,0CACE,eACE,SAAW,CAAE,CACnB,gBACE,WACA,WAAa,CACb,8BACE,qCACA,gCACA,4BAA+B,CACjC,yCACE,gBACE,WACA,WAAa,CAAE,CACnB,0CACE,gBACE,UACA,WAAa,CAAE,CACrB,yBACE,SACE,gBAAkB,CAAE,CAE1B,qBACE,sBAAyB,CAE3B,qBACE,uBAA0B,CAE5B,WACE,oBACA,4BACA,WACA,WACA,kBACA,OACA,QACA,MACA,SACA,kBACA,cACA,wBACA,wBACA,WAAa,CACb,eACE,YACA,cAAgB,CAClB,qBACE,UAAa,CACf,0CACE,WACE,UACA,UAAY,CAAE,CAClB,yCACE,WACE,UAAY,CAAE,CAClB,yBACE,WACE,UAAY,CAAE,CC52CpB,wBACE,GACE,gCACQ,uBAA0B,CAAE,CACxC,gBACE,GACE,gCACQ,uBAA0B,CAAE,CAiTxC,qCACE,GACE,kEACQ,yDAA4D,CAAE,CAC1E,6BACE,GACE,kEACQ,yDAA4D,CAAE,CAw5B1E,aACE,aACA,WACA,SACA,iDACQ,wCAAiD,CAE3D,yCACE,aACE,WACA,iDACQ,wCAAiD,CAAE,CAE/D,0CACE,aACE,WACA,iDACQ,wCAAiD,CAAE,CCxuC/D,wBACE,GACE,gCACQ,uBAA0B,CAAE,CACxC,gBACE,GACE,gCACQ,uBAA0B,CAAE,CAiTxC,qCACE,GACE,kEACQ,yDAA4D,CAAE,CAC1E,6BACE,GACE,kEACQ,yDAA4D,CAAE,CAw5B1E,KACE,6BAAmC,CAErC,KACE,eAAiB,CAEnB,4BACE,kBACA,gBAAkB,CAEpB,oBAME,mCACA,iCAAmC,CAErC,qCACE,oBACA,iBACA,kBACA,YACA,eACA,qCACA,gCACA,4BAA+B,CAC/B,2CACE,yDACA,UACA,gBACA,kBACA,SACA,SACA,oDACI,gDACI,2CAA6C,CACrD,iDACE,iBACA,cACA,kBAAoB,CACtB,iDACE,qGACA,WACA,kBACA,cACA,mBACA,kBACA,8CACQ,sCACR,kBACA,UACA,UACA,aACA,gBACA,gBACA,aAAe,CACf,sDACE,cACA,gBAAkB,CACtB,oDACE,yDACA,eACA,kBACA,OACA,UACA,aACA,gBACA,gBACA,YACA,mBACA,eAAiB,CACjB,yDACE,aAAe,CACjB,0DACE,qGACA,cAAgB,CACpB,sDACE,qGACA,eACA,iBACA,iBACA,cACA,kBACA,oBACA,mBACA,6BACA,iBAAoB,CACtB,iDACE,gBACA,8CACQ,sCACR,cACA,eACA,gBACA,aACA,iBAAmB,CACnB,wDACE,eAAiB,CACnB,yDACE,yDACA,gBACA,eAAiB,CACjB,iEACE,qBACA,YACA,WACA,mBACA,kBACA,kBACA,QACA,kBAAoB,CAE9B,0CACE,qCACE,iBACA,aAAe,CACf,2CACE,kBACA,UACA,WACA,mCACI,+BACI,2BACR,QAAU,CACV,sDACE,eACA,iBACA,gBAAkB,CAAE,CCx1C5B,wBACE,GACE,gCACQ,uBAA0B,CAAE,CACxC,gBACE,GACE,gCACQ,uBAA0B,CAAE,CAiTxC,qCACE,GACE,kEACQ,yDAA4D,CAAE,CAC1E,6BACE,GACE,kEACQ,yDAA4D,CAAE,CAw5B1E,iBACE,WACA,cAAgB,CAChB,oBACE,iBAAmB,CACrB,wBACE,eAAiB,CAErB,yFAGE,cACA,eACA,iBAAmB,CAErB,oFAEE,yDACA,iBACA,iBACA,mBACA,cACA,mBACA,UAAY,CACZ,yCACE,oFAEE,mBAAqB,CAAE,CAE7B,yBACE,kBAAoB,CACpB,sCACE,iBAAmB,CAEvB,qCACE,gBACA,WACA,cACA,aACA,kBACA,MACA,UAAY,CAEd,6CACE,eACA,eACA,cACA,qBACA,gBACA,eACA,aAAe,CACf,+CACE,aAAe,CACjB,kDACE,kBACA,gBACA,2BACA,UACA,WACA,UACA,mBACA,QAAU,CACZ,+DACE,eAAiB,CACnB,0GACE,aAAe,CACjB,+DACE,iBAAwB,CAE5B,2CACE,yDACA,eACA,gBAAkB,CAEpB,iBACE,gBACA,4BACA,iBAAmB,CAErB,yCACE,iBACE,WACA,cAAgB,CAClB,sDAEE,eAAiB,CACnB,mCACE,eAAiB,CAAE,CAEvB,yCACE,qCACE,aAAe,CACjB,yBACE,YAAc,CAAE,CCpzCpB,wBACE,GACE,gCACQ,uBAA0B,CAAE,CACxC,gBACE,GACE,gCACQ,uBAA0B,CAAE,CAiTxC,qCACE,GACE,kEACQ,yDAA4D,CAAE,CAC1E,6BACE,GACE,kEACQ,yDAA4D,CAAE,CAw5B1E,QACE,mBACA,cAAgB,CAChB,gBACE,cACA,kBACA,gCACA,oBACA,aACA,mBACI,eACJ,qBACI,uBACJ,sBACI,kBAAoB,CACxB,gCACE,oBACI,YACJ,6BACI,gBACJ,WAAa,CACb,sCACE,qBACA,kBACA,WAAa,CACb,iDACE,WAAa,CACf,8CACE,WAAa,CACf,wDACE,aAAe,CACjB,kDACE,aAAe,CACjB,6CACE,YACA,wBACA,wBACA,2BAA6B,CAC/B,4CACE,cACA,WACA,YACA,kBACA,MACA,MAAQ,CACd,wBACE,oBACI,YACJ,6BACI,gBACJ,iBAAmB,CACnB,kCACE,aAAe,CACrB,mBACE,yDACA,WACA,eACA,YACA,iBAAmB,CACnB,yBACE,eACA,gBACA,mBACA,WACA,oBAAsB,CACxB,yBACE,wBACA,4BACA,wBACA,WACA,YACA,oBAAsB,CAE5B,yCACE,2CACE,aAAe,CACjB,gBACE,gBACA,cAAgB,CAChB,gCACE,YACA,4BACI,cAAgB,CACtB,wBACE,iBACA,eACA,4BACI,cAAgB,CACxB,mBACE,gBACA,cAAgB,CAChB,yBACE,WACA,cACA,UAAY,CACd,yBACE,eACA,eACA,iBACA,gBACA,WACA,UAAY,CACd,yBACE,WACA,WACA,gBAAkB,CAAE","file":"static/css/main.fcba6cb3.css","sourcesContent":["@charset \"UTF-8\";\n/*\n  Project global styles\n*/\n/*\n  Fairfax Presentation Styles\n\n  ask sorenfrederiksen@fairfaxmedia.com.au\n\n  This file binds together the various components of the Fairfax Presentation Styles library. \n\n  To use this file in a project, include it like so:\n\n  .../ css\n      - main.scss <- File imports '_ffx-prez-styles.scss', e.g. @import 'libs/_ffx-prez-styles.scss' \n      - main.css  <- Main file above compiles to this\n  ..../ lib\n        - '_ffx-prez-styles.scss'\n        - etc.\n\n  See 'https://smacss.com/book/categorizing' for more on the system used to categorise the styling\n  rules included.\n*/\n/* \n  Base rules are the defaults. They are almost exclusively single element selectors (e.g. 'p', 'a',\n  'input', rather than class selectors, etc.) but base rules could include attribute selectors, \n  pseudo-class selectors, child selectors or sibling selectors.\n\n  We also use 'Base' to include variables broadly depended on by many other styles (e.g. colours,\n  font and text styles).\n*/\n/*\n  Reset\n\n  Fairfax styles reset from 'prez-library-react-shared-components':\n\n  https://bitbucket.org/sorenfrederiksenffx/prez-library-react-shared-components\n\n  October 24, 2017\n  ask sorenfrederiksen@fairfaxmedia.com.au\n*/\n/*\n  Convert between variable types\n\n  These functions are used to convert between variable types.\n\n  Adapted from: https://codepen.io/jakob-e/pen/AHunv\n*/\n/*\n  To string\n*/\n/*\n  To number\n*/\n/*\n  To integer\n*/\n/*\n  To U-integer\n*/\n/*\n  Convert between unit types\n\n  These functions are used to convert unit values from one unit type to another.\n\n  Adapted from: https://codepen.io/jakob-e/pen/AHunv\n*/\n/*\n  To unit\n\n  @param { String } unit - String denoting unit type (e.g. 'px')\n  @param { Number } input - Number with unit suffix (if it has one, e.g. '10em')\n  @returns { Number } - Number of denoted unit, if a conversion is possible (e.g. '10em' to 'em'\n  results in '100px')\n*/\n/*\n  To line height\n\n  Function takes a font size and returns an appropriate line-height.\n\n  @param { Number } font-size - Number (potentially with unit) denoting size of font\n  @param { Number } line-height - Number (potentially with unit) denoting line height desired\n*/\n/*\n  Colors\n\n  November 9, 2017\n  ask sorenfrederiksen@fairfaxmedia.com.au\n*/\n/*\n  Real color names\n*/\n/*\n  Descriptive color names\n*/\n/*\n  Functional color names\n*/\n/*\n  Colours - Australian politics\n\n  November 9, 2017\n  ask sorenfrederiksen@fairfaxmedia.comau\n*/\n/*\n  Colors - Charts\n\n  January 1, 2017\n  Ask sorenfrederiksen@fairfaxmedia.com.au\n\n  Colors for use in data visualisations. These and other styles are documented here:\n\n  https://ffxblue.atlassian.net/wiki/spaces/PROD/pages/32577164/Infogram+Style\n*/\n/*\n  Fonts\n\n  The file assumes it will be compiled to a CSS file that sits like so in the project's directory \n  hierarchy:\n\n  main.css\n  .. / assets\n  .. .. / fonts\n  .. .. .. / abril-titling\n  .. .. .. .. / AbrilTitling-Semibold.woff\n  .. .. .. .. / AbrilTitling-Semibold.woff2\n  .. .. .. / pt-sans\n  .. .. .. .. / PTSans-Regular.woff\n  .. .. .. .. / PTSans-Regular.woff2\n  .. .. .. .. / PTSans-Bold.woff\n  .. .. .. .. / PTSans-Bold.woff2\n  .. .. .. / pt-serif\n  .. .. .. .. / PTSerif-Regular.woff\n  .. .. .. .. / PTSerif-Regular.woff2\n  .. .. .. .. / PTSerif-Bold.woff\n  .. .. .. .. / PTSerif-Bold.woff2\n*/\n/*\n  Type\n\n  Standard and other type styles.\n\n  October 24, 2017\n  ask sorenfrederiksen@fairfaxmedia.com.au\n*/\n/*\n  These mix-ins are not used in the main, public 'standard-typography' mix-in, because they would \n  burden projects with bulkier styles expressed in long- rather than the short-form of that main \n  mix-in.\n\n  (As in, if we're assuming the user wants to apply all standard typographic styles, we can apply\n  styles to 'h1, h2, h3, h4, h5' all at once, saving many lines of code. Without that assumption,\n  we have to repeat our styles for each individual type of heading element.)\n\n  Individual typographical mix-ins are provided only for 'h1', 'h2', 'h3' and 'p' elements, as these\n  are considered most likely to prove of use.\n\n  The utility of all of these mix-ins is debatable, and subject to future consideration.\n*/\n/*\n  Standard typography - h1\n*/\n/*\n  Standard typography - h2\n*/\n/*\n  Standard typography - h3\n*/\n/*\n  Standard typography - p\n*/\n/*\n  Standard typography\n*/\n/*\n  Animations\n\n  January 1, 2018\n  ask sorenfrederiksen@fairfaxmedia.com.au\n*/\n@-webkit-keyframes spin {\n  100% {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg); } }\n@keyframes spin {\n  100% {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg); } }\n\n/*\n  Break point\n\n  Mix-in used to create standard Fairfax breakpoints.\n\n  These mix-ins can be used like so:\n\n  @includes('only', 'small') {\n    \n    .someMobileStyle {\n      color: red;\n    }\n\n    // ... other styles that will only show within the 'small' break-point bracket\n  }\n\n  See the 'Media Queries' section of this for a deeper explanation of how these work:\n  https://robots.thoughtbot.com/sasss-content-directive\n\n  @param { String } type - String denoting type of break-point to be created\n  @param { String } size - String denoting size of break-point to be created\n*/\n/* \n  Layout rules divide the page into sections. Layouts hold one or more modules together.\n*/\n/*\n  Embedded interactive\n\n  January 1, 2017\n  ask sorenfrederiksen@fairfaxmedia.com.au\n\n  Default styles for element containing embedded interactive.\n\n  Your SCSS:\n\n  ```\n  .yourEmbeddedInteractiveContainerClass {\n    @include embedded-interactive;\n  }\n  ```\n\n  Your HTML:\n\n  ```\n  <div class=\"yourEmbeddedInteractiveContainerClass\">\n    <!-- Your application -->\n  </div>\n  ```\n*/\n/*\n  Feature article header\n\n  November 7, 2017\n  ask sorenfrederiksen@fairfaxmedia.com.au\n\n  A mix-in that styles a container and its contents to become the header section of a long-form\n  feature article, including the article's header, subtitle, author credits, date and header\n  sharing buttons.\n\n  Your SCSS:\n\n  ```\n  // The class of your feature article header\n  .yourFeatureArticleHeaderClass {\n    @include feature-article-header(\"standard\", true, false);\n  }\n  ```\n\n  If you're using the `standard-typography` mix-in elsewhere in your style-sheet, you can set that\n  last variable - the `false` - to `true`. When set to `true`, that parameter will make the\n  `feature-article-header` mix-in assume that `standard-typography` is active, and so rely on\n  styles associated with that mix-in, resulting in less-bloated styles.\n\n  For example: \n\n  ```\n  // The class of your feature article header\n  .yourFeatureArticleHeaderClass {\n    @include feature-article-header(\"standard\", true, true);\n  }\n  ```\n\n  Your HTML:\n  ```\n  <header class=\"yourFeatureArticleHeaderClass\">\n\n    <p class=\"feature-article-header__topic\">\n      <a href=\"/national\">Your feature article's topic</a>\n    </p>\n    \n    <h1 class=\"feature-article-header__title\">\n      Your feature article title here\n    </h1>\n\n    <div class=\"feature-article-header__break\"></div>\n\n    <!-- Article header social media sharing buttons -->\n    <ul class=\"feature-article-header__social\">\n      <li class=\"feature-article-header__social__button social-button__facebook\">\n        <a href=\"javascript:void(0);\">\n          <span>Share on Facebook</span>\n          <svg height=\"1em\" width=\"1em\" aria-hidden=\"true\" focusable=\"false\">\n            <use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#icon-facebook\"></use>\n          </svg>\n        </a>\n      </li>\n      <li class=\"feature-article-header__social__button social-button__twitter\">\n        <a href=\"javascript:void(0);\">\n          <span>Share on Twitter</span>\n          <svg height=\"1em\" width=\"1em\" aria-hidden=\"true\" focusable=\"false\">\n            <use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#icon-twitter\"></use>\n          </svg>\n        </a>\n      </li>\n      <li class=\"feature-article-header__social__button social-button__whatsapp\">\n        <a href=\"javascript:void(0);\">\n          <span>Share on WhatsApp</span>\n          <svg height=\"1em\" width=\"1em\" aria-hidden=\"true\" focusable=\"false\">\n            <use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#icon-whatsapp\"></use>\n          </svg>\n        </a>\n      </li>\n      <li class=\"feature-article-header__social__button social-button__email\">\n        <a href=\"javascript:void(0);\">\n          <span>Share on Email</span>\n          <svg height=\"1em\" width=\"1em\" aria-hidden=\"true\" focusable=\"false\">\n            <use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#icon-email\"></use>\n          </svg>\n        </a>\n      </li>\n    </ul>\n\n    <p class=\"feature-article-header__subtitle\">\n      Here, you'll input a subtitle of around a sentence in length, usually running over two lines..\n    </p>\n\n    <p class=\"feature-article-header__author\">\n      by Soren Frederiksen &amp; Donald Trump\n    </p>\n\n    <p class=\"feature-article-header__date\">\n      February 6, 2018\n    </p>\n\n  </header>\n  ```\n*/\n/*\n  Feature article header\n\n  @param { Color } title-color - Colour used to colour the feature header's title\n  @param { Color } subtitle-color - Colour used to colour the feature header's subtitle\n  @param { Color } topic-color - Colour used to colour the feature header's topic\n  @param { Color } break-color - Colour used to colour the feature header's break between its title,\n  subtitle and other elements\n  @param { Color } author-and-date-color - Colour used to colour the feature header's author and\n  date elements\n  @param { Color } social-button-color - Colour used to colour the feature header's social buttons\n  @param { Boolean } sharing-only-on-mobile - Boolean denoting whether or not feature article header\n  sharing buttons wills be shown on devices larger than mobile\n  @param { Boolean } standard-typography-in-us - Boolean indicating whether or not the \n  'standard-typography' mix-in is in use elsewhere in this style-sheet\n*/\n/*\n  Feature article header\n\n  @param { String } style - String describing style of feature article header (e.g. 'standard' or\n  'standard--dark')\n  @param { Boolean } sharing-only-on-mobile - Boolean denoting whether or not feature article header\n  sharing buttons wills be shown on devices larger than mobile\n  @param { Boolean } standard-typography-in-us - Boolean indicating whether or not the \n  'standard-typography' mix-in is in use elsewhere in this style-sheet\n*/\n/*\n  Custom feature article header\n\n  @param { Color } title-color - Colour used to colour the feature header's title\n  @param { Color } subtitle-color - Colour used to colour the feature header's subtitle\n  @param { Color } topic-color - Colour used to colour the feature header's topic\n  @param { Color } break-color - Colour used to colour the feature header's break between its title,\n  subtitle and other elements\n  @param { Color } author-and-date-color - Colour used to colour the feature header's author and\n  date elements\n  @param { Color } social-button-color - Colour used to colour the feature header's social buttons\n  @param { Boolean } sharing-only-on-mobile - Boolean denoting whether or not feature article header\n  sharing buttons wills be shown on devices larger than mobile\n  @param { Boolean } standard-typography-in-us - Boolean indicating whether or not the \n  'standard-typography' mix-in is in use elsewhere in this style-sheet\n*/\n/*\n  Modules are the reusable, modular parts of our design.\n*/\n/*\n  Sports team icon\n\n  The file assumes it will be compiled to a CSS file that sits like so in the project's directory \n  hierarchy:\n\n  main.css\n  .. / libs\n  .. .. / ffx-prez-styles\n  .. .. .. / assets\n  .. .. .. .. / images\n  .. .. .. .. / logos\n  .. .. .. .. .. / sport\n  .. .. .. .. .. .. / mc-team-logos$2x.png\n*/\n/*\n  Sports team icon\n\n  @param { Number with unit } side-length - Figure with unit that determines width and height of icon\n  @param { String } league - String denoting which set of icons to include in icon style\n*/\n/*\n  Button\n\n  October 20, 2017\n  ask sorenfrederiksen@fairfaxmedia.com.au\n\n  A series of mix-ins to help developers hastily apply standard button styles.\n\n  Users are encouraged to stick to the standard button mixin ('button'), except where a given color\n  scheme demands a change (use 'button--custom') or the function of the button necessitates one \n  (e.g. where the button deletes things, use 'button--destructive').\n\n  All mix-ins result in buttons that can be made to appear deactivated (apply the '.is--deactivated'\n  class to your button) or to signify the application is in the midst of loading (apply the \n  '.is--loading' class). The latter requires the inclusion of the SVG element include in the example\n  HTML below.\n\n  To use this button style, add this to the top of your HTML document (or add the symbol elements to \n  an existing svg container):\n\n  ```\n  <svg xmlns=\"http://www.w3.org/2000/svg\" style=\"position:absolute; width: 0; height: 0;\">\n    <symbol viewBox=\"0 0 40 40\" id=\"icon-loading\">\n      <circle class=\"loading__icon__circle\" opacity=\"0\" cx=\"15.8\" cy=\"15\" r=\"15\"></circle>\n      <path d=\"M27.8084006,22.8842813 C29.5771785,20.6011257 30.6299412,17.7353365 \n               30.6299412,14.6236613 C30.6299412,9.67647577 27.9688583,5.35081946 \n               24,3\" class=\"loading__icon__active-segment\"></path>  \n    </symbol>\n  </svg>\n  ```\n\n  You can then use the button style as follows.\n\n  Your SCSS:\n\n  ```\n  .yourButtonClass {\n    @include button(\"medium\", \"dynamic\", \"solid\");\n  } \n\n  // ... or ...\n\n  .yourCustomButtonClass {\n    @include button--custom(#fff, red, \"1px solid red\", \"large\", \"dynamic\", \"red\");\n  }\n\n  // ... or ...\n\n  .yourDestructiveButtonClass {\n    @include button--destructive(\"large\", \"fixed\", \"solid--reversed\");\n  }\n  ```\n  Your HTML:\n\n  ```\n  <button class=\"yourButtonClass\">\n    <span>A long button</span>\n    <svg viewBox=\"0 0 40 40\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" \n         xmlns:xlink=\"http://www.w3.org/1999/xlink\" stroke=\"#096DD2\" \n         stroke-width=\"3\" fill=\"transparent\" class=\"button-loading\">\n      <use \n        xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n        xlink:href=\"#icon-loading\" \n        class=\"button-loading__icon\" \n        transform=\"translate(6.5 6.5)\">\n    </svg>\n  </button>\n  ```\n*/\n/*\n  Button\n\n  @param { Color } bg - Color for the button's background\n  @param { Color } hover-bg - Color for the button's background when user hovers over it\n  @param { Color } active-bg - Color for the button's background when the user clicks or taps it\n  @param { Color } color - Color for button's text\n  @param { Color } hover-color - Color for button's text when user hovers over it\n  @param { Color } active-color - Color for button's text when user clicks or taps it\n  @param { String } size - String denoting size of button (e.g. 'small', 'medium', 'large')\n  @param { String } size-rules - String denoting rules of how button will be sized ('fixed' or \n  'dynamic')\n  @param { Color } outline - Color of button's outline when it is clicked \n  @param { Boolean } can-load - Boolean indicating whether button can enter the loading state\n*/\n/*\n  Button deactivated\n*/\n/*\n  Button loading\n*/\n@-webkit-keyframes loading-icon-spin {\n  100% {\n    -webkit-transform: translateX(-50%) translateY(-50%) rotate(360deg);\n            transform: translateX(-50%) translateY(-50%) rotate(360deg); } }\n@keyframes loading-icon-spin {\n  100% {\n    -webkit-transform: translateX(-50%) translateY(-50%) rotate(360deg);\n            transform: translateX(-50%) translateY(-50%) rotate(360deg); } }\n\n/*\n  Button\n  \n  @param { String } size - String describing size of button (e.g. 'small', 'medium', 'large')\n  @param { String } size-rules - String describing rules determining size of button (e.g. 'fixed' or\n  'dynamic')\n  @param { String } style - String describing style of button (e.g. 'solid', 'solid--reversed', \n  'hollow' or 'hollow--reversed')\n  @param { Boolean } can-load - Boolean indicating whether button can enter the loading state\n*/\n/*\n  Custom button\n\n  @param { Color } custom-background - Colour for the background of the button\n  @param { Color } custom-color - Colour for the text of the button\n  @param { String } custom-border - Short-form border property for the button (e.g. '1px solid red')\n  @param { String } size - String describing size of button (e.g. 'small', 'medium', 'large')\n  @param { String } size-rules - String describing rules determining size of button (e.g. 'fixed' or\n  'dynamic')\n  @param { Color } custom-outline - Colour for the outline (shown on click) of the button\n  @param { Boolean } can-load - Boolean indicating whether button can enter the loading state\n*/\n/*\n  Destructive button\n\n  @param { String } size - String describing size of button (e.g. 'small', 'medium', 'large')\n  @param { String } size-rules - String describing rules determining size of button (e.g. 'fixed' or\n  'dynamic')\n  @param { String } style - String describing style of button (e.g. 'solid' or 'solid--reversed')\n*/\n/*\n  Social button\n\n  October 24, 2017\n  ask sorenfrederiksen@fairfaxmedia.com.au\n\n  A mix-in to facilitate the use of standard social media sharing buttons, including those for \n  Facebook, Twitter, Instagram, WhatsApp, Google Plus and Email.\n\n  To use social buttons, add this to the top of your HTML document (or add the symbol elements to \n  an existing svg container):\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" style=\"position:absolute; width: 0; height: 0;\">\n      <symbol viewBox=\"0 0 32 32\" id=\"icon-twitter\">\n        <path d=\"M32 6.371c-1.16.525-2.139.542-3.177.023 1.34-.811 1.4-1.38 1.884-2.916a12.91 12.91 0 0 1-4.115 1.596A6.431 6.431 0 0 0 21.864 3c-3.578 0-6.479 2.94-6.479 6.564 0 .515.058 1.016.167 1.496C10.167 10.787 5.394 8.173 2.2 4.2a6.612 6.612 0 0 0-.879 3.302 6.584 6.584 0 0 0 2.883 5.463 6.402 6.402 0 0 1-2.934-.82l-.001.082c0 3.18 2.234 5.833 5.198 6.437a6.43 6.43 0 0 1-2.927.112c.825 2.607 3.218 4.505 6.052 4.559A12.903 12.903 0 0 1 0 26.052 18.167 18.167 0 0 0 9.93 29c11.919 0 18.433-10.001 18.433-18.675 0-.286-.004-.566-.017-.85C29.61 8.551 31.132 7.69 32 6.371\" fill=\"currentColor\" fill-rule=\"evenodd\"></path>\n      </symbol>\n      <symbol viewBox=\"0 0 32 32\" id=\"icon-email\">\n        <g fill=\"currentColor\" fill-rule=\"evenodd\">\n          <path d=\"M16.086 17.334L30.627 6.502A3.267 3.267 0 0 0 28.885 6h-25.6c-.621 0-1.194.177-1.685.47l14.486 10.864z\"></path>\n          <path d=\"M16.464 18.857a.805.805 0 0 1-.931-.002L.413 7.538C.158 7.98 0 8.478 0 9.018v13.847c0 1.695 1.435 3.077 3.2 3.077h25.6c1.765 0 3.2-1.382 3.2-3.077V9.018c0-.518-.147-1-.382-1.429L16.464 18.857z\"></path>\n        </g>\n      </symbol>\n      <symbol viewBox=\"0 0 32 32\" id=\"icon-whatsapp\">\n        <path d=\"M22.189 24.818c-.856.078-.856.701-5.6-1.165-4.74-1.868-7.733-6.732-7.967-7.044-2.187-2.91-2.762-5.991-.273-8.715.79-.86 2.748-.824 3.19.235.387.934 1.32 3.229 1.438 3.462.117.235.194.507.037.817-.186.375-.38.814-1.166 1.596-.233.233-.475.484-.203.95.272.468 1.206 1.995 2.594 3.231 1.782 1.59 3.284 2.081 3.75 2.315.467.233.74.195 1.012-.117.271-.313 1.167-1.362 1.476-1.829.312-.467.624-.388 1.05-.233.428.155 2.72 1.283 3.188 1.518.466.23.778.35.895.544.701 1.177-.963 4.212-3.421 4.435M16 0C7.178 0 0 7.177 0 16c0 3.5 1.133 6.744 3.048 9.38L1.05 31.324l6.149-1.97A15.897 15.897 0 0 0 16 32c8.821 0 16-7.177 16-16 0-8.822-7.178-16-16-16\" fill=\"currentColor\" fill-rule=\"evenodd\"></path>\n      </symbol>\n      <symbol viewBox=\"0 0 32 32\" id=\"icon-facebook\">\n        <path d=\"M18.7 17.4h5.1l.7-5.6h-5.8V8.1c0-1.6.5-2.7 2.8-2.7h3V.2c-.5 0-2.3-.2-4.4-.2-4.4 0-7.9 2.7-7.9 7.7v4.1H7.6v5.6h4.6V32h6.5V17.4z\" fill=\"currentColor\"></path>\n      </symbol>\n      <symbol viewBox=\"0 0 32 32\" id=\"icon-google\">\n        <path d=\"M28.6 14.6v-3.4H26v3.4h-3.4v2.6H26v3.4h2.6v-3.4H32v-2.6zm-8-.6a8.2 8.2 0 0 1 .2 2.2c0 5.9-4 10.3-10.2 10.3A10.65 10.65 0 0 1 0 16 10.65 10.65 0 0 1 10.6 5.5a10.48 10.48 0 0 1 7.2 2.8l-3 3A6.38 6.38 0 0 0 4.2 16a6.24 6.24 0 0 0 6.4 6.3c3.2 0 5.4-1.8 5.8-4.3h-5.8v-3.9l10-.1z\" fill=\"currentColor\" fill-rule=\"evenodd\"></path>\n      </symbol>\n      <symbol viewBox=\"0 0 32 32\" id=\"icon-instagram\">\n        <g stroke=\"currentColor\" fill=\"currentColor\">\n          <path d=\"M8.5 2.9h15c1.6 0 3 .7 3.9 1.7 1 .9 1.7 2.3 1.7 3.9v15c0 1.6-.7 3-1.7 3.9-.9 1-2.3 1.7-3.9 1.7h-15c-1.6 0-3-.7-3.9-1.7-1-.9-1.7-2.3-1.7-3.9v-15c0-1.6.7-3 1.7-3.9.9-1.1 2.3-1.7 3.9-1.7m15-1.9h-15C4.4 1 1 4.4 1 8.5v15C1 27.6 4.4 31 8.5 31h15c4.1 0 7.5-3.4 7.5-7.5v-15C31 4.4 27.6 1 23.5 1\" stroke-width=\"2\"></path>\n          <path d=\"M16 21c-1.4 0-2.6-.6-3.5-1.5-.9-.9-1.5-2.1-1.5-3.5s.6-2.6 1.5-3.5c.9-.9 2.2-1.5 3.5-1.5 1.4 0 2.6.6 3.5 1.5.9.9 1.5 2.2 1.5 3.5 0 1.4-.6 2.6-1.5 3.5-.9.9-2.1 1.5-3.5 1.5m0-12c-3.9 0-7 3.1-7 7s3.1 7 7 7 7-3.1 7-7-3.1-7-7-7\" stroke-width=\"2\"></path>\n          <path d=\"M24 9.5c-.8 0-1.5-.7-1.5-1.5s.7-1.5 1.5-1.5 1.5.7 1.5 1.5-.7 1.5-1.5 1.5m0-4c-1.4 0-2.5 1.1-2.5 2.5s1.1 2.5 2.5 2.5 2.5-1.1 2.5-2.5-1.1-2.5-2.5-2.5\"></path>\n        </g>\n      </symbol>\n    </svg>\n  \n  (In future, it might be that the above isn't necessary, as mastheads in the Fairfax Blue style\n  appear to include the symbols above on every page the site.)\n\n  With the above in your HTML document, you can use this style as follows.\n\n  Your SCSS:\n\n    .yourSocialButtonContainerStyle {\n      @include social-button-container();\n    }\n\n    .yourSocialButtonStyle {\n      @include social-button(15px, #000, #ccc); \n    }\n\n  Your HTML:\n\n    <ul class=\"yourSocialButtonContainerStyle\">\n      <li class=\"yourSocialButtonStyle\">\n        <a href=\"javascript:void(0);\">\n          <span>Share on Facebook</span>\n          <svg height=\"1em\" width=\"1em\" aria-hidden=\"true\" focusable=\"false\">\n            <use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#icon-facebook\"></use>\n          </svg>\n        </a>\n      </li>\n      <li class=\"yourSocialButtonStyle\">\n        <a href=\"javascript:void(0);\">\n          <span>Share on Facebook</span>\n          <svg height=\"1em\" width=\"1em\" aria-hidden=\"true\" focusable=\"false\">\n            <use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#icon-twitter\"></use>\n          </svg>\n        </a>\n      </li>\n      <li class=\"yourSocialButtonStyle\">\n        <a href=\"javascript:void(0);\">\n          <span>Share on Facebook</span>\n          <svg height=\"1em\" width=\"1em\" aria-hidden=\"true\" focusable=\"false\">\n            <use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#icon-email\"></use>\n          </svg>\n        </a>\n      </li>\n    </ul>\n*/\n/*\n  Social button\n\n  @param { Number with unit } side-length - Figure with unit that determines width and height of \n  button\n  @param { Color } color - Color of the button \n  @param { Color } actionColor - Color of button in hover and focus states\n*/\n/*\n  Social button container\n*/\n/*\n  Text input\n\n  November 7, 2017\n  ask sorenfrederiksen@fairfaxmedia.com.au\n\n  A couple of mix-ins to help users get standard form-based text inputs up and running.\n\n  All mix-ins result in inputs that can be made to declare the user's input is invalid (apply the \n  '.is--invalid' class to your button) or to signify the input is deactivated (apply the \n  '.is--deactivated' class).\n\n  To use text inputs, add this to the top of your HTML document (or add the symbol elements to \n  an existing svg container):\n\n  ```\n  <svg xmlns=\"http://www.w3.org/2000/svg\" style=\"position:absolute; width: 0; height: 0;\">\n    <symbol viewBox=\"0 0 16 16\" id=\"icon-validation-alert\">\n      <circle r=\"8\" cx=\"8\" cy=\"8\" fill=\"currentColor\"></circle>\n      <text \n        text-anchor=\"middle\" \n        x=\"8\" \n        y=\"13\" \n        fill=\"#fff\" \n        style=\"font-size: 13px; font-weight: 700; font-family: 'PT Sans', sans-serif\">!</text>\n    </symbol>\n  </svg>\n  ```\n  \n  You can use this style as follows.\n\n  Example SCSS:\n\n  ```\n  .yourTextInputClass {\n    @include text-input(\"standard\");\n  }\n  ```\n\n  Example HTML:\n\n  ```\n  <div class=\"yourTextInputClass\">\n    <label>Some input label</label>\n    <div>\n      <input type=\"text\" placeholder=\"Some input text\"></input>\n      <svg viewBox=\"0 0 16 16\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" \n           xmlns:xlink=\"http://www.w3.org/1999/xlink\" class=\"validation-alert\">\n        <use \n          xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n          xlink:href=\"#icon-validation-alert\" \n          class=\"validation-alert__icon\">\n      </svg>\n    </div>\n    <p class=\"validation-error\">\n      You input the wrong thing.\n    </p>\n  </div>\n  ```\n\n  Example HTML where the user's input is invalid:\n\n  ```\n  <div class=\"yourTextInputClass is--invalid\">\n    <label>Some input label</label>\n    <div>\n      <input type=\"text\" placeholder=\"Some input text\"></input>\n      <svg viewBox=\"0 0 16 16\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" \n           xmlns:xlink=\"http://www.w3.org/1999/xlink\" class=\"validation-alert\">\n        <use \n          xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n          xlink:href=\"#icon-validation-alert\" \n          class=\"validation-alert__icon\">\n      </svg>\n    </div>\n    <p class=\"validation-error\">\n      You input the wrong thing.\n    </p>\n  </div>\n  ```\n\n  (Note the 'label', 'validation-alert' and 'validation-error' elements are optional.)\n*/\n/*\n  Text input\n\n  @param { Color } color - Colour of the input's text\n  @param { String } border - Border property of input\n  @param { Color } focus-color - Colour of the input's text when in focus state\n  @param { Color } focus-border - Border property of input when in focus state\n  @param { Number with unit } font-size - Size of the input's text\n  @param { Color } background - Background colour of the input\n  @param { Color } label-color - Color of the input's label\n  @param { Number with unit } label-font-size - Size of the input's label's font\n  @param { Color } outline - Color of the outline shown when the input is in focus\n*/\n/*\n  Text input without validation error\n\n  Included for use in other mix-ins where including validation error styles would add excessively\n  and needlessly to the stylesheet produced (e.g. with the 'search-input' mix-in).\n\n  @param { Color } color - Colour of the input's text\n  @param { String } border - Border property of input\n  @param { Color } focus-color - Colour of the input's text when in focus state\n  @param { Color } focus-border - Border property of input when in focus state\n  @param { Number with unit } font-size - Size of the input's text\n  @param { Color } background - Background colour of the input\n  @param { Color } label-color - Color of the input's label\n  @param { Number with unit } label-font-size - Size of the input's label's font\n  @param { Color } outline - Color of the outline shown when the input is in focus\n*/\n/*\n  Text input\n\n  @param { String } style - String denoting style of text input\n*/\n/*\n  Custom text input\n\n  @param { Color } border-color - Colour of the input's border\n  @param { Color } focus-border-color - Colour of the input's border in focus state\n  @param { Color } color - Colour of the input's text\n  @param { Number with unit } font-size - Size of input text (label is sized at 93.75% of this)\n  @param { Color } background - Colour of input's background\n  @param { Color } outline - Colour of outline shown around input when it is in focus\n*/\n/*\n  Search input\n\n  November 7, 2017\n  ask sorenfrederiksen@fairfaxmedia.com.au\n  \n  A kind of text input specifically designed for search functionality.\n\n  To use a search input, add this to the top of your HTML document (or add the symbol element to \n  an existing svg container):\n\n  ```\n  <svg xmlns=\"http://www.w3.org/2000/svg\" style=\"position:absolute; width: 0; height: 0;\">\n    <symbol viewBox=\"0 0 32 32\" id=\"icon-search\">\n      <path d=\"M21.08 18.573l10.4 10.4a1.773 1.773 0 1 1-2.508 2.507l-10.4-10.4a11.62 11.62 0 0 1-6.902 2.26C5.225 23.34 0 18.115 0 11.67S5.225 0 11.67 0s11.67 5.225 11.67 11.67c0 2.583-.84 4.97-2.26 6.903zm-1.287-6.903a8.123 8.123 0 1 0-16.247 0 8.123 8.123 0 0 0 16.247 0z\" fill=\"currentColor\" fill-rule=\"evenodd\"/>\n    </symbol>\n  </svg>\n  ```\n  \n  With the above in your HTML document, you can use this style as follows.\n\n  Your SCSS:\n\n  ```\n  .yourSearchInputClass {\n    @include search-input(\"standard\", \"right\", \"true\");\n  }\n  ```\n\n  Your HTML:\n  ```\n  <form class=\"yourSearchInputClass\">\n    <label>Some invisible search label</label>\n    <input type=\"text\" placeholder=\"Some search placeholder text\"></input>\n    <button type=\"submit\">\n      <svg viewBox=\"0 0 16 16\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" \n           xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n        <use \n          xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n          xlink:href=\"#icon-search\" >\n      </svg>\n    </button>\n  </form>\n  ```\n\n  Your HTML when using autocomplete:\n  ```\n  <form class=\"yourSearchInputClass\">\n    <label>Some invisible search label</label>\n    <input \n      type=\"text\" \n      placeholder=\"Some search placeholder text\" \n      id=\"text-input-with-autocomplete\"/>\n    <button type=\"submit\">\n      <svg viewBox=\"0 0 16 16\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" \n           xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n        <use \n          xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n          xlink:href=\"#icon-search\" >\n      </svg>\n    </button>\n  </form>\n\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/awesomplete/1.1.2/awesomplete.js\"></script>\n  <script>\n    var data = [\"Derpit\", \"Burpit\", \"Fartit\", \"McGardit\", \"Lardit\", \"Dingo\", \"Brunswick\", \"Brunton\", \"Brunsby\"]\n\n    var auto = new Awesomplete(\"#text-input-with-autocomplete\", {\n      minChars: 2,\n      maxItems: 5,\n      list: data\n    });\n  </script>\n  ```\n*/\n/*\n  Text input autocomplete\n\n  November 7, 2017\n  ask sorenfrederiksen@fairfaxmedia.com.au\n\n  A mix-in that adds styles to the autocomplete options appended to a text input when using \n  Awesomplete-style autocompletion.\n\n  Your SCSS:\n\n  ```\n  // The class of the element containing the text input you want to have autocomplete\n  .elementContainingTextInput {\n    \n    .awesomplete {\n      @include autocomplete(\"standard\");\n    }\n  }\n  ```\n\n  Your HTML:\n  ```\n  <div class=\"elementContainingTextInput\">\n    <input type=\"text\" id=\"text-input-with-autocomplete\" />\n  </div>\n\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/awesomplete/1.1.2/awesomplete.js\"></script>\n  <script>\n    var data = [\"Derpit\", \"Burpit\", \"Fartit\", \"McGardit\", \"Lardit\", \"Dingo\", \"Brunswick\", \"Brunton\", \"Brunsby\"]\n\n    var auto = new Awesomplete(\"#text-input-with-autocomplete\", {\n      minChars: 2,\n      maxItems: 5,\n      list: data\n    });\n  </script>\n  ```\n*/\n/*\n  Autocomplete\n\n  @param { String } style - String describing style of autocomplete \n*/\n/*\n  Search input\n\n  @param { String } style - String denoting style of text input\n  @param { String } icon-position - String denoting position of search icon\n  @param { String } autocomplete - String determining whether or search input will include \n  autocomplete\n*/\n/*\n  Custom search input\n\n  @param { Color } border-color - Colour of the input's border\n  @param { Color } focus-border-color - Colour of the input's border in focus state\n  @param { Color } color - Colour of the input's text\n  @param { Number with unit } font-size - Size of input text (label is sized at 93.75% of this)\n  @param { Color } background - Colour of input's background\n  @param { Color } outline - Colour of outline shown around input when it is in focus\n*/\n/*\n  Dropdown\n\n  March 1, 2018\n  ask sorenfrederiksen@fairfaxmedia.com.au\n\n  A couple of mix-ins to help users implement standard dropdowns as quickly as possible.\n\n  All mix-ins result in inputs that can signify the input is deactivated (apply the \n  '.is--deactivated' class).\n\n  To use dropdown inputs, add this to the top of your HTML document (or add the symbol elements to \n  an existing svg container):\n\n  ```\n  <svg xmlns=\"http://www.w3.org/2000/svg\" style=\"position:absolute; width: 0; height: 0;\">\n    <symbol viewBox=\"0 0 10 7\" id=\"icon-carat\">\n      <path d=\"M1 1l4 3.74L9 1\" stroke=\"currentColor\" stroke-width=\"2\" fill=\"none\" fill-rule=\"evenodd\"/>\n    </symbol>\n    <symbol viewBox=\"0 0 9 9\" id=\"icon-tick\">\n      <path d=\"M2.978 9a.998.998 0 0 1-.706-.294L.292 6.728a1 1 0 0 1 1.415-1.414L2.853 6.46 7.188.416a1 1 0 0 1 1.625 1.166l-5.022 7A.994.994 0 0 1 2.978 9\" fill=\"currentColor\" fill-rule=\"evenodd\"/>\n    </symbol>\n    <symbol viewBox=\"0 0 16 16\" id=\"icon-validation-alert\">\n      <circle r=\"8\" cx=\"8\" cy=\"8\" fill=\"currentColor\"></circle>\n      <text \n        text-anchor=\"middle\" \n        x=\"8\" \n        y=\"13\" \n        fill=\"#fff\" \n        style=\"font-size: 13px; font-weight: 700; font-family: 'PT Sans', sans-serif\">!</text>\n    </symbol>\n  </svg>\n  ```\n  \n  You can use this style as follows.\n\n  Example SCSS:\n  ```\n  .yourDropdownClass {\n    @include dropdown(\"standard\", false, true);\n  }\n  ```\n  Example HTML:\n  ```\n    <div class=\"yourDropdownClass\">\n      <label>Some input label</label>\n      <div class=\"dropdown__inner\" id=\"dropdown-container\">\n        <span class=\"dropdown__inner__current-value\" id=\"dropdown-current-value\">Soren Frederiksen</span>\n        <svg \n          viewBox=\"0 0 10 7\" version=\"1.1\" \n          xmlns=\"http://www.w3.org/2000/svg\"\n          class=\"dropdown__inner__carat\">\n          <use \n            xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n            xlink:href=\"#icon-carat\" \n            class=\"dropdown__inner__carat__image\">\n        </svg>\n        <svg \n          viewBox=\"0 0 16 16\" version=\"1.1\" \n          xmlns=\"http://www.w3.org/2000/svg\"\n          class=\"dropdown__inner__error\">\n          <use \n            xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n            xlink:href=\"#icon-validation-alert\" >\n        </svg>\n        <svg \n          viewBox=\"0 0 16 16\" version=\"1.1\" \n          xmlns=\"http://www.w3.org/2000/svg\"\n          class=\"dropdown__inner__error\">\n          <use \n            xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n            xlink:href=\"#icon-validation-alert\" >\n        </svg>\n        <select class=\"dropdown__inner__select\" id=\"dropdown-select-input\">\n          <option value=\"Soren Frederiksen\">Soren Frederiksen</option>\n          <option value=\"Richard Lama\">Richard Lama</option>\n          <option value=\"Reginal Sengkey\">Reginal Sengkey</option>\n        </select>\n        <ul class=\"dropdown__inner__list\" id=\"dropdown-list\">\n          <li value=\"Soren Frederiksen\"\n              class=\"dropdown__inner__list__item is--selected\">\n            Soren Frederiksen\n            <svg \n              viewBox=\"0 0 10 7\" version=\"1.1\" \n              xmlns=\"http://www.w3.org/2000/svg\"\n              class=\"dropdown__inner__list__item__tick\">\n              <use \n                xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n                xlink:href=\"#icon-tick\">\n            </svg>\n          </li>\n          <li value=\"Richard Lama\"\n              class=\"dropdown__inner__list__item\">\n            Richard Lama\n            <svg \n              viewBox=\"0 0 10 7\" version=\"1.1\" \n              xmlns=\"http://www.w3.org/2000/svg\"\n              class=\"dropdown__inner__list__item__tick\">\n              <use \n                xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n                xlink:href=\"#icon-tick\">\n            </svg>\n            </svg>\n          </li>\n          <li value=\"Reginal Sengkey\"\n              class=\"dropdown__inner__list__item\">\n            Reginal Sengkey\n            <svg \n              viewBox=\"0 0 10 7\" version=\"1.1\" \n              xmlns=\"http://www.w3.org/2000/svg\"\n              class=\"dropdown__inner__list__item__tick\">\n              <use \n                xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n                xlink:href=\"#icon-tick\">\n            </svg>\n            </svg>\n          </li>\n          <li value=\"Mark Stehle\"\n              class=\"dropdown__inner__list__item\">\n            Mark Stehle\n            <svg \n              viewBox=\"0 0 10 7\" version=\"1.1\" \n              xmlns=\"http://www.w3.org/2000/svg\"\n              class=\"dropdown__inner__list__item__tick\">\n              <use \n                xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n                xlink:href=\"#icon-tick\">\n            </svg>\n            </svg>\n          </li>\n          <li value=\"Matthew Absalom-Wong\"\n              class=\"dropdown__inner__list__item\">\n            Matthew Absalom-Wong\n            <svg \n              viewBox=\"0 0 10 7\" version=\"1.1\" \n              xmlns=\"http://www.w3.org/2000/svg\"\n              class=\"dropdown__inner__list__item__tick\">\n              <use \n                xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n                xlink:href=\"#icon-tick\">\n            </svg>\n            </svg>\n          </li>\n        </ul>\n      </div>\n      <p class=\"dropdown__error\">\n        You did something wrong.\n      </p>\n    </div>\n  ```\n  In order to work fully (included the custom dropdown list), this mix-in also requires some \n  JavaScript. \n\n  Below is some bare-bones vanilla JavaScript that developers will be able to more eloquently \n  implement using whatever framework or library they're using. In principal, though,\n  this is all you need.\n\n  Example JavaScript:\n  ```\n  var dropdownValueDisplay = document.getElementById('dropdown-current-value');\n  var dropdownSelectInput = document.getElementById('dropdown-select-input');\n  var dropdownContainer = document.getElementById('dropdown-container');\n  var dropdownListItems = dropdownContainer.getElementsByClassName('dropdown__inner__list__item');\n\n  // When the user clicks the dropdown container, show it as selected\n  dropdownContainer.addEventListener('click', function() {\n    dropdownContainer.classList.toggle('is--selected');\n  });\n\n  // When the user click a dropdown list item, select it\n  for (var i = 0; i < dropdownListItems.length; i += 1) {\n    dropdownListItems[i].addEventListener('click', selectDropdownListItem);\n  }\n\n  function selectDropdownListItem(e) {\n\n    var newDropdownValue = e.target.getAttribute('value');\n\n    // Update dropdown value display and input\n    dropdownValueDisplay.innerHTML = newDropdownValue;\n    dropdownSelectInput.value = newDropdownValue;\n\n    // Update dropdown list display (and calculate variables necessary to determine position of\n    // tick)\n    for (var i = 0; i < dropdownListItems.length; i += 1) {\n      if (dropdownListItems[i] !== e.target) {\n        dropdownListItems[i].classList.remove('is--selected');\n      }\n      else {\n        indexOfTargetListItem = i;\n        dropdownListItems[i].classList.add('is--selected');\n      }\n    }\n  }\n  ```\n*/\n/*\n  Dropdown\n\n  @param { Color } color - Colour of the input's text\n  @param { String } border - Border property of input\n  @param { Color } focus-color - Colour of the input's text when in focus state\n  @param { Color } focus-carat-color - Colour of the input's carat when in focus state\n  @param { Color } focus-border - Border property of input when in focus state\n  @param { Number with unit } font-size - Size of the input's text\n  @param { Color } background - Background colour of the input\n  @parma { Color } list-item-color - Color of dropdown list items\n  @parma { Color } selected-list-item-background - Background color signifying selected list item\n  @param { Color } label-color - Color of the input's label\n  @param { Number with unit } label-font-size - Size of the input's label's font\n  @param { Boolean } use-custom-dropdown-list-on-mobile - Boolean indicating whether or not to use \n  the custom dropdown list on mobile, or whether to rely on a device's in-built dropdown\n  @param { Boolean } can-be-invalid - Boolean indicating whether or not include invalid state styles\n*/\n/*\n  Dropdown desktop custom dropdown list styles\n*/\n/*\n  Dropdown\n\n  @param { String } style - String denoting style of dropdown menu\n  @param { Boolean } use-custom-dropdown-list-on-mobile - Boolean indicating whether or not to use \n  the custom dropdown list on mobile, or whether to rely on a device's in-built dropdown\n  @param { Boolean } can-be-invalid - Boolean indicating whether or not include invalid state styles\n*/\n/*\n  Custom dropdown\n\n  @param { Number with unit } font-size - Size of input text (label is sized at 93.75% of this)\n  @param { Color } color - Colour of the input's text\n  @param { Color } background - Colour of input's background\n  @param { Boolean } use-custom-dropdown-list-on-mobile - Boolean indicating whether or not to use \n  the custom dropdown list on mobile, or whether to rely on a device's in-built dropdown\n  @param { Boolean } can-be-invalid - Boolean indicating whether or not include invalid state styles\n  @param { Color } label-color - Colour of the input's label\n  @param { Color } border-color - Colour of the input's border\n  @param { Color } focus-border-color - Colour of the input's border in focus state\n  @param { Color } list-item-color - Colour of the input's list item text\n  @param { Number with unit } list-max-height - Maximum size of the dropdown list\n*/\n/*\n  Scrollbar\n\n  March 1, 2018\n  ask sorenfrederiksen@fairfaxmedia.com.au\n\n  A couple mix-ins that add a custom scrollbar to a scrolling container.\n  \n  You can use this style as follows.\n\n  Example SCSS:\n\n  ```\n  .yourScrollingContainerClass {\n    @include scrollbar(\"standard\");\n  }\n  ```\n\n  Example HTML:\n\n  ```\n  <div class=\"yourScrollingContainerClass\">\n    <!-- Lots of elements -->\n  </div>\n  ```\n*/\n/*\n  Scrollbar\n\n  @param { Number with unit } width - Width of the scrollbar\n  @param { Color } track-color - Color of the scrollbar track\n  @param { Color } thumb-color - Color of the scrollbar thumb (i.e. the movable control in the \n  scrollbar)\n  @param { Number with unit } track-border-radius - Border radius of the scrollbar track\n  @param { Number with unit } thumb-border-radius - Border radius of the scrollbar thumb (i.e. the\n  movable control in the scrollbar)\n  @param { Number with unit } thumb-padding - Gap between the thumb and the track\n*/\n/*\n  Scrollbar\n\n  @param { String } style - String describing the style of the scrollbar\n*/\n/*\n  Custom scrollbar\n\n  @param { Number with unit } width - Width of the scrollbar\n  @param { Color } track-color - Color of the scrollbar track\n  @param { Color } thumb-color - Color of the scrollbar thumb (i.e. the movable control in the \n  scrollbar)\n  @param { Number with unit } track-border-radius - Border radius of the scrollbar track\n  @param { Number with unit } thumb-border-radius - Border radius of the scrollbar thumb (i.e. the\n  movable control in the scrollbar)\n*/\n/*\n  Loader\n\n  January 1, 2017\n  ask sorenfrederiksen@fairfaxmedia.com.au\n\n  A loading indicator featuring a masthead-appropriate logo initial.\n\n  To use this loader style, add this to the top of your HTML document (or add the symbol elements to \n  an existing svg container):\n\n  ```\n  <svg xmlns=\"http://www.w3.org/2000/svg\" style=\"position:absolute; width: 0; height: 0;\">\n    <symbol viewBox=\"0 0 50 60\" id=\"icon-loading-ct\">\n      <path d=\"M18.244 19.205L16.378 20.5l-1.072-1.296L39.152 0c.285 1.58 1.219 6.812 4.092 6.31 2.152-.364 4.166-3.013 5.32-4.73H50c-.65 2.008-1.363 3.79-2.662 5.515-1.293 1.653-2.802 3.014-4.524 4.156-1.29.867-2.298 1.361-3.807 1.79l-.073 34.255c.787-.639 1.51-1.28 2.151-2.073 1.372-1.507 2.38-3.224 3.45-4.876l1.154.428c-1.226 3.37-2.445 6.813-4.669 9.745-2.37 3.085-5.675 6.1-9.273 7.67-2.508 1.151-6.033 1.653-8.76 1.79C12.138 60.418 3.158 53.324.86 42.786A42.985 42.985 0 0 1 0 34.182c.073-4.722 2.014-9.38 4.376-13.397 3.378-5.872 8.842-10.538 15.022-13.471 2.444-1.15 5.31-2.22 8.111-2.22.293 0 .723.066.861.35.073.145-.064.363-.21.363-2.729 1.07-3.306 1.143-5.815 2.795-2.452 1.645-4.815 3.37-6.617 5.662-4.523 5.59-5.886 12.968-5.1 20 .365 3.215 1.438 6.438 3.24 9.16 1.218 1.799 2.801 3.16 4.376 4.52v-28.74zm3.622 29.331c2.444 1.15 4.816 2.3 7.543 2.3 1.73.066 3.662 0 5.318-.648.577-.29 1.143-.712 1.721-1.077l.074-36.977-4.313-3.013-1.217 25.515c-.074 2.51-1.145 4.95-2.37 7.096-1.007 1.725-2.59 3.15-4.094 4.448-.86.72-1.72 1.506-2.662 2.356z\" fill=\"#0A1633\" fill-rule=\"evenodd\"/>\n    </symbol>\n    <symbol viewBox=\"0 0 59 62\" id=\"icon-loading-smh\">\n      <path d=\"M44.28 48.294c-4.229-3.036-9.12-5.265-13.698-6.539l-.124-.041 5.043-7.53c6.429 1.401 10.814 4.95 10.814 8.611 0 1.632-.746 3.81-1.975 5.418l-.06.08zM32.557 23.685c-.886-.123-3.722-.609-4.415-.766-2.306-.477-13.809-3.888-13.809-8.981 0-5.786 7.435-5.786 11.005-5.786.788 0 9.162.732 13.111 6.18-.041.078-4.838 7.711-5.892 9.353zm25.235-7.84l.115-.094c.566-.544 1.093-1.66 1.093-2.327 0-.776-.285-1.484-.799-2-.497-.565-1.268-.885-2.288-.96-.087-.006-.584-.03-.617-.03-2.5.024-5.195 1.598-8.038 4.36-2.497 2.425-3.438 4.221-5.015 6.71-1.28 2.024-1.892 2.98-2.235 3.528-.481-.06-3.38-.518-5.976-1.083.836-1.36 3.303-5.693 6.102-9.745 2.035-2.945 4.496-5.61 5.73-7.129.193-.236.38-.375.605-.502.168-.095.417-.22.5-.315.009-.113-.327-.447-.385-.49-.166.022-.265.06-.405.129-.191.09-.447.215-.801.215-.451 0-.916-.384-1.761-1.083C41.495 3.27 37.543.012 30.598 0 18.702-.018 11.679 10.125 11.767 16.839c.055 4.183.854 8.78 2.94 10.712 2.128 1.97 5.712 3.41 11.98 4.9l.421.11-1.005 1.117c-1.649 1.405-2.834 2.755-5.925 2.831-1.955 0-2.866-.669-3.566-1.296l-.147.062c.163.329.59 1.063 1.14 1.739.704.857 1.35 1.306 1.93 1.336.095.025.914.234 2.238-.179 1.71-.534 3.556-1.817 5.338-3.824l.688-.771.69-.769 4.475.799c.511.116 1.015.173 1.457.303l-1.843 2.806c-2.325 3.51-3.214 4.605-3.214 4.605s-1.551-.224-1.96-.303c-1.276-.255-3.283-.382-6.06-.359-5.432-.05-12.938 1.959-17.463 6.469a13.529 13.529 0 0 0-2.288 2.996A11.737 11.737 0 0 0 0 56.078C0 58.81 1.798 62 6.876 62c6.794 0 12.706-6.42 15.824-9.872l.5-.556c.928-1.019 1.353-1.732 1.692-2.095 3.593.995 9.43 3.433 14.54 6.786 1.038-1.058 4.088-4.69 6.947-8.944 1.568-2.334 5.184-7.758 5.313-11.921.126-3.987-3.603-8.775-10.497-10.197.221-.458.633-1.162 1.667-2.762 2.834-4.392 5.39-8.96 10.78-8.96.964 0 2.969.22 4.055 2.24.032.046.05.076.095.127zM17.445 55.863c-1.312 1.119-2.63 2.065-3.922 2.816-1.358.747-2.686 1.296-4.021 1.63a11.6 11.6 0 0 1-2.799.38c-.256 0-.516-.015-.822-.042-2.755-.271-4.47-1.906-4.47-4.277 0-6.279 10.526-8.23 14.361-8.23l.808-.005c1.756-.014 2.985.111 6.431.806l.723.192a46.746 46.746 0 0 1-5.011 5.552c-.435.407-.84.806-1.278 1.178z\" fill=\"#0A1633\" fill-rule=\"evenodd\"/>\n    </symbol>\n    <symbol viewBox=\"0 0 60 41\" id=\"icon-loading-watoday\">\n      <path d=\"M29.974 11.33h-.334c-.611 1.626-10.344 27.707-10.566 28.269-.22.618-.5 1.401-1.389 1.401-.611 0-.946-.449-1.167-1.12L4.007 4.318C3.45 2.746 2.448 2.297 1.725 2.297H.335C.055 2.297 0 2.074 0 1.85V.392C0 .112.056 0 .445 0c.445 0 2.17.166 7.897.166C12.347.166 14.624 0 15.18 0c.389 0 .446.166.446.447V1.85c0 .28-.057.447-.446.447h-1.223c-.89 0-1.446.788-1.112 1.91l7.62 24.453h.331c.668-1.906 7.34-19.744 7.34-21.763 0-1.403-.556-2.86-1.053-3.53-.502-.675-1.225-1.07-1.67-1.07h-1.112c-.279 0-.335-.113-.335-.447V.392c0-.226.056-.392.39-.392.502 0 2.449.166 7.34.166 4.67 0 6.784-.166 7.34-.166.334 0 .386.166.386.502v1.403c0 .224-.052.392-.385.392h-1.67c-.889 0-1.39 1.235-1.11 2.189l7.673 24.174h.333c2.728-7.627 7.564-21.874 7.564-24.904 0-.617-.723-1.459-1.78-1.459h-1.612c-.335 0-.392-.168-.392-.504v-1.4c0-.227.057-.393.446-.393.555 0 2.504.166 5.95.166C57.555.166 59.167 0 59.61 0c.336 0 .389.111.389.502v1.403c0 .224 0 .392-.389.392h-1.054c-.946 0-2.058.62-2.614 2.02-.668 1.796-11.846 32.252-12.958 34.946-.277.673-.667 1.737-1.669 1.737-.779 0-1.11-.728-1.389-1.51l-9.953-28.16\" fill=\"#0A1633\" fill-rule=\"evenodd\"/>\n    </symbol>\n    <symbol viewBox=\"0 0 61 56\" id=\"icon-loading-theage\">\n      <path d=\"M55.49 51.65a76.398 76.398 0 0 1-3.368-6.912L32.98 0h-4.86L16.7 28.195c-1.56 3.883-9.118 21.282-10.102 23.07-1.2 2.15-2.076 1.862-6.598 2.25V56c1.642-.077 6.268-.232 9.143-.232 2.547 0 5.093.155 7.394.232v-2.486c-6.16-.077-6.736-.387-6.736-1.24 0-.312.33-1.244.74-2.332l4.503-11.435c.494-1.165.741-1.398 1.808-1.398h18.65c1.481 0 1.645 0 2.137 1.165l4.953 12.367c.328.776.575 1.475.575 1.941 0 .39-.575.778-7.394.932V56c6.407-.154 9.2-.232 12.242-.232 4.435 0 9.37.078 12.985.232v-2.64c-3.184 0-4.771-.388-5.51-1.71zM35.61 34.391c0 .233-.411.466-.984.544H18.151c-1.151 0-1.48-.233-1.48-.466s.166-.544.329-1.088l8.973-22.253c.246-.466.33-.854.494-.854.162 0 .41.388.493.7l.047.116 8.274 22.291c.245.622.328.777.328 1.01z\" fill=\"#0A1633\" fill-rule=\"evenodd\"/>\n    </symbol>\n    <symbol viewBox=\"0 0 47 62\" id=\"icon-loading-bt\">\n      <path d=\"M25.33 53.374c-3.825 0-7.729-1.627-10.519-5.29V33.278c2.312-4.556 6.774-6.51 10.678-6.51 7.17 0 11.712 6.349 11.712 13.183 0 6.427-3.824 13.424-11.872 13.424m1.99-35.23c-4.38 0-9.479 1.79-12.508 5.776V0H0v8.782l5.172.34v51.9h8.764l.48-4.882C17.44 60.21 22.698 62 27.162 62 38.873 62 47 51.666 47 40.193c0-12.285-8.445-22.048-19.68-22.048\" fill=\"#0A1633\" fill-rule=\"evenodd\"/>\n    </symbol>\n  </svg>\n  ```\n  You can then use the button style as follows.\n\n  Your SCSS:\n  ```\n  .elementContainingYourLoaderClass {\n    position: relative;\n  }\n\n  .yourLoaderClass {\n    @include loader(\"standard\");\n  }\n  ```\n  Your HTML:\n  ```\n  <div class=\"yourLoaderClass\">\n    <div class=\"loader-icon\">\n      <div class=\"loader-icon__borders-container\">\n        <div class=\"loader-icon__borders-container__borders\"></div>   \n      </div>\n      <svg \n        viewBox=\"0 0 60 60\" version=\"1.1\" \n        xmlns=\"http://www.w3.org/2000/svg\"\n        class=\"loader-icon__svg\">\n        <use \n          xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n          xlink:href=\"#icon-loading-smh\" \n          class=\"loader-icon__svg__image\" >\n      </svg>\n    </div>\n    <p class=\"loader-message\">\n      Some default message.\n    </p>\n    <div class=\"loader-retry\">\n      <button class=\"loader-retry__button\">\n        Try again\n      </button>\n    </div>\n  </div>\n\n  ```\n*/\n/*\n  Loader\n\n  @param { Number with unit } icon-side-length - Length of the side of the loading icon to be displayed\n  @param { Color } icon-color - Color of the loading icon\n  @param { Color } inner-border-color - Color of the inner spinning border\n  @param { Color } outer-border-color - Color of the outer spinning border\n  @param { color } text-color - Color of the loading text\n*/\n/*\n  Loader\n\n  @param { String } style - String describing style of loader.\n*/\n/*\n  Loader container\n*/\n/*\n  Drop-cap\n\n  February 6, 2017\n  ask sorenfrederiksen@fairfaxmedia.com.au\n\n  A large capital letter used to start a section of a feature article.\n  \n  With the above in your HTML document, you can use this style as follows.\n\n  Your SCSS:\n\n  ```\n  .yourDropCapClass {\n    @include drop-cap(1rem);\n  }\n  ```\n\n  Your HTML:\n  ```\n  <p>\n    <span class=\"yourDropCapClass\">T</span>here are about 17,000 rips at beaches around Australia \n    on any given day. Chances are that – unless you’re a skilled surf lifesaver or an extremely \n    experienced surfer – you’d prefer not to be dicing with them.\n  </p>\n  ```\n*/\n/*\n  Drop cap\n\n  @param { Number with unit } normal-font-size - Size of most of the text in the drop-cap's \n  section\n*/\n/*\n  Fancy radio\n\n  April 9, 2018\n  ask sorenfrederiksen@fairfaxmedia.com.au\n\n  A pair of mix-ins to help users implement tab-like 'fancy' radio buttons.\n\n  All mix-ins result in radio button collections that can signify the buttons are deactivated (apply \n  the '.is--deactivated' class).\n\n  You can use this style as follows.\n\n  Example SCSS:\n  ```\n  .yourFancyRadioClass {\n    @include fancy-radio('standard');\n  }\n  ```\n\n  Example HTML:\n  ```\n  <div class=\"fancy-radio\">\n    <p>\n      Options label\n    </p>\n    <div>\n      <input \n        type=\"radio\" \n        name=\"options\" \n        id=\"option-1\"\n        value=\"option-1\"\n        checked>\n      <label \n        for=\"option-1\">\n        Option 1\n      </label>\n      <input \n        type=\"radio\" \n        name=\"options\" \n        id=\"option-2\"\n        value=\"option-2\">\n      <label \n        for=\"option-2\">\n        Option 2\n      </label>\n      <input \n        type=\"radio\" \n        name=\"options\" \n        id=\"option-3\"\n        value=\"option-3\">\n      <label \n        for=\"option-3\">\n        Option 3\n      </label>\n      <input \n        type=\"radio\" \n        name=\"options\" \n        id=\"option-4\"\n        value=\"option-4\">\n      <label \n        for=\"option-4\">\n        Option 4\n      </label>\n      <input \n        type=\"radio\" \n        name=\"options\" \n        id=\"option-5\"\n        value=\"option-5\">\n      <label \n        for=\"option-5\">\n        Option 5\n      </label>\n    </div>\n  </div>\n  ```\n*/\n/*\n  Fancy radio\n\n  @param { Color } color - Colour of the radio buttons' text\n  @param { Color } checked-color - Colour of the radio buttons' text when they are checked\n  @param { Color } background - Background colour of the radio buttons\n  @param { Color } checked-background - Background colour of the radio buttons when they are checked\n  @param { Color } hover-background - Background colour of the radio buttons when they are checked\n  @param { String } internal-border - Border between the radio buttons\n  @param { String } external-border - Border surrounding the collection of radio buttons\n  @param { Number with unit } font-size - Size of the radio buttons' text\n  @param { Color } label-color - Colour of the radio button group's label's text\n*/\n/*\n  Fancy radio\n\n  @param { String } style - String denoting style of fancy radio (e.g. 'standard', 'standard--dark')\n*/\n/*\n  Custom fancy radio\n\n  @param { Number with unit } font-size - Size of the radio buttons' text\n  @param { Color } color - Colour of the radio buttons' text\n  @param { Color } checked-color - Colour of the radio buttons' text when they are checked\n  @param { Color } background - Background colour of the radio buttons\n  @param { Color } checked-background - Background colour of the radio buttons when they are checked\n  @param { Color } hover-background - Background colour of the radio buttons when they are checked\n  @param { String } internal-border - Border between the radio buttons\n  @param { String } external-border - Border surrounding the collection of radio buttons\n  @param { Color } label-color - Colour of the radio button group's label's text\n*/\n/*\n  State rules are ways to describe how our modules or layouts will look when in a particular state. \n  Is it hidden or expanded? Is it active or inactive? They are about describing how a module or \n  layout looks on screens that are smaller or bigger. They are also about describing how a module \n  might look in different views like the home page or the inside page.\n*/\n* {\n  -webkit-box-sizing: border-box;\n          box-sizing: border-box; }\n\nhtml,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo {\n  font: inherit;\n  font-size: 100%;\n  margin: 0;\n  padding: 0;\n  vertical-align: baseline;\n  border: 0; }\n\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmenu,\nmain,\nnav,\nsection,\nsummary {\n  display: block; }\n\nbody {\n  line-height: 1; }\n\nol,\nul {\n  list-style: none; }\n\nblockquote,\nq {\n  quotes: none; }\n\nblockquote:before,\nblockquote:after,\nq:before,\nq:after {\n  content: '';\n  content: none; }\n\ntable {\n  border-spacing: 0;\n  border-collapse: collapse; }\n\nabbr {\n  text-decoration: none; }\n\nbutton,\ninput:not([type='radio']):not([type='checkbox']) {\n  -webkit-appearance: none; }\n\ninput[type=search] {\n  -webkit-appearance: textfield; }\n\nbutton {\n  font: inherit; }\n\n/*\n    Font family: Abril Titling\n  */\n@font-face {\n  font-family: 'Abril Titling Bold';\n  font-weight: 700;\n  font-style: normal;\n  font-display: swap;\n  /* https://css-tricks.com/really-dislike-fout-font-display-optional-might-jam */\n  src: url(\"lib/ffx-prez-styles/assets/fonts/abril-titling/AbrilTitling-Semibold.woff2\") format(\"woff2\"), url(\"lib/ffx-prez-styles/assets/fonts/abril-titling/AbrilTitling-Semibold.woff\") format(\"woff\"); }\n\n/*\n    Font family: PT Sans\n    Source: https://fonts.google.com/specimen/PT+Sans\n  */\n@font-face {\n  font-family: 'PT Sans';\n  font-weight: 400;\n  font-style: normal;\n  font-display: fallback;\n  src: url(\"lib/ffx-prez-styles/assets/fonts/pt-sans/PTSans-Regular.woff2\") format(\"woff2\"), url(\"lib/ffx-prez-styles/assets/fonts/pt-sans/PTSans-Regular.woff\") format(\"woff\"); }\n\n@font-face {\n  font-family: 'PT Sans';\n  font-weight: 700;\n  font-style: normal;\n  font-display: fallback;\n  src: url(\"lib/ffx-prez-styles/assets/fonts/pt-sans/PTSans-Bold.woff2\") format(\"woff2\"), url(\"lib/ffx-prez-styles/assets/fonts/pt-sans/PTSans-Bold.woff\") format(\"woff\"); }\n\n/*\n    Font family: PT Serifs\n    Source: https://fonts.google.com/specimen/PT+Serif;\n  */\n@font-face {\n  font-family: 'PT Serif';\n  font-weight: 400;\n  font-style: normal;\n  font-display: fallback;\n  src: url(\"lib/ffx-prez-styles/assets/fonts/pt-serif/PTSerif-Regular.woff2\") format(\"woff2\"), url(\"lib/ffx-prez-styles/assets/fonts/pt-serif/PTSerif-Regular.woff\") format(\"woff\"); }\n\n@font-face {\n  font-family: 'PT Serif';\n  font-weight: 700;\n  font-style: normal;\n  font-display: fallback;\n  src: url(\"lib/ffx-prez-styles/assets/fonts/pt-serif/PTSerif-Bold.woff2\") format(\"woff2\"), url(\"lib/ffx-prez-styles/assets/fonts/pt-serif/PTSerif-Bold.woff\") format(\"woff\"); }\n\nh1, h2, h3, h4, h5 {\n  font-family: 'Abril Titling Bold', 'Book Antiqua', Palatino, 'Palatino Linotype', 'Palatino LT STD', Georgia, serif;\n  font-weight: 700;\n  color: #0a1633; }\n\nh1 {\n  font-size: 32px;\n  font-size: 1.75rem;\n  line-height: 1.14286; }\n\nh2, h3 {\n  font-size: 20px;\n  font-size: 1.25rem;\n  line-height: 1.2; }\n\nh4, h5 {\n  font-size: 16px;\n  font-size: 1rem;\n  line-height: 1.25; }\n\np {\n  font-family: 'PT Serif', Georgia, Times, 'Times New Roman', serif;\n  color: #232323;\n  font-size: 17px;\n  font-size: 1.0625rem;\n  line-height: 1.41176;\n  margin-bottom: 16px; }\n\n@media only screen and (min-width: 768px) {\n  h1 {\n    font-size: 48px;\n    font-size: 3rem;\n    line-height: 1.16667; }\n  h2, h3 {\n    font-size: 28px;\n    font-size: 1.75rem;\n    line-height: 1.14286; }\n  h4 {\n    font-size: 20px;\n    font-size: 1.25rem;\n    line-height: 1.2; }\n  p {\n    font-family: 'PT Serif', Georgia, Times, 'Times New Roman', serif;\n    color: #232323;\n    font-size: 18px;\n    font-size: 1.125rem;\n    line-height: 1.77778; } }\n\n@media only screen and (min-width: 1024px) {\n  h2 {\n    font-size: 36px;\n    font-size: 2.25rem;\n    line-height: 1.11111; } }\n\n\n\n// WEBPACK FOOTER //\n// ./src/global-css/index.css","@charset \"UTF-8\";\n.video-react .video-react-control:before, .video-react .video-react-big-play-button:before {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n}\n\n.video-react .video-react-control:before, .video-react .video-react-big-play-button:before {\n  text-align: center;\n}\n\n@font-face {\n  font-family: \"video-react\";\n  src: url(data:application/vnd.ms-fontobject;base64,?#iefix) format(\"eot\");\n}\n@font-face {\n  font-family: \"video-react\";\n  src: url(data:application/font-woff;base64,d09GRgABAAAAABfIAAsAAAAAF3wAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABPUy8yAAABCAAAAGAAAABgDtEPymNtYXAAAAFoAAAAVAAAAFQOVuSnZ2FzcAAAAbwAAAAIAAAACAAAABBnbHlmAAABxAAAEtAAABLQx1vcUmhlYWQAABSUAAAANgAAADYLMledaGhlYQAAFMwAAAAkAAAAJAesBCZobXR4AAAU8AAAAJQAAACUiAAUz2xvY2EAABWEAAAATAAAAExLllAobWF4cAAAFdAAAAAgAAAAIAAqAMluYW1lAAAV8AAAAbYAAAG2W2rK6XBvc3QAABeoAAAAIAAAACAAAwAAAAMEAAGQAAUAAAKZAswAAACPApkCzAAAAesAMwEJAAAAAAAAAAAAAAAAAAAAARAAAAAAAAAAAAAAAAAAAAAAQAAA8iAEAAAAAAAEAAAAAAAAAQAAAAAAAAAAAAAAIAAAAAAAAwAAAAMAAAAcAAEAAwAAABwAAwABAAAAHAAEADgAAAAKAAgAAgACAAEAIPIg//3//wAAAAAAIPIA//3//wAB/+MOBAADAAEAAAAAAAAAAAAAAAEAAf//AA8AAQAAAAAAAAAAAAIAADc5AQAAAAABAAAAAAAAAAAAAgAANzkBAAAAAAEAAAAAAAAAAAACAAA3OQEAAAAAAQFWANYDKgMqAAIAAAkCAVYB1P4sAyr+1v7WAAIAVgBWA6oDqgACABYAAAEtATcyHgIVFA4CIyIuAjU0PgIBqgEA/wBWWJxzQ0Nzm1lYnHNDQ3ObAUDAwOpDc5tZWJxzQ0Nzm1lYnHNDAAAAAwBWAFYDqgOqABMAJwAqAAAlMj4CNTQuAiMiDgIVFB4CEzIeAhUUDgIjIi4CNTQ+AhMRBQIARn1dNjZdfEdGfV02Nl18R1icc0NDc5tZWJxzQ0NzmwMBAKo2XXxHRn1dNjZdfEdGfV02AwBDc5tZWJxzQ0Nzm1lYnHND/ZYBgMAAAAAAAgEAANYDAAMqAAMABwAAATMRIyERMxECVqqq/qqqAyr9rAJU/awAAAMAVgBWA6oDqgADAAcAGwAAAREjESMRIxETMh4CFRQOAiMiLgI1ND4CAoBWVFaAWJxzQ0Nzm1lYnHNDQ3ObAVYBVP6sAVT+rAJUQ3ObWVicc0NDc5tZWJxzQwAABABWAFYDqgOqAAMAFwArAC8AAAERMxEHMj4CNTQuAiMiDgIVFB4CEzIeAhUUDgIjIi4CNTQ+AgMRMxECKlaARn1dNjZdfEdGfV02Nl18R1icc0NDc5tZWJxzQ0NzmydWAVYBVP6srDZdfEdGfV02Nl18R0Z9XTYDAENzm1lYnHNDQ3ObWVicc0P9rAFU/qwAAQEAAQADAAMAAAMAAAEhESEBAAIA/gADAP4AAAIAagEAA1YDAAACAAUAAAkBESEJAQHqAWz+gP6UAWwCAAEA/gABAAEAAAAAAgCqAQADlgMAAAIABQAACQIhEQECKgFs/pT+gAFsAwD/AP8AAgD/AAAAAAACAQABAAMAAwAAAgAGAAAJAREBMxEjAZYBav4AVlYCAAEA/gACAP4AAAAAAAIBAAEAAwADAAADAAYAAAEzESMhEQECqlZW/lYBagMA/gACAP8AAAACAKoAgANWA9YARQBoAAABDgEVFAYxIzczFSMHMDY1NDI1NBY7ATIWFx4BFx4BFRQGBw4BBw4BBw4BIyImJy4BJy4BNTMUFjMyNj8BMDY9AS8BMCYjETIeAhUUDgIjIi4CNTMUHgIzMj4CNTQuAiMVJzcB+AMLBB4KZkoEBAYFAwgGDQMDCgMHCwEDAwUGBgcDAxEGBg0DAwsGCAoiDgwDBgMKBAQKCQNGfV02Nl18R0Z9XTZWKUVdNTReRSkpRV011tYBvAEFAgMDXh4mAQMDAwMDAwMDBgMHGQ4GDQMDDQYGAwMDAQEDAwIDBBYMCwkBAwgJAxoICgQBbjVde0dGfV02Nl18RzReRSkpRV01NF5FKazW1gAABACqAIADVgPWABsARgBNAHAAAAEUFjMyNj8BMDY9ATAmNTQmIyIGDwEwBh0BMBY3FAYPATAGIyIGIyImJy4BJy4BPQE0Nj8BMDYzMjYzMhYXHgEXHgEXHgEVByM1BzU3MxMyHgIVFA4CIyIuAjUzFB4CMzI+AjU0LgIjFSc3AjQOBgMIAwgEBBIEAwYDCAYGVAEDDBAGBg4GBg4GBggGCggBAw4OBgYOBgYOBgYKBgYDAwMBtigqTAYuRn1dNjZdfEdGfV02VilFXTU0XkUpKUVdNdbWAXgFCQEDCgkDVgkDBAoDAwgJA1YJJwkTBhoMBAEDAwYDBSgPHgkTBhoMBAEDAwYDAw4JCRAJaowMHhgBHjVde0dGfV02Nl18RzReRSkpRV01NF5FKazW1gAAAAQAqgCAA1YD1gAbAEYAowDGAAABFBYzMjY/ATA2PQE0JjU0JiMiBg8BMAYdATAWNxQGDwEwBiMiBiMiJicuAScuAT0BNDY/ATA2MzI2MzIWFx4BFx4BFx4BFSMyNj0BMCY1NCYrATAGIyIGHQEjNDYzMjYzMhYXHgEdATAGFRQGIyIGBx4BFx4BFRQGBw4BBw4BIyIGIyImJy4BJy4BNTMVMBYVFBY7ATA2MzI2PQEwJjU0JisBNRMyHgIVFA4CIyIuAjUzFB4CMzI+AjU0LgIjFSc3AjwQBgMGAwgEBBAEAwgDCAQEUAEDDBAGBg4GDxUKBgMDAwMDAwwQBgYMBgYOBgYKBgYDAwMB4gwSBAUDFgUDAwEsFg4DDgMNGQoICAQFAwMIAwYNAwMFAQMDBgMDDQYGDgYGCwMDDQYICiQEBQMWBQMDAQQFAxpmRn1dNjZdfEdGfV02VilFXTU0XkUpKUVdNdbWAXgGCAEDCgkDVgMGAwQKAwMICQNWCScJEwYaDAQLBQMOCQkQCR4JEwYaDAQBAwMGAwMOCQkQCQ4MCAUDAwEEBQMIDx8EBwUEGAoOCQMDBQcDAwcGBg4GBg0DAwoDAwUEAQMDAgMEGwsIBQMDAQQFAxYFAwMBHgFqNV17R0Z9XTY2XXxHNF5FKSlFXTU0XkUprNbWAAACAKoAgANWA9YAQgBlAAABDgEVFAYxIzczFSMHMDY1NDI1NBY7ATIWFx4BFx4BFRQGBw4BBw4BIyImJy4BJy4BNTMUFjMyNj8BMDY9AS8BMCYjJTQ+AjM1Fwc1Ig4CFRQeAjMyPgI1MxQOAiMiLgIB9AMLBBoKZkoEBAYFAwgGDQMDCgMHCwEDAwUGCBcPBg0DAwsGCAoiDgwDBgMKBAQKCQP+rjZdfEfW1jReRSkpRV01NF5FKVY2XXxHRn1dNgG8AQUCAwNeHiYBAwMDAwMDAwMGAwcZDgYNAwMNBggIAQMDAgMEFgwLCQEDCAkDGggKBBpGfF01rNbWrClFXTU0XkUpKUVdNUZ9XTY2XXwAAAQAqgCAA1YD1gAbAEYATQBwAAABFBYzMjY/ATA2PQEwJjU0JiMiBg8BMAYdATAWNxQGDwEwBiMiBiMiJicuAScuAT0BNDY/ATA2MzI2MzIWFx4BFx4BFx4BFQcjNQc1NzMFND4CMzUXBzUiDgIVFB4CMzI+AjUzFA4CIyIuAgI0DgYDCAMIBAQSBAMGAwgGBlABAwwQBgYOBgYOBgYIBgoIAQMODgYGDgYGDgYGCgYGAwMDAbIoKkwG/tg2XXxH1tY0XkUpKUVdNTReRSlWNl18R0Z9XTYBeAUJAQMKCQNWCQMECgMDCAkDVgknCRMGGgwEAQMDBgMFKA8eCRMGGgwEAQMDBgMDDgkJEAlqjAweGDZGfF01rNbWrClFXTU0XkUpKUVdNUZ9XTY2XXwAAAAEAKoAgANWA9YAIgA+AGkAxgAAEzQ+AjM1Fwc1Ig4CFRQeAjMyPgI1MxQOAiMiLgIFFBYzMjY/ATA2PQEwJjU0JiMiBg8BMAYdATAWNxQGDwEwBiMiBiMiJicuAScuAT0BNDY/ATA2MzI2MzIWFx4BFx4BFx4BFSMyNj0BMCY1NCYrATAGIyIGHQEjNDYzMjYzMhYXHgEdATAGFRQGIyIGBx4BFx4BFRQGBw4BBw4BIyIGIyImJy4BJy4BNTMVMBYVFBY7ATA2MzI2PQEwJjU0JisBNao2XXxH1tY0XkUpKUVdNTReRSlWNl18R0Z9XTYBjg4GAwgDCAQEEgQDBgMIBARUAQMMEAYGDgYPFQoGAwMDAwMDDBAGBgwGBg4GBgoGBgMDAwHiDBIEBQMWBQMDASwWDgMOAw0ZCggIBAUDAwgDBg0DAwUBAwMGAwMNBgYOBgYLAwMNBggKJAQFAxYFAwMBBAUDGgHWRnxdNazW1qwpRV01NF5FKSlFXTVGfV02Nl18FwUJAQMKCQNWCQMECgMDCAkDVgknCRMGGgwECwUDDgkJEAkeCRMGGgwEAQMDBgMDDgkJEAkODAgFAwMBBAUDCA8fBAcFBBgKDgkDAwUHAwMHBgYOBgYNAwMKAwMFBAEDAwIDBBsLCAUDAwEEBQMWBQMDAR4AAAAABACAAIADgAOAAAIAFAAmAC4AAAEVJycBBycOAQc1PgE3JxEnIxEzJwE0LgInNR4DFRQGByc+ASccAQcnNR4BAgBa8ALKNlgiTiwbMBW21qrKygKqHzlNL0BuTy0XFUAKDGoCaDA6A1a0WoT9NjZYGygLWAcaEbb+4NYBAMr+tjNcSzYOWA5FY3xEMFsnQhk5HgcNBmheGFsAAAAAAQEqAKoCqgNWAAUAAAEzNxEnIwEqrNTUrAKA1v1U1gACANYAqgMWA1YABQAMAAATMzcRJyMlFAYHER4B1qrW1qoCQDwwMDwCgNb9VNaAOVsYAVgYWwAAAAMAgACKA4ADdgAVABwAIgAAAR4DFRQOAgc1PgM1NC4CJxMUBgcRHgElMzcRJyMCVkBuTy0tT21BLk45Hx85TS9qOjAwOv3AqtbWqgN2DkVjfEREe2NGDlgNN0tcMzNcSzYO/uI5WxgBWBhbR9b9VNYAAAAABADWANYDKgMqAAUACwARABcAAAEzFSM1IxM1MxUjNQE1MxUjFR0BMxUjNQJW1FSAgFTU/oDUgIDUAyrUgP5UgNRUASzUVICsgFTUAAQA1gDWAyoDKgAFAAsAEQAXAAABMxUjNTMDNTMVIxUBNTMVIzURNTMVIzUCqoDUVFTUgP6sVNTUVAKqVNT9rNRUgAHUgNRU/qxU1IAAAAAAAwCAAKoDgANWABcALwA/AAABNTQmKwEiBh0BFBY7ATI2PQEjFSM1MxUjNTQmKwEiBh0BFBY7ATI2PQEjFSM1MxUBMhYVERQGIyEiJjURNDYzAwAYEoASGhoSgBIYQFZW6hoSgBIYGBKAEhpAVlYBlCI0MyP9rCQyMiQCKiwSGBgSrBIYGBIsFoAWLBIYGBKsEhgYEiwWgBYBLDMj/gAiNDMjAgAiNAAABACAAIADgAOAAAMADQAZACkAAAE1MxUnETMyNj0BNCYjAREjFSM1IxEzNTMVATIWFREUBiMhIiY1ETQ2MwJqVpasEhgYEv8AQFZAQFYBlCI0MyP9rCQyMiQBwICAwP8AGBKsEhj/AAEAamr/AFZWAgAzI/2sIjQzIwJUIjQAAAACAGQAVgOcA6oACwBZAAABMjY1NCYjIgYVFBYlFx4BDwEOAS8BDgEPAQ4BKwEiJi8BLgEnBwYmLwEmNj8BLgE1PAE3Jy4BPwE+AR8BPgE/AT4BOwEyFh8BHgEXNzYWHwEWBg8BHgEVHAECAD1ZWD49WVgBfFoGAgRWBA4IahAkFBABCwisBwsCEBMkEWoHDgVWBAIGWgEBAloGAgRWBA4IahAkFBABCwisBwsCEBMkEWoHDgVWBAIGWgEBAWpYPj1ZWD49WWxGBBAIlAcEAyoMFghwBwsKCHAHFQ4qAwMIlAcQBUYKFQsKFQtGBBAIlAcEAyoMFghwBwsKCHAHFQ4qAwMIlAcQBUYKFQsKFQAAAAEAgABYA4ADqgAzAAABMhYVFAYjIiY1PAE3JQ4BIyImNTQ2MzIWFyUuATU0NjMyFhUUBiMiJicFHgEVFAYHBT4BAwAzSUkzM0kC/tISLBo0TEs1GS0SASwBA0s1NExLNRktEv7UAQMCAgEwECwBUkkzM0tLMwcPBrAQEks1NEwREa4HDwg0TEs1NEwTEbAHDwgHDwiwDxEAAwBWAFYDqgOqAAMABwAbAAABNSMVExEjERMyHgIVFA4CIyIuAjU0PgICKlRUVCpYnHNDQ3ObWVicc0NDc5sCgFZW/qoBAP8AAoBDc5tZWJxzQ0Nzm1lYnHNDAAAEAFYAVgOqA6oAAwAXACsALwAAATUzFQMyPgI1NC4CIyIOAhUUHgITMh4CFRQOAiMiLgI1ND4CExEzEQHWVCpGfV02Nl18R0Z9XTY2XXxHWJxzQ0Nzm1lYnHNDQ3ObL1QCgFZW/io2XXxHRn1dNjZdfEdGfV02AwBDc5tZWJxzQ0Nzm1lYnHND/YABAP8AAAABANYA1gMqAyoACwAAAQcXBycHJzcnNxc3Ayru7jzu7jzu7jzu7gLu7u487u487u487u4AAQBVAFUDqwOrABQAABMUHgIzMj4CNTQuAiMiDgIVVUN0nFhYnHRDQ3ScWFicdEMCAFicdENDdJxYWJx0Q0N0nFgAAAACAFUAVQOrA6sAFAAoAAABIg4CFRQeAjMyPgI1NC4CIxEiLgI1ND4CMzIeAhUUDgICAFicdENDdJxYWJx0Q0N0nFhHfF01NV18R0d8XTU1XXwDq0N0nFhYnHRDQ3ScWFicdEP9ADVdfEdHfF01NV18R0d8XTUAAAADAFUAVQOrA6sAFAAoADQAAAEiDgIVFB4CMzI+AjU0LgIjESIuAjU0PgIzMh4CFRQOAhMUBiMiJjU0NjMyFgIAWJx0Q0N0nFhYnHRDQ3ScWEd8XTU1XXxHR3xdNTVdfDlLNTVLSzU1SwOrQ3ScWFicdENDdJxYWJx0Q/0ANV18R0d8XTU1XXxHR3xdNQFVNUtLNTVLSwAAAAEAAAABAADxFM6JXw889QALBAAAAAAA1DSJZQAAAADUNIllAAAAAAOrA9YAAAAIAAIAAAAAAAAAAQAABAAAAAAABAAAAAAAA6sAAQAAAAAAAAAAAAAAAAAAACUEAAAAAAAAAAAAAAAAAAAABAABVgQAAFYEAABWBAABAAQAAFYEAABWBAABAAQAAGoEAACqBAABAAQAAQAEAACqBAAAqgQAAKoEAACqBAAAqgQAAKoEAACABAABKgQAANYEAACABAAA1gQAANYEAACABAAAgAQAAGQEAACABAAAVgQAAFYEAADWBAAAVQQAAFUEAABVAAAAAAAKABQAHgAsAFQAlgCqANgBIAEuAUQBWgFwAYQCEAKoA6YELgTGBcQGEgYiBj4GeAaeBsYHGgdaB+IILghcCKQIvgjgCRwJaAABAAAAJQDHAAQAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAADgCuAAEAAAAAAAEACwAAAAEAAAAAAAIABwCEAAEAAAAAAAMACwBCAAEAAAAAAAQACwCZAAEAAAAAAAUACwAhAAEAAAAAAAYACwBjAAEAAAAAAAoAGgC6AAMAAQQJAAEAFgALAAMAAQQJAAIADgCLAAMAAQQJAAMAFgBNAAMAAQQJAAQAFgCkAAMAAQQJAAUAFgAsAAMAAQQJAAYAFgBuAAMAAQQJAAoANADUdmlkZW8tcmVhY3QAdgBpAGQAZQBvAC0AcgBlAGEAYwB0VmVyc2lvbiAxLjAAVgBlAHIAcwBpAG8AbgAgADEALgAwdmlkZW8tcmVhY3QAdgBpAGQAZQBvAC0AcgBlAGEAYwB0dmlkZW8tcmVhY3QAdgBpAGQAZQBvAC0AcgBlAGEAYwB0UmVndWxhcgBSAGUAZwB1AGwAYQBydmlkZW8tcmVhY3QAdgBpAGQAZQBvAC0AcgBlAGEAYwB0Rm9udCBnZW5lcmF0ZWQgYnkgSWNvTW9vbi4ARgBvAG4AdAAgAGcAZQBuAGUAcgBhAHQAZQBkACAAYgB5ACAASQBjAG8ATQBvAG8AbgAuAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==) format(\"woff\"), url(data:application/x-font-ttf;base64,) format(\"truetype\");\n  font-weight: normal;\n  font-style: normal;\n}\n.video-react-icon, .video-react .video-react-bezel .video-react-bezel-icon, .video-react .video-react-volume-level, .video-react .video-react-mute-control,\n.video-react .video-react-volume-menu-button, .video-react .video-react-play-control, .video-react .video-react-play-progress, .video-react .video-react-big-play-button {\n  /* use !important to prevent issues with browser extensions that change fonts */\n  font-family: \"video-react\" !important;\n  speak: none;\n  font-style: normal;\n  font-weight: normal;\n  font-variant: normal;\n  text-transform: none;\n  line-height: 1;\n  /* Better Font Rendering =========== */\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n.video-react-icon-play-arrow:before, .video-react .video-react-bezel .video-react-bezel-icon-play:before, .video-react .video-react-play-control:before, .video-react .video-react-big-play-button:before {\n  content: \"\";\n}\n\n.video-react-icon-play-circle-filled:before {\n  content: \"\";\n}\n\n.video-react-icon-play-circle-outline:before {\n  content: \"\";\n}\n\n.video-react-icon-pause:before, .video-react .video-react-bezel .video-react-bezel-icon-pause:before, .video-react .video-react-play-control.video-react-playing:before {\n  content: \"\";\n}\n\n.video-react-icon-pause-circle-filled:before {\n  content: \"\";\n}\n\n.video-react-icon-pause-circle-outline:before {\n  content: \"\";\n}\n\n.video-react-icon-stop:before {\n  content: \"\";\n}\n\n.video-react-icon-fast-rewind:before, .video-react .video-react-bezel .video-react-bezel-icon-fast-rewind:before {\n  content: \"\";\n}\n\n.video-react-icon-fast-forward:before, .video-react .video-react-bezel .video-react-bezel-icon-fast-forward:before {\n  content: \"\";\n}\n\n.video-react-icon-skip-previous:before {\n  content: \"\";\n}\n\n.video-react-icon-skip-next:before {\n  content: \"\";\n}\n\n.video-react-icon-replay-5:before, .video-react .video-react-bezel .video-react-bezel-icon-replay-5:before {\n  content: \"\";\n}\n\n.video-react-icon-replay-10:before, .video-react .video-react-bezel .video-react-bezel-icon-replay-10:before {\n  content: \"\";\n}\n\n.video-react-icon-replay-30:before, .video-react .video-react-bezel .video-react-bezel-icon-replay-30:before {\n  content: \"\";\n}\n\n.video-react-icon-forward-5:before, .video-react .video-react-bezel .video-react-bezel-icon-forward-5:before {\n  content: \"\";\n}\n\n.video-react-icon-forward-10:before, .video-react .video-react-bezel .video-react-bezel-icon-forward-10:before {\n  content: \"\";\n}\n\n.video-react-icon-forward-30:before, .video-react .video-react-bezel .video-react-bezel-icon-forward-30:before {\n  content: \"\";\n}\n\n.video-react-icon-volume-off:before, .video-react .video-react-bezel .video-react-bezel-icon-volume-off:before, .video-react .video-react-mute-control.video-react-vol-muted:before,\n.video-react .video-react-volume-menu-button.video-react-vol-muted:before {\n  content: \"\";\n}\n\n.video-react-icon-volume-mute:before, .video-react .video-react-mute-control.video-react-vol-0:before,\n.video-react .video-react-volume-menu-button.video-react-vol-0:before {\n  content: \"\";\n}\n\n.video-react-icon-volume-down:before, .video-react .video-react-bezel .video-react-bezel-icon-volume-down:before, .video-react .video-react-mute-control.video-react-vol-2:before,\n.video-react .video-react-volume-menu-button.video-react-vol-2:before, .video-react .video-react-mute-control.video-react-vol-1:before,\n.video-react .video-react-volume-menu-button.video-react-vol-1:before {\n  content: \"\";\n}\n\n.video-react-icon-volume-up:before, .video-react .video-react-bezel .video-react-bezel-icon-volume-up:before, .video-react .video-react-mute-control:before,\n.video-react .video-react-volume-menu-button:before {\n  content: \"\";\n}\n\n.video-react-icon-fullscreen:before {\n  content: \"\";\n}\n\n.video-react-icon-fullscreen-exit:before {\n  content: \"\";\n}\n\n.video-react-icon-closed-caption:before {\n  content: \"\";\n}\n\n.video-react-icon-hd:before {\n  content: \"\";\n}\n\n.video-react-icon-settings:before {\n  content: \"\";\n}\n\n.video-react-icon-share:before {\n  content: \"\";\n}\n\n.video-react-icon-info:before {\n  content: \"\";\n}\n\n.video-react-icon-info-outline:before {\n  content: \"\";\n}\n\n.video-react-icon-close:before {\n  content: \"\";\n}\n\n.video-react-icon-circle:before, .video-react .video-react-volume-level:before, .video-react .video-react-play-progress:before {\n  content: \"\";\n}\n\n.video-react-icon-circle-outline:before {\n  content: \"\";\n}\n\n.video-react-icon-circle-inner-circle:before {\n  content: \"\";\n}\n\n.video-react {\n  display: block;\n  vertical-align: top;\n  -webkit-box-sizing: border-box;\n          box-sizing: border-box;\n  color: #fff;\n  background-color: #000;\n  position: relative;\n  font-size: 10px;\n  line-height: 1;\n  font-family: serif, Times, \"Times New Roman\";\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n}\n.video-react:-moz-full-screen {\n  position: absolute;\n}\n.video-react:-webkit-full-screen {\n  width: 100% !important;\n  height: 100% !important;\n}\n.video-react *,\n.video-react *:before,\n.video-react *:after {\n  -webkit-box-sizing: inherit;\n          box-sizing: inherit;\n}\n.video-react ul {\n  font-family: inherit;\n  font-size: inherit;\n  line-height: inherit;\n  list-style-position: outside;\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n.video-react.video-react-fluid, .video-react.video-react-16-9, .video-react.video-react-4-3 {\n  width: 100%;\n  max-width: 100%;\n  height: 0;\n}\n.video-react.video-react-16-9 {\n  padding-top: 56.25%;\n}\n.video-react.video-react-4-3 {\n  padding-top: 75%;\n}\n.video-react.video-react-fill {\n  width: 100%;\n  height: 100%;\n}\n.video-react .video-react-video {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n}\n.video-react.video-react-fullscreen {\n  width: 100% !important;\n  height: 100% !important;\n  padding-top: 0 !important;\n}\n.video-react.video-react-fullscreen.video-react-user-inactive {\n  cursor: none;\n}\n\nbody.video-react-full-window {\n  padding: 0;\n  margin: 0;\n  height: 100%;\n  overflow-y: auto;\n}\nbody.video-react-full-window .video-react-fullscreen {\n  position: fixed;\n  overflow: hidden;\n  z-index: 1000;\n  left: 0;\n  top: 0;\n  bottom: 0;\n  right: 0;\n}\n\n.video-react button {\n  background: none;\n  border: none;\n  color: inherit;\n  display: inline-block;\n  cursor: pointer;\n  overflow: visible;\n  font-size: inherit;\n  line-height: inherit;\n  text-transform: none;\n  text-decoration: none;\n  -webkit-transition: none;\n  -o-transition: none;\n  transition: none;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n}\n\n.video-react .video-react-loading-spinner {\n  display: none;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  margin: -25px 0 0 -25px;\n  opacity: 0.85;\n  text-align: left;\n  border: 6px solid rgba(43, 51, 63, 0.7);\n  -webkit-box-sizing: border-box;\n          box-sizing: border-box;\n  background-clip: padding-box;\n  width: 50px;\n  height: 50px;\n  border-radius: 25px;\n}\n.video-react .video-react-loading-spinner:before, .video-react .video-react-loading-spinner:after {\n  content: \"\";\n  position: absolute;\n  margin: -6px;\n  -webkit-box-sizing: inherit;\n          box-sizing: inherit;\n  width: inherit;\n  height: inherit;\n  border-radius: inherit;\n  opacity: 1;\n  border: inherit;\n  border-color: transparent;\n  border-top-color: white;\n  -webkit-animation: video-react-spinner-spin 1.1s cubic-bezier(0.6, 0.2, 0, 0.8) infinite, video-react-spinner-fade 1.1s linear infinite;\n  animation: video-react-spinner-spin 1.1s cubic-bezier(0.6, 0.2, 0, 0.8) infinite, video-react-spinner-fade 1.1s linear infinite;\n}\n\n.video-react-seeking .video-react-loading-spinner,\n.video-react-waiting .video-react-loading-spinner {\n  display: block;\n}\n\n.video-react-seeking .video-react-loading-spinner:before,\n.video-react-waiting .video-react-loading-spinner:before {\n  border-top-color: white;\n}\n\n.video-react-seeking .video-react-loading-spinner:after,\n.video-react-waiting .video-react-loading-spinner:after {\n  border-top-color: white;\n  -webkit-animation-delay: 0.44s;\n  animation-delay: 0.44s;\n}\n\n@keyframes video-react-spinner-spin {\n  100% {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg);\n  }\n}\n@-webkit-keyframes video-react-spinner-spin {\n  100% {\n    -webkit-transform: rotate(360deg);\n  }\n}\n@keyframes video-react-spinner-fade {\n  0% {\n    border-top-color: #73859f;\n  }\n  20% {\n    border-top-color: #73859f;\n  }\n  35% {\n    border-top-color: white;\n  }\n  60% {\n    border-top-color: #73859f;\n  }\n  100% {\n    border-top-color: #73859f;\n  }\n}\n@-webkit-keyframes video-react-spinner-fade {\n  0% {\n    border-top-color: #73859f;\n  }\n  20% {\n    border-top-color: #73859f;\n  }\n  35% {\n    border-top-color: white;\n  }\n  60% {\n    border-top-color: #73859f;\n  }\n  100% {\n    border-top-color: #73859f;\n  }\n}\n.video-react .video-react-big-play-button {\n  font-size: 3em;\n  line-height: 1.5em;\n  height: 1.5em;\n  width: 3em;\n  display: block;\n  position: absolute;\n  top: 10px;\n  left: 10px;\n  padding: 0;\n  cursor: pointer;\n  opacity: 1;\n  border: 0.06666em solid #fff;\n  background-color: #2B333F;\n  background-color: rgba(43, 51, 63, 0.7);\n  border-radius: 0.3em;\n  -webkit-transition: all 0.4s;\n  -o-transition: all 0.4s;\n  transition: all 0.4s;\n}\n.video-react .video-react-big-play-button.video-react-big-play-button-center {\n  top: 50%;\n  left: 50%;\n  margin-top: -0.75em;\n  margin-left: -1.5em;\n}\n.video-react .video-react-big-play-button.big-play-button-hide {\n  display: none;\n}\n.video-react:hover .video-react-big-play-button,\n.video-react .video-react-big-play-button:focus {\n  outline: 0;\n  border-color: #fff;\n  background-color: #73859f;\n  background-color: rgba(115, 133, 159, 0.5);\n  -webkit-transition: all 0s;\n  -o-transition: all 0s;\n  transition: all 0s;\n}\n\n.video-react-menu-button {\n  cursor: pointer;\n}\n.video-react-menu-button.video-react-disabled {\n  cursor: default;\n}\n\n.video-react-menu .video-react-menu-content {\n  display: block;\n  padding: 0;\n  margin: 0;\n  overflow: auto;\n  font-family: serif, Times, \"Times New Roman\";\n}\n.video-react-menu li {\n  list-style: none;\n  margin: 0;\n  padding: 0.2em 0;\n  line-height: 1.4em;\n  font-size: 1.2em;\n  text-align: center;\n  text-transform: lowercase;\n}\n.video-react-menu li:focus, .video-react-menu li:hover {\n  outline: 0;\n  background-color: #73859f;\n  background-color: rgba(115, 133, 159, 0.5);\n}\n.video-react-menu li.video-react-selected, .video-react-menu li.video-react-selected:focus, .video-react-menu li.video-react-selected:hover {\n  background-color: #fff;\n  color: #2B333F;\n}\n.video-react-menu li.vjs-menu-title {\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 1em;\n  line-height: 2em;\n  padding: 0;\n  margin: 0 0 0.3em 0;\n  font-weight: bold;\n  cursor: default;\n}\n\n.video-react-scrubbing .vjs-menu-button:hover .video-react-menu {\n  display: none;\n}\n\n.video-react .video-react-menu-button-popup .video-react-menu {\n  display: none;\n  position: absolute;\n  bottom: 0;\n  width: 10em;\n  left: -3em;\n  height: 0em;\n  margin-bottom: 1.5em;\n  border-top-color: rgba(43, 51, 63, 0.7);\n}\n.video-react .video-react-menu-button-popup .video-react-menu .video-react-menu-content {\n  background-color: #2B333F;\n  background-color: rgba(43, 51, 63, 0.7);\n  position: absolute;\n  width: 100%;\n  bottom: 1.5em;\n  max-height: 15em;\n}\n\n.video-react-menu-button-popup .video-react-menu.video-react-lock-showing {\n  display: block;\n}\n\n.video-react .video-react-menu-button-inline {\n  -webkit-transition: all 0.4s;\n  -o-transition: all 0.4s;\n  transition: all 0.4s;\n  overflow: hidden;\n}\n.video-react .video-react-menu-button-inline:before {\n  width: 2.222222222em;\n}\n.video-react .video-react-menu-button-inline:hover, .video-react .video-react-menu-button-inline:focus, .video-react .video-react-menu-button-inline.video-react-slider-active {\n  width: 12em;\n}\n.video-react .video-react-menu-button-inline:hover .video-react-menu, .video-react .video-react-menu-button-inline:focus .video-react-menu, .video-react .video-react-menu-button-inline.video-react-slider-active .video-react-menu {\n  display: block;\n  opacity: 1;\n}\n.video-react .video-react-menu-button-inline.video-react-slider-active {\n  -webkit-transition: none;\n  -o-transition: none;\n  transition: none;\n}\n.video-react .video-react-menu-button-inline .video-react-menu {\n  opacity: 0;\n  height: 100%;\n  width: auto;\n  position: absolute;\n  left: 4em;\n  top: 0;\n  padding: 0;\n  margin: 0;\n  -webkit-transition: all 0.4s;\n  -o-transition: all 0.4s;\n  transition: all 0.4s;\n}\n.video-react .video-react-menu-button-inline .video-react-menu-content {\n  width: auto;\n  height: 100%;\n  margin: 0;\n  overflow: hidden;\n}\n\n.video-react-no-flex .video-react-menu-button-inline .video-react-menu {\n  display: block;\n  opacity: 1;\n  position: relative;\n  width: auto;\n}\n.video-react-no-flex .video-react-menu-button-inline:hover, .video-react-no-flex .video-react-menu-button-inline:focus, .video-react-no-flex .video-react-menu-button-inline.video-react-slider-active {\n  width: auto;\n}\n\n.video-react .video-react-poster {\n  display: inline-block;\n  vertical-align: middle;\n  background-repeat: no-repeat;\n  background-position: 50% 50%;\n  background-size: contain;\n  background-color: #000000;\n  cursor: pointer;\n  margin: 0;\n  padding: 0;\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  height: 100%;\n}\n.video-react .video-react-poster img {\n  display: block;\n  vertical-align: middle;\n  margin: 0 auto;\n  max-height: 100%;\n  padding: 0;\n  width: 100%;\n}\n\n.video-react .video-react-slider {\n  outline: 0;\n  position: relative;\n  cursor: pointer;\n  padding: 0;\n  margin: 0 0.45em 0 0.45em;\n  background-color: #73859f;\n  background-color: rgba(115, 133, 159, 0.5);\n}\n.video-react .video-react-slider:focus {\n  -webkit-box-shadow: 0 0 1em #fff;\n  box-shadow: 0 0 1em #fff;\n}\n\n.video-react .video-react-control {\n  outline: none;\n  position: relative;\n  text-align: center;\n  margin: 0;\n  padding: 0;\n  height: 100%;\n  width: 4em;\n  -ms-flex: none;\n  flex: none;\n}\n.video-react .video-react-control:before {\n  font-size: 1.8em;\n  line-height: 1.67;\n}\n.video-react .video-react-control:focus:before, .video-react .video-react-control:hover:before, .video-react .video-react-control:focus {\n  text-shadow: 0em 0em 1em #fff, 0em 0em 0.5em #fff;\n}\n\n.video-react .video-react-control-text {\n  border: 0;\n  clip: rect(0 0 0 0);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 1px;\n}\n\n.video-react-no-flex .video-react-control {\n  display: table-cell;\n  vertical-align: middle;\n}\n\n.video-react .video-react-control-bar {\n  display: none;\n  width: 100%;\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  height: 3em;\n  background-color: #2B333F;\n  background-color: rgba(43, 51, 63, 0.7);\n}\n\n.video-react-has-started .video-react-control-bar {\n  display: -ms-flexbox;\n  display: flex;\n  visibility: visible;\n  opacity: 1;\n  -webkit-transition: visibility 0.1s, opacity 0.1s;\n  -o-transition: visibility 0.1s, opacity 0.1s;\n  transition: visibility 0.1s, opacity 0.1s;\n}\n\n.video-react-has-started.video-react-user-inactive.video-react-playing .video-react-control-bar.video-react-control-bar-auto-hide {\n  visibility: visible;\n  opacity: 0;\n  -webkit-transition: visibility 1s, opacity 1s;\n  -o-transition: visibility 1s, opacity 1s;\n  transition: visibility 1s, opacity 1s;\n}\n\n.video-react-controls-disabled .video-react-control-bar,\n.video-react-using-native-controls .video-react-control-bar,\n.video-react-error .video-react-control-bar {\n  display: none !important;\n}\n\n.video-react-audio.video-react-has-started.video-react-user-inactive.video-react-playing .video-react-control-bar {\n  opacity: 1;\n  visibility: visible;\n}\n\n.video-react-has-started.video-react-no-flex .video-react-control-bar {\n  display: table;\n}\n\n.video-react .video-react-progress-control {\n  -ms-flex: auto;\n  flex: auto;\n  display: -ms-flexbox;\n  display: flex;\n  -ms-flex-align: center;\n  align-items: center;\n  min-width: 4em;\n}\n\n.video-react-live .video-react-progress-control {\n  display: none;\n}\n\n.video-react .video-react-progress-holder {\n  -ms-flex: auto;\n  flex: auto;\n  -webkit-transition: all 0.2s;\n  -o-transition: all 0.2s;\n  transition: all 0.2s;\n  height: 0.3em;\n}\n\n.video-react .video-react-progress-control:hover .video-react-progress-holder {\n  font-size: 1.6666666667em;\n}\n\n/* If we let the font size grow as much as everything else, the current time tooltip ends up\n ginormous. If you'd like to enable the current time tooltip all the time, this should be disabled\n to avoid a weird hitch when you roll off the hover. */\n.video-react .video-react-progress-control:hover .video-react-time-tooltip,\n.video-react .video-react-progress-control:hover .video-react-mouse-display:after,\n.video-react .video-react-progress-control:hover .video-react-play-progress:after {\n  visibility: visible;\n  font-size: 0.6em;\n}\n\n.video-react .video-react-progress-holder .video-react-play-progress,\n.video-react .video-react-progress-holder .video-react-load-progress,\n.video-react .video-react-progress-holder .video-react-tooltip-progress-bar,\n.video-react .video-react-progress-holder .video-react-load-progress div {\n  position: absolute;\n  display: block;\n  height: 0.3em;\n  margin: 0;\n  padding: 0;\n  width: 0;\n  left: 0;\n  top: 0;\n}\n\n.video-react .video-react-play-progress {\n  background-color: #fff;\n}\n.video-react .video-react-play-progress:before {\n  position: absolute;\n  top: -0.3333333333em;\n  right: -0.5em;\n  font-size: 0.9em;\n}\n\n.video-react .video-react-time-tooltip,\n.video-react .video-react-mouse-display:after,\n.video-react .video-react-play-progress:after {\n  visibility: hidden;\n  pointer-events: none;\n  position: absolute;\n  top: -3.4em;\n  right: -1.9em;\n  font-size: 0.9em;\n  color: #000;\n  content: attr(data-current-time);\n  padding: 6px 8px 8px 8px;\n  background-color: #fff;\n  background-color: rgba(255, 255, 255, 0.8);\n  border-radius: 0.3em;\n}\n\n.video-react .video-react-time-tooltip,\n.video-react .video-react-play-progress:before,\n.video-react .video-react-play-progress:after {\n  z-index: 1;\n}\n\n.video-react .video-react-progress-control .video-react-keep-tooltips-inside:after {\n  display: none;\n}\n\n.video-react .video-react-load-progress {\n  background: #bfc7d3;\n  background: rgba(115, 133, 159, 0.5);\n}\n\n.video-react .video-react-load-progress div {\n  background: white;\n  background: rgba(115, 133, 159, 0.75);\n}\n\n.video-react.video-react-no-flex .video-react-progress-control {\n  width: auto;\n}\n\n.video-react .video-react-time-tooltip {\n  display: inline-block;\n  height: 2.4em;\n  position: relative;\n  float: right;\n  right: -1.9em;\n}\n\n.video-react .video-react-tooltip-progress-bar {\n  visibility: hidden;\n}\n\n.video-react .video-react-progress-control .video-react-mouse-display {\n  display: none;\n  position: absolute;\n  width: 1px;\n  height: 100%;\n  background-color: #000;\n  z-index: 1;\n}\n\n.video-react-no-flex .video-react-progress-control .video-react-mouse-display {\n  z-index: 0;\n}\n\n.video-react .video-react-progress-control:hover .video-react-mouse-display {\n  display: block;\n}\n\n.video-react.video-react-user-inactive .video-react-progress-control .video-react-mouse-display,\n.video-react.video-react-user-inactive .video-react-progress-control .video-react-mouse-display:after {\n  visibility: hidden;\n  opacity: 0;\n  -webkit-transition: visibility 1s, opacity 1s;\n  -o-transition: visibility 1s, opacity 1s;\n  transition: visibility 1s, opacity 1s;\n}\n\n.video-react.video-react-user-inactive.video-react-no-flex .video-react-progress-control .video-react-mouse-display,\n.video-react.video-react-user-inactive.video-react-no-flex .video-react-progress-control .video-react-mouse-display:after {\n  display: none;\n}\n\n.video-react .video-react-mouse-display .video-react-time-tooltip,\n.video-react .video-react-progress-control .video-react-mouse-display:after {\n  color: #fff;\n  background-color: #000;\n  background-color: rgba(0, 0, 0, 0.8);\n}\n\n.video-react .video-react-play-control {\n  cursor: pointer;\n  -ms-flex: none;\n  flex: none;\n}\n.video-react .video-react-fullscreen-control {\n  cursor: pointer;\n  -ms-flex: none;\n  flex: none;\n}\n\n.video-react.video-react-fullscreen {\n  position: fixed;\n  left: 0;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  z-index: 9999;\n}\n\n.video-react .video-react-time-control {\n  -ms-flex: none;\n  flex: none;\n  font-size: 1em;\n  line-height: 3em;\n  min-width: 2em;\n  width: auto;\n  padding-left: 1em;\n  padding-right: 1em;\n}\n.video-react .video-react-time-divider {\n  line-height: 3em;\n  min-width: initial;\n  padding: 0;\n}\n\n.video-react .video-react-mute-control,\n.video-react .video-react-volume-menu-button {\n  cursor: pointer;\n  -ms-flex: none;\n  flex: none;\n}\n.video-react .video-react-volume-control {\n  width: 5em;\n  -ms-flex: none;\n  flex: none;\n  display: -ms-flexbox;\n  display: flex;\n  -ms-flex-align: center;\n  align-items: center;\n}\n.video-react .video-react-volume-bar {\n  margin: 1.35em 0.45em;\n}\n.video-react .video-react-volume-bar.video-react-slider-horizontal {\n  width: 5em;\n  height: 0.3em;\n}\n.video-react .video-react-volume-bar.video-react-slider-horizontal .video-react-volume-level {\n  width: 100%;\n}\n.video-react .video-react-volume-bar.video-react-slider-vertical {\n  width: 0.3em;\n  height: 5em;\n  margin: 1.35em auto;\n}\n.video-react .video-react-volume-bar.video-react-slider-vertical .video-react-volume-level {\n  height: 100%;\n}\n.video-react .video-react-volume-level {\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  background-color: #fff;\n}\n.video-react .video-react-volume-level:before {\n  position: absolute;\n  font-size: 0.9em;\n}\n.video-react .video-react-slider-vertical .video-react-volume-level {\n  width: 0.3em;\n}\n.video-react .video-react-slider-vertical .video-react-volume-level:before {\n  top: -0.5em;\n  left: -0.3em;\n}\n.video-react .video-react-slider-horizontal .video-react-volume-level {\n  height: 0.3em;\n}\n.video-react .video-react-slider-horizontal .video-react-volume-level:before {\n  top: -0.3em;\n  right: -0.5em;\n}\n.video-react .video-react-menu-button-popup.video-react-volume-menu-button .video-react-menu {\n  display: block;\n  width: 0;\n  height: 0;\n  border-top-color: transparent;\n}\n.video-react .video-react-menu-button-popup.video-react-volume-menu-button-vertical .video-react-menu {\n  left: 0.5em;\n  height: 8em;\n}\n.video-react .video-react-menu-button-popup.video-react-volume-menu-button-horizontal .video-react-menu {\n  left: -2em;\n}\n.video-react .video-react-menu-button-popup.video-react-volume-menu-button .video-react-menu-content {\n  height: 0;\n  width: 0;\n  overflow-x: hidden;\n  overflow-y: hidden;\n}\n.video-react .video-react-volume-menu-button-vertical:hover .video-react-menu-content,\n.video-react .video-react-volume-menu-button-vertical:focus .video-react-menu-content,\n.video-react .video-react-volume-menu-button-vertical.video-react-slider-active .video-react-menu-content,\n.video-react .video-react-volume-menu-button-vertical .video-react-lock-showing .video-react-menu-content {\n  height: 8em;\n  width: 2.9em;\n}\n.video-react .video-react-volume-menu-button-horizontal:hover .video-react-menu-content,\n.video-react .video-react-volume-menu-button-horizontal:focus .video-react-menu-content,\n.video-react .video-react-volume-menu-button-horizontal .video-react-slider-active .video-react-menu-content,\n.video-react .video-react-volume-menu-button-horizontal .video-react-lock-showing .video-react-menu-content {\n  height: 2.9em;\n  width: 8em;\n}\n.video-react .video-react-volume-menu-button.video-react-menu-button-inline .video-react-menu-content {\n  background-color: transparent !important;\n}\n\n.video-react .video-react-playback-rate .video-react-playback-rate-value {\n  line-height: 3em;\n  text-align: center;\n}\n.video-react .video-react-playback-rate .video-react-menu {\n  width: 4em;\n  left: 0em;\n}\n\n.video-react .video-react-bezel {\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  width: 52px;\n  height: 52px;\n  z-index: 17;\n  margin-left: -26px;\n  margin-top: -26px;\n  background: rgba(0, 0, 0, 0.5);\n  border-radius: 26px;\n}\n.video-react .video-react-bezel.video-react-bezel-animation {\n  -webkit-animation: video-react-bezel-fadeout 0.5s linear 1 normal forwards;\n  animation: video-react-bezel-fadeout 0.5s linear 1 normal forwards;\n  pointer-events: none;\n}\n.video-react .video-react-bezel.video-react-bezel-animation-alt {\n  -webkit-animation: video-react-bezel-fadeout-alt 0.5s linear 1 normal forwards;\n  animation: video-react-bezel-fadeout-alt 0.5s linear 1 normal forwards;\n  pointer-events: none;\n}\n.video-react .video-react-bezel .video-react-bezel-icon {\n  width: 36px;\n  height: 36px;\n  margin: 8px;\n  font-size: 26px;\n  line-height: 36px;\n  text-align: center;\n}\n@-webkit-keyframes video-react-bezel-fadeout {\n  0% {\n    opacity: 1;\n  }\n  to {\n    opacity: 0;\n    -webkit-transform: scale(2);\n            transform: scale(2);\n  }\n}\n@keyframes video-react-bezel-fadeout {\n  0% {\n    opacity: 1;\n  }\n  to {\n    opacity: 0;\n    -webkit-transform: scale(2);\n            transform: scale(2);\n  }\n}\n@-webkit-keyframes video-react-bezel-fadeout-alt {\n  0% {\n    opacity: 1;\n  }\n  to {\n    opacity: 0;\n    -webkit-transform: scale(2);\n            transform: scale(2);\n  }\n}\n@keyframes video-react-bezel-fadeout-alt {\n  0% {\n    opacity: 1;\n  }\n  to {\n    opacity: 0;\n    -webkit-transform: scale(2);\n            transform: scale(2);\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/video-react/dist/video-react.css","@charset \"UTF-8\";\n/*\n  Fairfax Presentation Styles\n\n  ask sorenfrederiksen@fairfaxmedia.com.au\n\n  This file binds together the various components of the Fairfax Presentation Styles library. \n\n  To use this file in a project, include it like so:\n\n  .../ css\n      - main.scss <- File imports '_ffx-prez-styles.scss', e.g. @import 'libs/_ffx-prez-styles.scss' \n      - main.css  <- Main file above compiles to this\n  ..../ lib\n        - '_ffx-prez-styles.scss'\n        - etc.\n\n  See 'https://smacss.com/book/categorizing' for more on the system used to categorise the styling\n  rules included.\n*/\n/* \n  Base rules are the defaults. They are almost exclusively single element selectors (e.g. 'p', 'a',\n  'input', rather than class selectors, etc.) but base rules could include attribute selectors, \n  pseudo-class selectors, child selectors or sibling selectors.\n\n  We also use 'Base' to include variables broadly depended on by many other styles (e.g. colours,\n  font and text styles).\n*/\n/*\n  Reset\n\n  Fairfax styles reset from 'prez-library-react-shared-components':\n\n  https://bitbucket.org/sorenfrederiksenffx/prez-library-react-shared-components\n\n  October 24, 2017\n  ask sorenfrederiksen@fairfaxmedia.com.au\n*/\n/*\n  Convert between variable types\n\n  These functions are used to convert between variable types.\n\n  Adapted from: https://codepen.io/jakob-e/pen/AHunv\n*/\n/*\n  To string\n*/\n/*\n  To number\n*/\n/*\n  To integer\n*/\n/*\n  To U-integer\n*/\n/*\n  Convert between unit types\n\n  These functions are used to convert unit values from one unit type to another.\n\n  Adapted from: https://codepen.io/jakob-e/pen/AHunv\n*/\n/*\n  To unit\n\n  @param { String } unit - String denoting unit type (e.g. 'px')\n  @param { Number } input - Number with unit suffix (if it has one, e.g. '10em')\n  @returns { Number } - Number of denoted unit, if a conversion is possible (e.g. '10em' to 'em'\n  results in '100px')\n*/\n/*\n  To line height\n\n  Function takes a font size and returns an appropriate line-height.\n\n  @param { Number } font-size - Number (potentially with unit) denoting size of font\n  @param { Number } line-height - Number (potentially with unit) denoting line height desired\n*/\n/*\n  Colors\n\n  November 9, 2017\n  ask sorenfrederiksen@fairfaxmedia.com.au\n*/\n/*\n  Real color names\n*/\n/*\n  Descriptive color names\n*/\n/*\n  Functional color names\n*/\n/*\n  Colours - Australian politics\n\n  November 9, 2017\n  ask sorenfrederiksen@fairfaxmedia.comau\n*/\n/*\n  Colors - Charts\n\n  January 1, 2017\n  Ask sorenfrederiksen@fairfaxmedia.com.au\n\n  Colors for use in data visualisations. These and other styles are documented here:\n\n  https://ffxblue.atlassian.net/wiki/spaces/PROD/pages/32577164/Infogram+Style\n*/\n/*\n  Fonts\n\n  The file assumes it will be compiled to a CSS file that sits like so in the project's directory \n  hierarchy:\n\n  main.css\n  .. / assets\n  .. .. / fonts\n  .. .. .. / abril-titling\n  .. .. .. .. / AbrilTitling-Semibold.woff\n  .. .. .. .. / AbrilTitling-Semibold.woff2\n  .. .. .. / pt-sans\n  .. .. .. .. / PTSans-Regular.woff\n  .. .. .. .. / PTSans-Regular.woff2\n  .. .. .. .. / PTSans-Bold.woff\n  .. .. .. .. / PTSans-Bold.woff2\n  .. .. .. / pt-serif\n  .. .. .. .. / PTSerif-Regular.woff\n  .. .. .. .. / PTSerif-Regular.woff2\n  .. .. .. .. / PTSerif-Bold.woff\n  .. .. .. .. / PTSerif-Bold.woff2\n*/\n/*\n  Type\n\n  Standard and other type styles.\n\n  October 24, 2017\n  ask sorenfrederiksen@fairfaxmedia.com.au\n*/\n/*\n  These mix-ins are not used in the main, public 'standard-typography' mix-in, because they would \n  burden projects with bulkier styles expressed in long- rather than the short-form of that main \n  mix-in.\n\n  (As in, if we're assuming the user wants to apply all standard typographic styles, we can apply\n  styles to 'h1, h2, h3, h4, h5' all at once, saving many lines of code. Without that assumption,\n  we have to repeat our styles for each individual type of heading element.)\n\n  Individual typographical mix-ins are provided only for 'h1', 'h2', 'h3' and 'p' elements, as these\n  are considered most likely to prove of use.\n\n  The utility of all of these mix-ins is debatable, and subject to future consideration.\n*/\n/*\n  Standard typography - h1\n*/\n/*\n  Standard typography - h2\n*/\n/*\n  Standard typography - h3\n*/\n/*\n  Standard typography - p\n*/\n/*\n  Standard typography\n*/\n/*\n  Animations\n\n  January 1, 2018\n  ask sorenfrederiksen@fairfaxmedia.com.au\n*/\n@-webkit-keyframes spin {\n  100% {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg); } }\n@keyframes spin {\n  100% {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg); } }\n\n/*\n  Break point\n\n  Mix-in used to create standard Fairfax breakpoints.\n\n  These mix-ins can be used like so:\n\n  @includes('only', 'small') {\n    \n    .someMobileStyle {\n      color: red;\n    }\n\n    // ... other styles that will only show within the 'small' break-point bracket\n  }\n\n  See the 'Media Queries' section of this for a deeper explanation of how these work:\n  https://robots.thoughtbot.com/sasss-content-directive\n\n  @param { String } type - String denoting type of break-point to be created\n  @param { String } size - String denoting size of break-point to be created\n*/\n/* \n  Layout rules divide the page into sections. Layouts hold one or more modules together.\n*/\n/*\n  Embedded interactive\n\n  January 1, 2017\n  ask sorenfrederiksen@fairfaxmedia.com.au\n\n  Default styles for element containing embedded interactive.\n\n  Your SCSS:\n\n  ```\n  .yourEmbeddedInteractiveContainerClass {\n    @include embedded-interactive;\n  }\n  ```\n\n  Your HTML:\n\n  ```\n  <div class=\"yourEmbeddedInteractiveContainerClass\">\n    <!-- Your application -->\n  </div>\n  ```\n*/\n/*\n  Feature article header\n\n  November 7, 2017\n  ask sorenfrederiksen@fairfaxmedia.com.au\n\n  A mix-in that styles a container and its contents to become the header section of a long-form\n  feature article, including the article's header, subtitle, author credits, date and header\n  sharing buttons.\n\n  Your SCSS:\n\n  ```\n  // The class of your feature article header\n  .yourFeatureArticleHeaderClass {\n    @include feature-article-header(\"standard\", true, false);\n  }\n  ```\n\n  If you're using the `standard-typography` mix-in elsewhere in your style-sheet, you can set that\n  last variable - the `false` - to `true`. When set to `true`, that parameter will make the\n  `feature-article-header` mix-in assume that `standard-typography` is active, and so rely on\n  styles associated with that mix-in, resulting in less-bloated styles.\n\n  For example: \n\n  ```\n  // The class of your feature article header\n  .yourFeatureArticleHeaderClass {\n    @include feature-article-header(\"standard\", true, true);\n  }\n  ```\n\n  Your HTML:\n  ```\n  <header class=\"yourFeatureArticleHeaderClass\">\n\n    <p class=\"feature-article-header__topic\">\n      <a href=\"/national\">Your feature article's topic</a>\n    </p>\n    \n    <h1 class=\"feature-article-header__title\">\n      Your feature article title here\n    </h1>\n\n    <div class=\"feature-article-header__break\"></div>\n\n    <!-- Article header social media sharing buttons -->\n    <ul class=\"feature-article-header__social\">\n      <li class=\"feature-article-header__social__button social-button__facebook\">\n        <a href=\"javascript:void(0);\">\n          <span>Share on Facebook</span>\n          <svg height=\"1em\" width=\"1em\" aria-hidden=\"true\" focusable=\"false\">\n            <use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#icon-facebook\"></use>\n          </svg>\n        </a>\n      </li>\n      <li class=\"feature-article-header__social__button social-button__twitter\">\n        <a href=\"javascript:void(0);\">\n          <span>Share on Twitter</span>\n          <svg height=\"1em\" width=\"1em\" aria-hidden=\"true\" focusable=\"false\">\n            <use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#icon-twitter\"></use>\n          </svg>\n        </a>\n      </li>\n      <li class=\"feature-article-header__social__button social-button__whatsapp\">\n        <a href=\"javascript:void(0);\">\n          <span>Share on WhatsApp</span>\n          <svg height=\"1em\" width=\"1em\" aria-hidden=\"true\" focusable=\"false\">\n            <use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#icon-whatsapp\"></use>\n          </svg>\n        </a>\n      </li>\n      <li class=\"feature-article-header__social__button social-button__email\">\n        <a href=\"javascript:void(0);\">\n          <span>Share on Email</span>\n          <svg height=\"1em\" width=\"1em\" aria-hidden=\"true\" focusable=\"false\">\n            <use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#icon-email\"></use>\n          </svg>\n        </a>\n      </li>\n    </ul>\n\n    <p class=\"feature-article-header__subtitle\">\n      Here, you'll input a subtitle of around a sentence in length, usually running over two lines..\n    </p>\n\n    <p class=\"feature-article-header__author\">\n      by Soren Frederiksen &amp; Donald Trump\n    </p>\n\n    <p class=\"feature-article-header__date\">\n      February 6, 2018\n    </p>\n\n  </header>\n  ```\n*/\n/*\n  Feature article header\n\n  @param { Color } title-color - Colour used to colour the feature header's title\n  @param { Color } subtitle-color - Colour used to colour the feature header's subtitle\n  @param { Color } topic-color - Colour used to colour the feature header's topic\n  @param { Color } break-color - Colour used to colour the feature header's break between its title,\n  subtitle and other elements\n  @param { Color } author-and-date-color - Colour used to colour the feature header's author and\n  date elements\n  @param { Color } social-button-color - Colour used to colour the feature header's social buttons\n  @param { Boolean } sharing-only-on-mobile - Boolean denoting whether or not feature article header\n  sharing buttons wills be shown on devices larger than mobile\n  @param { Boolean } standard-typography-in-us - Boolean indicating whether or not the \n  'standard-typography' mix-in is in use elsewhere in this style-sheet\n*/\n/*\n  Feature article header\n\n  @param { String } style - String describing style of feature article header (e.g. 'standard' or\n  'standard--dark')\n  @param { Boolean } sharing-only-on-mobile - Boolean denoting whether or not feature article header\n  sharing buttons wills be shown on devices larger than mobile\n  @param { Boolean } standard-typography-in-us - Boolean indicating whether or not the \n  'standard-typography' mix-in is in use elsewhere in this style-sheet\n*/\n/*\n  Custom feature article header\n\n  @param { Color } title-color - Colour used to colour the feature header's title\n  @param { Color } subtitle-color - Colour used to colour the feature header's subtitle\n  @param { Color } topic-color - Colour used to colour the feature header's topic\n  @param { Color } break-color - Colour used to colour the feature header's break between its title,\n  subtitle and other elements\n  @param { Color } author-and-date-color - Colour used to colour the feature header's author and\n  date elements\n  @param { Color } social-button-color - Colour used to colour the feature header's social buttons\n  @param { Boolean } sharing-only-on-mobile - Boolean denoting whether or not feature article header\n  sharing buttons wills be shown on devices larger than mobile\n  @param { Boolean } standard-typography-in-us - Boolean indicating whether or not the \n  'standard-typography' mix-in is in use elsewhere in this style-sheet\n*/\n/*\n  Modules are the reusable, modular parts of our design.\n*/\n/*\n  Sports team icon\n\n  The file assumes it will be compiled to a CSS file that sits like so in the project's directory \n  hierarchy:\n\n  main.css\n  .. / libs\n  .. .. / ffx-prez-styles\n  .. .. .. / assets\n  .. .. .. .. / images\n  .. .. .. .. / logos\n  .. .. .. .. .. / sport\n  .. .. .. .. .. .. / mc-team-logos$2x.png\n*/\n/*\n  Sports team icon\n\n  @param { Number with unit } side-length - Figure with unit that determines width and height of icon\n  @param { String } league - String denoting which set of icons to include in icon style\n*/\n/*\n  Button\n\n  October 20, 2017\n  ask sorenfrederiksen@fairfaxmedia.com.au\n\n  A series of mix-ins to help developers hastily apply standard button styles.\n\n  Users are encouraged to stick to the standard button mixin ('button'), except where a given color\n  scheme demands a change (use 'button--custom') or the function of the button necessitates one \n  (e.g. where the button deletes things, use 'button--destructive').\n\n  All mix-ins result in buttons that can be made to appear deactivated (apply the '.is--deactivated'\n  class to your button) or to signify the application is in the midst of loading (apply the \n  '.is--loading' class). The latter requires the inclusion of the SVG element include in the example\n  HTML below.\n\n  To use this button style, add this to the top of your HTML document (or add the symbol elements to \n  an existing svg container):\n\n  ```\n  <svg xmlns=\"http://www.w3.org/2000/svg\" style=\"position:absolute; width: 0; height: 0;\">\n    <symbol viewBox=\"0 0 40 40\" id=\"icon-loading\">\n      <circle class=\"loading__icon__circle\" opacity=\"0\" cx=\"15.8\" cy=\"15\" r=\"15\"></circle>\n      <path d=\"M27.8084006,22.8842813 C29.5771785,20.6011257 30.6299412,17.7353365 \n               30.6299412,14.6236613 C30.6299412,9.67647577 27.9688583,5.35081946 \n               24,3\" class=\"loading__icon__active-segment\"></path>  \n    </symbol>\n  </svg>\n  ```\n\n  You can then use the button style as follows.\n\n  Your SCSS:\n\n  ```\n  .yourButtonClass {\n    @include button(\"medium\", \"dynamic\", \"solid\");\n  } \n\n  // ... or ...\n\n  .yourCustomButtonClass {\n    @include button--custom(#fff, red, \"1px solid red\", \"large\", \"dynamic\", \"red\");\n  }\n\n  // ... or ...\n\n  .yourDestructiveButtonClass {\n    @include button--destructive(\"large\", \"fixed\", \"solid--reversed\");\n  }\n  ```\n  Your HTML:\n\n  ```\n  <button class=\"yourButtonClass\">\n    <span>A long button</span>\n    <svg viewBox=\"0 0 40 40\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" \n         xmlns:xlink=\"http://www.w3.org/1999/xlink\" stroke=\"#096DD2\" \n         stroke-width=\"3\" fill=\"transparent\" class=\"button-loading\">\n      <use \n        xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n        xlink:href=\"#icon-loading\" \n        class=\"button-loading__icon\" \n        transform=\"translate(6.5 6.5)\">\n    </svg>\n  </button>\n  ```\n*/\n/*\n  Button\n\n  @param { Color } bg - Color for the button's background\n  @param { Color } hover-bg - Color for the button's background when user hovers over it\n  @param { Color } active-bg - Color for the button's background when the user clicks or taps it\n  @param { Color } color - Color for button's text\n  @param { Color } hover-color - Color for button's text when user hovers over it\n  @param { Color } active-color - Color for button's text when user clicks or taps it\n  @param { String } size - String denoting size of button (e.g. 'small', 'medium', 'large')\n  @param { String } size-rules - String denoting rules of how button will be sized ('fixed' or \n  'dynamic')\n  @param { Color } outline - Color of button's outline when it is clicked \n  @param { Boolean } can-load - Boolean indicating whether button can enter the loading state\n*/\n/*\n  Button deactivated\n*/\n/*\n  Button loading\n*/\n@-webkit-keyframes loading-icon-spin {\n  100% {\n    -webkit-transform: translateX(-50%) translateY(-50%) rotate(360deg);\n            transform: translateX(-50%) translateY(-50%) rotate(360deg); } }\n@keyframes loading-icon-spin {\n  100% {\n    -webkit-transform: translateX(-50%) translateY(-50%) rotate(360deg);\n            transform: translateX(-50%) translateY(-50%) rotate(360deg); } }\n\n/*\n  Button\n  \n  @param { String } size - String describing size of button (e.g. 'small', 'medium', 'large')\n  @param { String } size-rules - String describing rules determining size of button (e.g. 'fixed' or\n  'dynamic')\n  @param { String } style - String describing style of button (e.g. 'solid', 'solid--reversed', \n  'hollow' or 'hollow--reversed')\n  @param { Boolean } can-load - Boolean indicating whether button can enter the loading state\n*/\n/*\n  Custom button\n\n  @param { Color } custom-background - Colour for the background of the button\n  @param { Color } custom-color - Colour for the text of the button\n  @param { String } custom-border - Short-form border property for the button (e.g. '1px solid red')\n  @param { String } size - String describing size of button (e.g. 'small', 'medium', 'large')\n  @param { String } size-rules - String describing rules determining size of button (e.g. 'fixed' or\n  'dynamic')\n  @param { Color } custom-outline - Colour for the outline (shown on click) of the button\n  @param { Boolean } can-load - Boolean indicating whether button can enter the loading state\n*/\n/*\n  Destructive button\n\n  @param { String } size - String describing size of button (e.g. 'small', 'medium', 'large')\n  @param { String } size-rules - String describing rules determining size of button (e.g. 'fixed' or\n  'dynamic')\n  @param { String } style - String describing style of button (e.g. 'solid' or 'solid--reversed')\n*/\n/*\n  Social button\n\n  October 24, 2017\n  ask sorenfrederiksen@fairfaxmedia.com.au\n\n  A mix-in to facilitate the use of standard social media sharing buttons, including those for \n  Facebook, Twitter, Instagram, WhatsApp, Google Plus and Email.\n\n  To use social buttons, add this to the top of your HTML document (or add the symbol elements to \n  an existing svg container):\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" style=\"position:absolute; width: 0; height: 0;\">\n      <symbol viewBox=\"0 0 32 32\" id=\"icon-twitter\">\n        <path d=\"M32 6.371c-1.16.525-2.139.542-3.177.023 1.34-.811 1.4-1.38 1.884-2.916a12.91 12.91 0 0 1-4.115 1.596A6.431 6.431 0 0 0 21.864 3c-3.578 0-6.479 2.94-6.479 6.564 0 .515.058 1.016.167 1.496C10.167 10.787 5.394 8.173 2.2 4.2a6.612 6.612 0 0 0-.879 3.302 6.584 6.584 0 0 0 2.883 5.463 6.402 6.402 0 0 1-2.934-.82l-.001.082c0 3.18 2.234 5.833 5.198 6.437a6.43 6.43 0 0 1-2.927.112c.825 2.607 3.218 4.505 6.052 4.559A12.903 12.903 0 0 1 0 26.052 18.167 18.167 0 0 0 9.93 29c11.919 0 18.433-10.001 18.433-18.675 0-.286-.004-.566-.017-.85C29.61 8.551 31.132 7.69 32 6.371\" fill=\"currentColor\" fill-rule=\"evenodd\"></path>\n      </symbol>\n      <symbol viewBox=\"0 0 32 32\" id=\"icon-email\">\n        <g fill=\"currentColor\" fill-rule=\"evenodd\">\n          <path d=\"M16.086 17.334L30.627 6.502A3.267 3.267 0 0 0 28.885 6h-25.6c-.621 0-1.194.177-1.685.47l14.486 10.864z\"></path>\n          <path d=\"M16.464 18.857a.805.805 0 0 1-.931-.002L.413 7.538C.158 7.98 0 8.478 0 9.018v13.847c0 1.695 1.435 3.077 3.2 3.077h25.6c1.765 0 3.2-1.382 3.2-3.077V9.018c0-.518-.147-1-.382-1.429L16.464 18.857z\"></path>\n        </g>\n      </symbol>\n      <symbol viewBox=\"0 0 32 32\" id=\"icon-whatsapp\">\n        <path d=\"M22.189 24.818c-.856.078-.856.701-5.6-1.165-4.74-1.868-7.733-6.732-7.967-7.044-2.187-2.91-2.762-5.991-.273-8.715.79-.86 2.748-.824 3.19.235.387.934 1.32 3.229 1.438 3.462.117.235.194.507.037.817-.186.375-.38.814-1.166 1.596-.233.233-.475.484-.203.95.272.468 1.206 1.995 2.594 3.231 1.782 1.59 3.284 2.081 3.75 2.315.467.233.74.195 1.012-.117.271-.313 1.167-1.362 1.476-1.829.312-.467.624-.388 1.05-.233.428.155 2.72 1.283 3.188 1.518.466.23.778.35.895.544.701 1.177-.963 4.212-3.421 4.435M16 0C7.178 0 0 7.177 0 16c0 3.5 1.133 6.744 3.048 9.38L1.05 31.324l6.149-1.97A15.897 15.897 0 0 0 16 32c8.821 0 16-7.177 16-16 0-8.822-7.178-16-16-16\" fill=\"currentColor\" fill-rule=\"evenodd\"></path>\n      </symbol>\n      <symbol viewBox=\"0 0 32 32\" id=\"icon-facebook\">\n        <path d=\"M18.7 17.4h5.1l.7-5.6h-5.8V8.1c0-1.6.5-2.7 2.8-2.7h3V.2c-.5 0-2.3-.2-4.4-.2-4.4 0-7.9 2.7-7.9 7.7v4.1H7.6v5.6h4.6V32h6.5V17.4z\" fill=\"currentColor\"></path>\n      </symbol>\n      <symbol viewBox=\"0 0 32 32\" id=\"icon-google\">\n        <path d=\"M28.6 14.6v-3.4H26v3.4h-3.4v2.6H26v3.4h2.6v-3.4H32v-2.6zm-8-.6a8.2 8.2 0 0 1 .2 2.2c0 5.9-4 10.3-10.2 10.3A10.65 10.65 0 0 1 0 16 10.65 10.65 0 0 1 10.6 5.5a10.48 10.48 0 0 1 7.2 2.8l-3 3A6.38 6.38 0 0 0 4.2 16a6.24 6.24 0 0 0 6.4 6.3c3.2 0 5.4-1.8 5.8-4.3h-5.8v-3.9l10-.1z\" fill=\"currentColor\" fill-rule=\"evenodd\"></path>\n      </symbol>\n      <symbol viewBox=\"0 0 32 32\" id=\"icon-instagram\">\n        <g stroke=\"currentColor\" fill=\"currentColor\">\n          <path d=\"M8.5 2.9h15c1.6 0 3 .7 3.9 1.7 1 .9 1.7 2.3 1.7 3.9v15c0 1.6-.7 3-1.7 3.9-.9 1-2.3 1.7-3.9 1.7h-15c-1.6 0-3-.7-3.9-1.7-1-.9-1.7-2.3-1.7-3.9v-15c0-1.6.7-3 1.7-3.9.9-1.1 2.3-1.7 3.9-1.7m15-1.9h-15C4.4 1 1 4.4 1 8.5v15C1 27.6 4.4 31 8.5 31h15c4.1 0 7.5-3.4 7.5-7.5v-15C31 4.4 27.6 1 23.5 1\" stroke-width=\"2\"></path>\n          <path d=\"M16 21c-1.4 0-2.6-.6-3.5-1.5-.9-.9-1.5-2.1-1.5-3.5s.6-2.6 1.5-3.5c.9-.9 2.2-1.5 3.5-1.5 1.4 0 2.6.6 3.5 1.5.9.9 1.5 2.2 1.5 3.5 0 1.4-.6 2.6-1.5 3.5-.9.9-2.1 1.5-3.5 1.5m0-12c-3.9 0-7 3.1-7 7s3.1 7 7 7 7-3.1 7-7-3.1-7-7-7\" stroke-width=\"2\"></path>\n          <path d=\"M24 9.5c-.8 0-1.5-.7-1.5-1.5s.7-1.5 1.5-1.5 1.5.7 1.5 1.5-.7 1.5-1.5 1.5m0-4c-1.4 0-2.5 1.1-2.5 2.5s1.1 2.5 2.5 2.5 2.5-1.1 2.5-2.5-1.1-2.5-2.5-2.5\"></path>\n        </g>\n      </symbol>\n    </svg>\n  \n  (In future, it might be that the above isn't necessary, as mastheads in the Fairfax Blue style\n  appear to include the symbols above on every page the site.)\n\n  With the above in your HTML document, you can use this style as follows.\n\n  Your SCSS:\n\n    .yourSocialButtonContainerStyle {\n      @include social-button-container();\n    }\n\n    .yourSocialButtonStyle {\n      @include social-button(15px, #000, #ccc); \n    }\n\n  Your HTML:\n\n    <ul class=\"yourSocialButtonContainerStyle\">\n      <li class=\"yourSocialButtonStyle\">\n        <a href=\"javascript:void(0);\">\n          <span>Share on Facebook</span>\n          <svg height=\"1em\" width=\"1em\" aria-hidden=\"true\" focusable=\"false\">\n            <use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#icon-facebook\"></use>\n          </svg>\n        </a>\n      </li>\n      <li class=\"yourSocialButtonStyle\">\n        <a href=\"javascript:void(0);\">\n          <span>Share on Facebook</span>\n          <svg height=\"1em\" width=\"1em\" aria-hidden=\"true\" focusable=\"false\">\n            <use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#icon-twitter\"></use>\n          </svg>\n        </a>\n      </li>\n      <li class=\"yourSocialButtonStyle\">\n        <a href=\"javascript:void(0);\">\n          <span>Share on Facebook</span>\n          <svg height=\"1em\" width=\"1em\" aria-hidden=\"true\" focusable=\"false\">\n            <use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#icon-email\"></use>\n          </svg>\n        </a>\n      </li>\n    </ul>\n*/\n/*\n  Social button\n\n  @param { Number with unit } side-length - Figure with unit that determines width and height of \n  button\n  @param { Color } color - Color of the button \n  @param { Color } actionColor - Color of button in hover and focus states\n*/\n/*\n  Social button container\n*/\n/*\n  Text input\n\n  November 7, 2017\n  ask sorenfrederiksen@fairfaxmedia.com.au\n\n  A couple of mix-ins to help users get standard form-based text inputs up and running.\n\n  All mix-ins result in inputs that can be made to declare the user's input is invalid (apply the \n  '.is--invalid' class to your button) or to signify the input is deactivated (apply the \n  '.is--deactivated' class).\n\n  To use text inputs, add this to the top of your HTML document (or add the symbol elements to \n  an existing svg container):\n\n  ```\n  <svg xmlns=\"http://www.w3.org/2000/svg\" style=\"position:absolute; width: 0; height: 0;\">\n    <symbol viewBox=\"0 0 16 16\" id=\"icon-validation-alert\">\n      <circle r=\"8\" cx=\"8\" cy=\"8\" fill=\"currentColor\"></circle>\n      <text \n        text-anchor=\"middle\" \n        x=\"8\" \n        y=\"13\" \n        fill=\"#fff\" \n        style=\"font-size: 13px; font-weight: 700; font-family: 'PT Sans', sans-serif\">!</text>\n    </symbol>\n  </svg>\n  ```\n  \n  You can use this style as follows.\n\n  Example SCSS:\n\n  ```\n  .yourTextInputClass {\n    @include text-input(\"standard\");\n  }\n  ```\n\n  Example HTML:\n\n  ```\n  <div class=\"yourTextInputClass\">\n    <label>Some input label</label>\n    <div>\n      <input type=\"text\" placeholder=\"Some input text\"></input>\n      <svg viewBox=\"0 0 16 16\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" \n           xmlns:xlink=\"http://www.w3.org/1999/xlink\" class=\"validation-alert\">\n        <use \n          xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n          xlink:href=\"#icon-validation-alert\" \n          class=\"validation-alert__icon\">\n      </svg>\n    </div>\n    <p class=\"validation-error\">\n      You input the wrong thing.\n    </p>\n  </div>\n  ```\n\n  Example HTML where the user's input is invalid:\n\n  ```\n  <div class=\"yourTextInputClass is--invalid\">\n    <label>Some input label</label>\n    <div>\n      <input type=\"text\" placeholder=\"Some input text\"></input>\n      <svg viewBox=\"0 0 16 16\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" \n           xmlns:xlink=\"http://www.w3.org/1999/xlink\" class=\"validation-alert\">\n        <use \n          xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n          xlink:href=\"#icon-validation-alert\" \n          class=\"validation-alert__icon\">\n      </svg>\n    </div>\n    <p class=\"validation-error\">\n      You input the wrong thing.\n    </p>\n  </div>\n  ```\n\n  (Note the 'label', 'validation-alert' and 'validation-error' elements are optional.)\n*/\n/*\n  Text input\n\n  @param { Color } color - Colour of the input's text\n  @param { String } border - Border property of input\n  @param { Color } focus-color - Colour of the input's text when in focus state\n  @param { Color } focus-border - Border property of input when in focus state\n  @param { Number with unit } font-size - Size of the input's text\n  @param { Color } background - Background colour of the input\n  @param { Color } label-color - Color of the input's label\n  @param { Number with unit } label-font-size - Size of the input's label's font\n  @param { Color } outline - Color of the outline shown when the input is in focus\n*/\n/*\n  Text input without validation error\n\n  Included for use in other mix-ins where including validation error styles would add excessively\n  and needlessly to the stylesheet produced (e.g. with the 'search-input' mix-in).\n\n  @param { Color } color - Colour of the input's text\n  @param { String } border - Border property of input\n  @param { Color } focus-color - Colour of the input's text when in focus state\n  @param { Color } focus-border - Border property of input when in focus state\n  @param { Number with unit } font-size - Size of the input's text\n  @param { Color } background - Background colour of the input\n  @param { Color } label-color - Color of the input's label\n  @param { Number with unit } label-font-size - Size of the input's label's font\n  @param { Color } outline - Color of the outline shown when the input is in focus\n*/\n/*\n  Text input\n\n  @param { String } style - String denoting style of text input\n*/\n/*\n  Custom text input\n\n  @param { Color } border-color - Colour of the input's border\n  @param { Color } focus-border-color - Colour of the input's border in focus state\n  @param { Color } color - Colour of the input's text\n  @param { Number with unit } font-size - Size of input text (label is sized at 93.75% of this)\n  @param { Color } background - Colour of input's background\n  @param { Color } outline - Colour of outline shown around input when it is in focus\n*/\n/*\n  Search input\n\n  November 7, 2017\n  ask sorenfrederiksen@fairfaxmedia.com.au\n  \n  A kind of text input specifically designed for search functionality.\n\n  To use a search input, add this to the top of your HTML document (or add the symbol element to \n  an existing svg container):\n\n  ```\n  <svg xmlns=\"http://www.w3.org/2000/svg\" style=\"position:absolute; width: 0; height: 0;\">\n    <symbol viewBox=\"0 0 32 32\" id=\"icon-search\">\n      <path d=\"M21.08 18.573l10.4 10.4a1.773 1.773 0 1 1-2.508 2.507l-10.4-10.4a11.62 11.62 0 0 1-6.902 2.26C5.225 23.34 0 18.115 0 11.67S5.225 0 11.67 0s11.67 5.225 11.67 11.67c0 2.583-.84 4.97-2.26 6.903zm-1.287-6.903a8.123 8.123 0 1 0-16.247 0 8.123 8.123 0 0 0 16.247 0z\" fill=\"currentColor\" fill-rule=\"evenodd\"/>\n    </symbol>\n  </svg>\n  ```\n  \n  With the above in your HTML document, you can use this style as follows.\n\n  Your SCSS:\n\n  ```\n  .yourSearchInputClass {\n    @include search-input(\"standard\", \"right\", \"true\");\n  }\n  ```\n\n  Your HTML:\n  ```\n  <form class=\"yourSearchInputClass\">\n    <label>Some invisible search label</label>\n    <input type=\"text\" placeholder=\"Some search placeholder text\"></input>\n    <button type=\"submit\">\n      <svg viewBox=\"0 0 16 16\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" \n           xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n        <use \n          xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n          xlink:href=\"#icon-search\" >\n      </svg>\n    </button>\n  </form>\n  ```\n\n  Your HTML when using autocomplete:\n  ```\n  <form class=\"yourSearchInputClass\">\n    <label>Some invisible search label</label>\n    <input \n      type=\"text\" \n      placeholder=\"Some search placeholder text\" \n      id=\"text-input-with-autocomplete\"/>\n    <button type=\"submit\">\n      <svg viewBox=\"0 0 16 16\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" \n           xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n        <use \n          xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n          xlink:href=\"#icon-search\" >\n      </svg>\n    </button>\n  </form>\n\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/awesomplete/1.1.2/awesomplete.js\"></script>\n  <script>\n    var data = [\"Derpit\", \"Burpit\", \"Fartit\", \"McGardit\", \"Lardit\", \"Dingo\", \"Brunswick\", \"Brunton\", \"Brunsby\"]\n\n    var auto = new Awesomplete(\"#text-input-with-autocomplete\", {\n      minChars: 2,\n      maxItems: 5,\n      list: data\n    });\n  </script>\n  ```\n*/\n/*\n  Text input autocomplete\n\n  November 7, 2017\n  ask sorenfrederiksen@fairfaxmedia.com.au\n\n  A mix-in that adds styles to the autocomplete options appended to a text input when using \n  Awesomplete-style autocompletion.\n\n  Your SCSS:\n\n  ```\n  // The class of the element containing the text input you want to have autocomplete\n  .elementContainingTextInput {\n    \n    .awesomplete {\n      @include autocomplete(\"standard\");\n    }\n  }\n  ```\n\n  Your HTML:\n  ```\n  <div class=\"elementContainingTextInput\">\n    <input type=\"text\" id=\"text-input-with-autocomplete\" />\n  </div>\n\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/awesomplete/1.1.2/awesomplete.js\"></script>\n  <script>\n    var data = [\"Derpit\", \"Burpit\", \"Fartit\", \"McGardit\", \"Lardit\", \"Dingo\", \"Brunswick\", \"Brunton\", \"Brunsby\"]\n\n    var auto = new Awesomplete(\"#text-input-with-autocomplete\", {\n      minChars: 2,\n      maxItems: 5,\n      list: data\n    });\n  </script>\n  ```\n*/\n/*\n  Autocomplete\n\n  @param { String } style - String describing style of autocomplete \n*/\n/*\n  Search input\n\n  @param { String } style - String denoting style of text input\n  @param { String } icon-position - String denoting position of search icon\n  @param { String } autocomplete - String determining whether or search input will include \n  autocomplete\n*/\n/*\n  Custom search input\n\n  @param { Color } border-color - Colour of the input's border\n  @param { Color } focus-border-color - Colour of the input's border in focus state\n  @param { Color } color - Colour of the input's text\n  @param { Number with unit } font-size - Size of input text (label is sized at 93.75% of this)\n  @param { Color } background - Colour of input's background\n  @param { Color } outline - Colour of outline shown around input when it is in focus\n*/\n/*\n  Dropdown\n\n  March 1, 2018\n  ask sorenfrederiksen@fairfaxmedia.com.au\n\n  A couple of mix-ins to help users implement standard dropdowns as quickly as possible.\n\n  All mix-ins result in inputs that can signify the input is deactivated (apply the \n  '.is--deactivated' class).\n\n  To use dropdown inputs, add this to the top of your HTML document (or add the symbol elements to \n  an existing svg container):\n\n  ```\n  <svg xmlns=\"http://www.w3.org/2000/svg\" style=\"position:absolute; width: 0; height: 0;\">\n    <symbol viewBox=\"0 0 10 7\" id=\"icon-carat\">\n      <path d=\"M1 1l4 3.74L9 1\" stroke=\"currentColor\" stroke-width=\"2\" fill=\"none\" fill-rule=\"evenodd\"/>\n    </symbol>\n    <symbol viewBox=\"0 0 9 9\" id=\"icon-tick\">\n      <path d=\"M2.978 9a.998.998 0 0 1-.706-.294L.292 6.728a1 1 0 0 1 1.415-1.414L2.853 6.46 7.188.416a1 1 0 0 1 1.625 1.166l-5.022 7A.994.994 0 0 1 2.978 9\" fill=\"currentColor\" fill-rule=\"evenodd\"/>\n    </symbol>\n    <symbol viewBox=\"0 0 16 16\" id=\"icon-validation-alert\">\n      <circle r=\"8\" cx=\"8\" cy=\"8\" fill=\"currentColor\"></circle>\n      <text \n        text-anchor=\"middle\" \n        x=\"8\" \n        y=\"13\" \n        fill=\"#fff\" \n        style=\"font-size: 13px; font-weight: 700; font-family: 'PT Sans', sans-serif\">!</text>\n    </symbol>\n  </svg>\n  ```\n  \n  You can use this style as follows.\n\n  Example SCSS:\n  ```\n  .yourDropdownClass {\n    @include dropdown(\"standard\", false, true);\n  }\n  ```\n  Example HTML:\n  ```\n    <div class=\"yourDropdownClass\">\n      <label>Some input label</label>\n      <div class=\"dropdown__inner\" id=\"dropdown-container\">\n        <span class=\"dropdown__inner__current-value\" id=\"dropdown-current-value\">Soren Frederiksen</span>\n        <svg \n          viewBox=\"0 0 10 7\" version=\"1.1\" \n          xmlns=\"http://www.w3.org/2000/svg\"\n          class=\"dropdown__inner__carat\">\n          <use \n            xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n            xlink:href=\"#icon-carat\" \n            class=\"dropdown__inner__carat__image\">\n        </svg>\n        <svg \n          viewBox=\"0 0 16 16\" version=\"1.1\" \n          xmlns=\"http://www.w3.org/2000/svg\"\n          class=\"dropdown__inner__error\">\n          <use \n            xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n            xlink:href=\"#icon-validation-alert\" >\n        </svg>\n        <svg \n          viewBox=\"0 0 16 16\" version=\"1.1\" \n          xmlns=\"http://www.w3.org/2000/svg\"\n          class=\"dropdown__inner__error\">\n          <use \n            xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n            xlink:href=\"#icon-validation-alert\" >\n        </svg>\n        <select class=\"dropdown__inner__select\" id=\"dropdown-select-input\">\n          <option value=\"Soren Frederiksen\">Soren Frederiksen</option>\n          <option value=\"Richard Lama\">Richard Lama</option>\n          <option value=\"Reginal Sengkey\">Reginal Sengkey</option>\n        </select>\n        <ul class=\"dropdown__inner__list\" id=\"dropdown-list\">\n          <li value=\"Soren Frederiksen\"\n              class=\"dropdown__inner__list__item is--selected\">\n            Soren Frederiksen\n            <svg \n              viewBox=\"0 0 10 7\" version=\"1.1\" \n              xmlns=\"http://www.w3.org/2000/svg\"\n              class=\"dropdown__inner__list__item__tick\">\n              <use \n                xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n                xlink:href=\"#icon-tick\">\n            </svg>\n          </li>\n          <li value=\"Richard Lama\"\n              class=\"dropdown__inner__list__item\">\n            Richard Lama\n            <svg \n              viewBox=\"0 0 10 7\" version=\"1.1\" \n              xmlns=\"http://www.w3.org/2000/svg\"\n              class=\"dropdown__inner__list__item__tick\">\n              <use \n                xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n                xlink:href=\"#icon-tick\">\n            </svg>\n            </svg>\n          </li>\n          <li value=\"Reginal Sengkey\"\n              class=\"dropdown__inner__list__item\">\n            Reginal Sengkey\n            <svg \n              viewBox=\"0 0 10 7\" version=\"1.1\" \n              xmlns=\"http://www.w3.org/2000/svg\"\n              class=\"dropdown__inner__list__item__tick\">\n              <use \n                xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n                xlink:href=\"#icon-tick\">\n            </svg>\n            </svg>\n          </li>\n          <li value=\"Mark Stehle\"\n              class=\"dropdown__inner__list__item\">\n            Mark Stehle\n            <svg \n              viewBox=\"0 0 10 7\" version=\"1.1\" \n              xmlns=\"http://www.w3.org/2000/svg\"\n              class=\"dropdown__inner__list__item__tick\">\n              <use \n                xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n                xlink:href=\"#icon-tick\">\n            </svg>\n            </svg>\n          </li>\n          <li value=\"Matthew Absalom-Wong\"\n              class=\"dropdown__inner__list__item\">\n            Matthew Absalom-Wong\n            <svg \n              viewBox=\"0 0 10 7\" version=\"1.1\" \n              xmlns=\"http://www.w3.org/2000/svg\"\n              class=\"dropdown__inner__list__item__tick\">\n              <use \n                xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n                xlink:href=\"#icon-tick\">\n            </svg>\n            </svg>\n          </li>\n        </ul>\n      </div>\n      <p class=\"dropdown__error\">\n        You did something wrong.\n      </p>\n    </div>\n  ```\n  In order to work fully (included the custom dropdown list), this mix-in also requires some \n  JavaScript. \n\n  Below is some bare-bones vanilla JavaScript that developers will be able to more eloquently \n  implement using whatever framework or library they're using. In principal, though,\n  this is all you need.\n\n  Example JavaScript:\n  ```\n  var dropdownValueDisplay = document.getElementById('dropdown-current-value');\n  var dropdownSelectInput = document.getElementById('dropdown-select-input');\n  var dropdownContainer = document.getElementById('dropdown-container');\n  var dropdownListItems = dropdownContainer.getElementsByClassName('dropdown__inner__list__item');\n\n  // When the user clicks the dropdown container, show it as selected\n  dropdownContainer.addEventListener('click', function() {\n    dropdownContainer.classList.toggle('is--selected');\n  });\n\n  // When the user click a dropdown list item, select it\n  for (var i = 0; i < dropdownListItems.length; i += 1) {\n    dropdownListItems[i].addEventListener('click', selectDropdownListItem);\n  }\n\n  function selectDropdownListItem(e) {\n\n    var newDropdownValue = e.target.getAttribute('value');\n\n    // Update dropdown value display and input\n    dropdownValueDisplay.innerHTML = newDropdownValue;\n    dropdownSelectInput.value = newDropdownValue;\n\n    // Update dropdown list display (and calculate variables necessary to determine position of\n    // tick)\n    for (var i = 0; i < dropdownListItems.length; i += 1) {\n      if (dropdownListItems[i] !== e.target) {\n        dropdownListItems[i].classList.remove('is--selected');\n      }\n      else {\n        indexOfTargetListItem = i;\n        dropdownListItems[i].classList.add('is--selected');\n      }\n    }\n  }\n  ```\n*/\n/*\n  Dropdown\n\n  @param { Color } color - Colour of the input's text\n  @param { String } border - Border property of input\n  @param { Color } focus-color - Colour of the input's text when in focus state\n  @param { Color } focus-carat-color - Colour of the input's carat when in focus state\n  @param { Color } focus-border - Border property of input when in focus state\n  @param { Number with unit } font-size - Size of the input's text\n  @param { Color } background - Background colour of the input\n  @parma { Color } list-item-color - Color of dropdown list items\n  @parma { Color } selected-list-item-background - Background color signifying selected list item\n  @param { Color } label-color - Color of the input's label\n  @param { Number with unit } label-font-size - Size of the input's label's font\n  @param { Boolean } use-custom-dropdown-list-on-mobile - Boolean indicating whether or not to use \n  the custom dropdown list on mobile, or whether to rely on a device's in-built dropdown\n  @param { Boolean } can-be-invalid - Boolean indicating whether or not include invalid state styles\n*/\n/*\n  Dropdown desktop custom dropdown list styles\n*/\n/*\n  Dropdown\n\n  @param { String } style - String denoting style of dropdown menu\n  @param { Boolean } use-custom-dropdown-list-on-mobile - Boolean indicating whether or not to use \n  the custom dropdown list on mobile, or whether to rely on a device's in-built dropdown\n  @param { Boolean } can-be-invalid - Boolean indicating whether or not include invalid state styles\n*/\n/*\n  Custom dropdown\n\n  @param { Number with unit } font-size - Size of input text (label is sized at 93.75% of this)\n  @param { Color } color - Colour of the input's text\n  @param { Color } background - Colour of input's background\n  @param { Boolean } use-custom-dropdown-list-on-mobile - Boolean indicating whether or not to use \n  the custom dropdown list on mobile, or whether to rely on a device's in-built dropdown\n  @param { Boolean } can-be-invalid - Boolean indicating whether or not include invalid state styles\n  @param { Color } label-color - Colour of the input's label\n  @param { Color } border-color - Colour of the input's border\n  @param { Color } focus-border-color - Colour of the input's border in focus state\n  @param { Color } list-item-color - Colour of the input's list item text\n  @param { Number with unit } list-max-height - Maximum size of the dropdown list\n*/\n/*\n  Scrollbar\n\n  March 1, 2018\n  ask sorenfrederiksen@fairfaxmedia.com.au\n\n  A couple mix-ins that add a custom scrollbar to a scrolling container.\n  \n  You can use this style as follows.\n\n  Example SCSS:\n\n  ```\n  .yourScrollingContainerClass {\n    @include scrollbar(\"standard\");\n  }\n  ```\n\n  Example HTML:\n\n  ```\n  <div class=\"yourScrollingContainerClass\">\n    <!-- Lots of elements -->\n  </div>\n  ```\n*/\n/*\n  Scrollbar\n\n  @param { Number with unit } width - Width of the scrollbar\n  @param { Color } track-color - Color of the scrollbar track\n  @param { Color } thumb-color - Color of the scrollbar thumb (i.e. the movable control in the \n  scrollbar)\n  @param { Number with unit } track-border-radius - Border radius of the scrollbar track\n  @param { Number with unit } thumb-border-radius - Border radius of the scrollbar thumb (i.e. the\n  movable control in the scrollbar)\n  @param { Number with unit } thumb-padding - Gap between the thumb and the track\n*/\n/*\n  Scrollbar\n\n  @param { String } style - String describing the style of the scrollbar\n*/\n/*\n  Custom scrollbar\n\n  @param { Number with unit } width - Width of the scrollbar\n  @param { Color } track-color - Color of the scrollbar track\n  @param { Color } thumb-color - Color of the scrollbar thumb (i.e. the movable control in the \n  scrollbar)\n  @param { Number with unit } track-border-radius - Border radius of the scrollbar track\n  @param { Number with unit } thumb-border-radius - Border radius of the scrollbar thumb (i.e. the\n  movable control in the scrollbar)\n*/\n/*\n  Loader\n\n  January 1, 2017\n  ask sorenfrederiksen@fairfaxmedia.com.au\n\n  A loading indicator featuring a masthead-appropriate logo initial.\n\n  To use this loader style, add this to the top of your HTML document (or add the symbol elements to \n  an existing svg container):\n\n  ```\n  <svg xmlns=\"http://www.w3.org/2000/svg\" style=\"position:absolute; width: 0; height: 0;\">\n    <symbol viewBox=\"0 0 50 60\" id=\"icon-loading-ct\">\n      <path d=\"M18.244 19.205L16.378 20.5l-1.072-1.296L39.152 0c.285 1.58 1.219 6.812 4.092 6.31 2.152-.364 4.166-3.013 5.32-4.73H50c-.65 2.008-1.363 3.79-2.662 5.515-1.293 1.653-2.802 3.014-4.524 4.156-1.29.867-2.298 1.361-3.807 1.79l-.073 34.255c.787-.639 1.51-1.28 2.151-2.073 1.372-1.507 2.38-3.224 3.45-4.876l1.154.428c-1.226 3.37-2.445 6.813-4.669 9.745-2.37 3.085-5.675 6.1-9.273 7.67-2.508 1.151-6.033 1.653-8.76 1.79C12.138 60.418 3.158 53.324.86 42.786A42.985 42.985 0 0 1 0 34.182c.073-4.722 2.014-9.38 4.376-13.397 3.378-5.872 8.842-10.538 15.022-13.471 2.444-1.15 5.31-2.22 8.111-2.22.293 0 .723.066.861.35.073.145-.064.363-.21.363-2.729 1.07-3.306 1.143-5.815 2.795-2.452 1.645-4.815 3.37-6.617 5.662-4.523 5.59-5.886 12.968-5.1 20 .365 3.215 1.438 6.438 3.24 9.16 1.218 1.799 2.801 3.16 4.376 4.52v-28.74zm3.622 29.331c2.444 1.15 4.816 2.3 7.543 2.3 1.73.066 3.662 0 5.318-.648.577-.29 1.143-.712 1.721-1.077l.074-36.977-4.313-3.013-1.217 25.515c-.074 2.51-1.145 4.95-2.37 7.096-1.007 1.725-2.59 3.15-4.094 4.448-.86.72-1.72 1.506-2.662 2.356z\" fill=\"#0A1633\" fill-rule=\"evenodd\"/>\n    </symbol>\n    <symbol viewBox=\"0 0 59 62\" id=\"icon-loading-smh\">\n      <path d=\"M44.28 48.294c-4.229-3.036-9.12-5.265-13.698-6.539l-.124-.041 5.043-7.53c6.429 1.401 10.814 4.95 10.814 8.611 0 1.632-.746 3.81-1.975 5.418l-.06.08zM32.557 23.685c-.886-.123-3.722-.609-4.415-.766-2.306-.477-13.809-3.888-13.809-8.981 0-5.786 7.435-5.786 11.005-5.786.788 0 9.162.732 13.111 6.18-.041.078-4.838 7.711-5.892 9.353zm25.235-7.84l.115-.094c.566-.544 1.093-1.66 1.093-2.327 0-.776-.285-1.484-.799-2-.497-.565-1.268-.885-2.288-.96-.087-.006-.584-.03-.617-.03-2.5.024-5.195 1.598-8.038 4.36-2.497 2.425-3.438 4.221-5.015 6.71-1.28 2.024-1.892 2.98-2.235 3.528-.481-.06-3.38-.518-5.976-1.083.836-1.36 3.303-5.693 6.102-9.745 2.035-2.945 4.496-5.61 5.73-7.129.193-.236.38-.375.605-.502.168-.095.417-.22.5-.315.009-.113-.327-.447-.385-.49-.166.022-.265.06-.405.129-.191.09-.447.215-.801.215-.451 0-.916-.384-1.761-1.083C41.495 3.27 37.543.012 30.598 0 18.702-.018 11.679 10.125 11.767 16.839c.055 4.183.854 8.78 2.94 10.712 2.128 1.97 5.712 3.41 11.98 4.9l.421.11-1.005 1.117c-1.649 1.405-2.834 2.755-5.925 2.831-1.955 0-2.866-.669-3.566-1.296l-.147.062c.163.329.59 1.063 1.14 1.739.704.857 1.35 1.306 1.93 1.336.095.025.914.234 2.238-.179 1.71-.534 3.556-1.817 5.338-3.824l.688-.771.69-.769 4.475.799c.511.116 1.015.173 1.457.303l-1.843 2.806c-2.325 3.51-3.214 4.605-3.214 4.605s-1.551-.224-1.96-.303c-1.276-.255-3.283-.382-6.06-.359-5.432-.05-12.938 1.959-17.463 6.469a13.529 13.529 0 0 0-2.288 2.996A11.737 11.737 0 0 0 0 56.078C0 58.81 1.798 62 6.876 62c6.794 0 12.706-6.42 15.824-9.872l.5-.556c.928-1.019 1.353-1.732 1.692-2.095 3.593.995 9.43 3.433 14.54 6.786 1.038-1.058 4.088-4.69 6.947-8.944 1.568-2.334 5.184-7.758 5.313-11.921.126-3.987-3.603-8.775-10.497-10.197.221-.458.633-1.162 1.667-2.762 2.834-4.392 5.39-8.96 10.78-8.96.964 0 2.969.22 4.055 2.24.032.046.05.076.095.127zM17.445 55.863c-1.312 1.119-2.63 2.065-3.922 2.816-1.358.747-2.686 1.296-4.021 1.63a11.6 11.6 0 0 1-2.799.38c-.256 0-.516-.015-.822-.042-2.755-.271-4.47-1.906-4.47-4.277 0-6.279 10.526-8.23 14.361-8.23l.808-.005c1.756-.014 2.985.111 6.431.806l.723.192a46.746 46.746 0 0 1-5.011 5.552c-.435.407-.84.806-1.278 1.178z\" fill=\"#0A1633\" fill-rule=\"evenodd\"/>\n    </symbol>\n    <symbol viewBox=\"0 0 60 41\" id=\"icon-loading-watoday\">\n      <path d=\"M29.974 11.33h-.334c-.611 1.626-10.344 27.707-10.566 28.269-.22.618-.5 1.401-1.389 1.401-.611 0-.946-.449-1.167-1.12L4.007 4.318C3.45 2.746 2.448 2.297 1.725 2.297H.335C.055 2.297 0 2.074 0 1.85V.392C0 .112.056 0 .445 0c.445 0 2.17.166 7.897.166C12.347.166 14.624 0 15.18 0c.389 0 .446.166.446.447V1.85c0 .28-.057.447-.446.447h-1.223c-.89 0-1.446.788-1.112 1.91l7.62 24.453h.331c.668-1.906 7.34-19.744 7.34-21.763 0-1.403-.556-2.86-1.053-3.53-.502-.675-1.225-1.07-1.67-1.07h-1.112c-.279 0-.335-.113-.335-.447V.392c0-.226.056-.392.39-.392.502 0 2.449.166 7.34.166 4.67 0 6.784-.166 7.34-.166.334 0 .386.166.386.502v1.403c0 .224-.052.392-.385.392h-1.67c-.889 0-1.39 1.235-1.11 2.189l7.673 24.174h.333c2.728-7.627 7.564-21.874 7.564-24.904 0-.617-.723-1.459-1.78-1.459h-1.612c-.335 0-.392-.168-.392-.504v-1.4c0-.227.057-.393.446-.393.555 0 2.504.166 5.95.166C57.555.166 59.167 0 59.61 0c.336 0 .389.111.389.502v1.403c0 .224 0 .392-.389.392h-1.054c-.946 0-2.058.62-2.614 2.02-.668 1.796-11.846 32.252-12.958 34.946-.277.673-.667 1.737-1.669 1.737-.779 0-1.11-.728-1.389-1.51l-9.953-28.16\" fill=\"#0A1633\" fill-rule=\"evenodd\"/>\n    </symbol>\n    <symbol viewBox=\"0 0 61 56\" id=\"icon-loading-theage\">\n      <path d=\"M55.49 51.65a76.398 76.398 0 0 1-3.368-6.912L32.98 0h-4.86L16.7 28.195c-1.56 3.883-9.118 21.282-10.102 23.07-1.2 2.15-2.076 1.862-6.598 2.25V56c1.642-.077 6.268-.232 9.143-.232 2.547 0 5.093.155 7.394.232v-2.486c-6.16-.077-6.736-.387-6.736-1.24 0-.312.33-1.244.74-2.332l4.503-11.435c.494-1.165.741-1.398 1.808-1.398h18.65c1.481 0 1.645 0 2.137 1.165l4.953 12.367c.328.776.575 1.475.575 1.941 0 .39-.575.778-7.394.932V56c6.407-.154 9.2-.232 12.242-.232 4.435 0 9.37.078 12.985.232v-2.64c-3.184 0-4.771-.388-5.51-1.71zM35.61 34.391c0 .233-.411.466-.984.544H18.151c-1.151 0-1.48-.233-1.48-.466s.166-.544.329-1.088l8.973-22.253c.246-.466.33-.854.494-.854.162 0 .41.388.493.7l.047.116 8.274 22.291c.245.622.328.777.328 1.01z\" fill=\"#0A1633\" fill-rule=\"evenodd\"/>\n    </symbol>\n    <symbol viewBox=\"0 0 47 62\" id=\"icon-loading-bt\">\n      <path d=\"M25.33 53.374c-3.825 0-7.729-1.627-10.519-5.29V33.278c2.312-4.556 6.774-6.51 10.678-6.51 7.17 0 11.712 6.349 11.712 13.183 0 6.427-3.824 13.424-11.872 13.424m1.99-35.23c-4.38 0-9.479 1.79-12.508 5.776V0H0v8.782l5.172.34v51.9h8.764l.48-4.882C17.44 60.21 22.698 62 27.162 62 38.873 62 47 51.666 47 40.193c0-12.285-8.445-22.048-19.68-22.048\" fill=\"#0A1633\" fill-rule=\"evenodd\"/>\n    </symbol>\n  </svg>\n  ```\n  You can then use the button style as follows.\n\n  Your SCSS:\n  ```\n  .elementContainingYourLoaderClass {\n    position: relative;\n  }\n\n  .yourLoaderClass {\n    @include loader(\"standard\");\n  }\n  ```\n  Your HTML:\n  ```\n  <div class=\"yourLoaderClass\">\n    <div class=\"loader-icon\">\n      <div class=\"loader-icon__borders-container\">\n        <div class=\"loader-icon__borders-container__borders\"></div>   \n      </div>\n      <svg \n        viewBox=\"0 0 60 60\" version=\"1.1\" \n        xmlns=\"http://www.w3.org/2000/svg\"\n        class=\"loader-icon__svg\">\n        <use \n          xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n          xlink:href=\"#icon-loading-smh\" \n          class=\"loader-icon__svg__image\" >\n      </svg>\n    </div>\n    <p class=\"loader-message\">\n      Some default message.\n    </p>\n    <div class=\"loader-retry\">\n      <button class=\"loader-retry__button\">\n        Try again\n      </button>\n    </div>\n  </div>\n\n  ```\n*/\n/*\n  Loader\n\n  @param { Number with unit } icon-side-length - Length of the side of the loading icon to be displayed\n  @param { Color } icon-color - Color of the loading icon\n  @param { Color } inner-border-color - Color of the inner spinning border\n  @param { Color } outer-border-color - Color of the outer spinning border\n  @param { color } text-color - Color of the loading text\n*/\n/*\n  Loader\n\n  @param { String } style - String describing style of loader.\n*/\n/*\n  Loader container\n*/\n/*\n  Drop-cap\n\n  February 6, 2017\n  ask sorenfrederiksen@fairfaxmedia.com.au\n\n  A large capital letter used to start a section of a feature article.\n  \n  With the above in your HTML document, you can use this style as follows.\n\n  Your SCSS:\n\n  ```\n  .yourDropCapClass {\n    @include drop-cap(1rem);\n  }\n  ```\n\n  Your HTML:\n  ```\n  <p>\n    <span class=\"yourDropCapClass\">T</span>here are about 17,000 rips at beaches around Australia \n    on any given day. Chances are that – unless you’re a skilled surf lifesaver or an extremely \n    experienced surfer – you’d prefer not to be dicing with them.\n  </p>\n  ```\n*/\n/*\n  Drop cap\n\n  @param { Number with unit } normal-font-size - Size of most of the text in the drop-cap's \n  section\n*/\n/*\n  Fancy radio\n\n  April 9, 2018\n  ask sorenfrederiksen@fairfaxmedia.com.au\n\n  A pair of mix-ins to help users implement tab-like 'fancy' radio buttons.\n\n  All mix-ins result in radio button collections that can signify the buttons are deactivated (apply \n  the '.is--deactivated' class).\n\n  You can use this style as follows.\n\n  Example SCSS:\n  ```\n  .yourFancyRadioClass {\n    @include fancy-radio('standard');\n  }\n  ```\n\n  Example HTML:\n  ```\n  <div class=\"fancy-radio\">\n    <p>\n      Options label\n    </p>\n    <div>\n      <input \n        type=\"radio\" \n        name=\"options\" \n        id=\"option-1\"\n        value=\"option-1\"\n        checked>\n      <label \n        for=\"option-1\">\n        Option 1\n      </label>\n      <input \n        type=\"radio\" \n        name=\"options\" \n        id=\"option-2\"\n        value=\"option-2\">\n      <label \n        for=\"option-2\">\n        Option 2\n      </label>\n      <input \n        type=\"radio\" \n        name=\"options\" \n        id=\"option-3\"\n        value=\"option-3\">\n      <label \n        for=\"option-3\">\n        Option 3\n      </label>\n      <input \n        type=\"radio\" \n        name=\"options\" \n        id=\"option-4\"\n        value=\"option-4\">\n      <label \n        for=\"option-4\">\n        Option 4\n      </label>\n      <input \n        type=\"radio\" \n        name=\"options\" \n        id=\"option-5\"\n        value=\"option-5\">\n      <label \n        for=\"option-5\">\n        Option 5\n      </label>\n    </div>\n  </div>\n  ```\n*/\n/*\n  Fancy radio\n\n  @param { Color } color - Colour of the radio buttons' text\n  @param { Color } checked-color - Colour of the radio buttons' text when they are checked\n  @param { Color } background - Background colour of the radio buttons\n  @param { Color } checked-background - Background colour of the radio buttons when they are checked\n  @param { Color } hover-background - Background colour of the radio buttons when they are checked\n  @param { String } internal-border - Border between the radio buttons\n  @param { String } external-border - Border surrounding the collection of radio buttons\n  @param { Number with unit } font-size - Size of the radio buttons' text\n  @param { Color } label-color - Colour of the radio button group's label's text\n*/\n/*\n  Fancy radio\n\n  @param { String } style - String denoting style of fancy radio (e.g. 'standard', 'standard--dark')\n*/\n/*\n  Custom fancy radio\n\n  @param { Number with unit } font-size - Size of the radio buttons' text\n  @param { Color } color - Colour of the radio buttons' text\n  @param { Color } checked-color - Colour of the radio buttons' text when they are checked\n  @param { Color } background - Background colour of the radio buttons\n  @param { Color } checked-background - Background colour of the radio buttons when they are checked\n  @param { Color } hover-background - Background colour of the radio buttons when they are checked\n  @param { String } internal-border - Border between the radio buttons\n  @param { String } external-border - Border surrounding the collection of radio buttons\n  @param { Color } label-color - Colour of the radio button group's label's text\n*/\n/*\n  State rules are ways to describe how our modules or layouts will look when in a particular state. \n  Is it hidden or expanded? Is it active or inactive? They are about describing how a module or \n  layout looks on screens that are smaller or bigger. They are also about describing how a module \n  might look in different views like the home page or the inside page.\n*/\n#dvideo {\n  width: 100%;\n  border-bottom: 10px solid white; }\n  #dvideo .wrap {\n    display: -ms-flexbox;\n    display: flex;\n    -ms-flex-pack: center;\n        justify-content: center;\n    width: 100%;\n    max-width: 750px;\n    margin: 0 auto;\n    height: 100vh;\n    padding: 20px; }\n    @media (min-width: 1140px) {\n      #dvideo .wrap {\n        min-width: 1140px; } }\n    @media (min-width: 1700px) {\n      #dvideo .wrap {\n        min-width: 1700px; } }\n    #dvideo .wrap .inner {\n      -ms-flex-item-align: center;\n          align-self: center;\n      width: 100%;\n      min-height: 500px;\n      position: relative; }\n      #dvideo .wrap .inner .left {\n        width: 100%;\n        height: 100%;\n        float: right; }\n        #dvideo .wrap .inner .left .video-holder {\n          -webkit-transition: opacity 350ms ease;\n          -o-transition: opacity 350ms ease;\n          transition: opacity 350ms ease; }\n        @media only screen and (min-width: 600px) {\n          #dvideo .wrap .inner .left {\n            width: 100%;\n            height: 100%; } }\n        @media only screen and (min-width: 1140px) {\n          #dvideo .wrap .inner .left {\n            width: 50%;\n            height: 100%; } }\n      #dvideo .wrap .inner .right {\n        width: 100%;\n        height: 100%; }\n        #dvideo .wrap .inner .right .video-holder {\n          -webkit-transition: opacity 350ms ease;\n          -o-transition: opacity 350ms ease;\n          transition: opacity 350ms ease; }\n        @media only screen and (min-width: 600px) {\n          #dvideo .wrap .inner .right {\n            width: 100%;\n            height: 100%; } }\n        @media only screen and (min-width: 1140px) {\n          #dvideo .wrap .inner .right {\n            width: 50%;\n            height: 100%; } }\n      @media (max-width: 400px) {\n        #dvideo .wrap .inner {\n          min-height: 390px; } }\n\n/*  -----  Video - React styles overrides -----  */\n.video-react {\n  background-color: #ebf5ec; }\n\n.video-react .video-react-video {\n  outline: none; }\n\n.video-react .video-react-big-play-button.video-react-big-play-button-center {\n  z-index: 9; }\n\n.video-react .video-react-poster {\n  background-color: #ebf5ec; }\n\n.video-react-current-time-display, .video-react-duration-display, .video-react-time-divider, .video-react-control-text {\n  font-family: 'PT Sans', 'Trebuchet MS', 'Arial Narrow', sans-serif;\n  font-weight: 700;\n  font-size: 14px; }\n\n.__inner {\n  -ms-flex-item-align: center;\n      align-self: center;\n  width: 100%;\n  min-height: 500px;\n  position: relative; }\n  .__inner .left {\n    width: 50%;\n    min-height: 500px;\n    float: right;\n    display: none; }\n    @media only screen and (min-width: 600px) {\n      .__inner .left {\n        width: 50%; } }\n    @media only screen and (min-width: 1140px) {\n      .__inner .left {\n        width: 50%; } }\n  .__inner .right {\n    width: 100%;\n    height: 100%; }\n    .__inner .right .video-holder {\n      -webkit-transition: opacity 350ms ease;\n      -o-transition: opacity 350ms ease;\n      transition: opacity 350ms ease; }\n    @media only screen and (min-width: 600px) {\n      .__inner .right {\n        width: 100%;\n        height: 100%; } }\n    @media only screen and (min-width: 1140px) {\n      .__inner .right {\n        width: 50%;\n        height: 100%; } }\n  @media (max-width: 400px) {\n    .__inner {\n      min-height: 390px; } }\n\n.big-btn__force-hide {\n  display: none !important; }\n\n.big-btn__force-show {\n  display: block !important; }\n\n.playpause {\n  pointer-events: auto;\n  background-repeat: no-repeat;\n  width: 100%;\n  height: 50%;\n  position: absolute;\n  left: 0%;\n  right: 0%;\n  top: 0%;\n  bottom: 0%;\n  text-align: center;\n  margin: auto 0;\n  background-size: contain;\n  background-position: center;\n  z-index: 200; }\n  .playpause img {\n    width: 100px;\n    cursor: pointer; }\n  .playpause img:hover {\n    opacity: 0.8; }\n  @media only screen and (min-width: 1140px) {\n    .playpause {\n      width: 50%;\n      height: 14%; } }\n  @media only screen and (min-width: 600px) {\n    .playpause {\n      height: 18%; } }\n  @media (max-width: 374px) {\n    .playpause {\n      height: 60%; } }\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/components/Waypoints/Videos/VideoQuotesSideBySide/DVideo/DVideo.css","@charset \"UTF-8\";\n/*\n  Fairfax Presentation Styles\n\n  ask sorenfrederiksen@fairfaxmedia.com.au\n\n  This file binds together the various components of the Fairfax Presentation Styles library. \n\n  To use this file in a project, include it like so:\n\n  .../ css\n      - main.scss <- File imports '_ffx-prez-styles.scss', e.g. @import 'libs/_ffx-prez-styles.scss' \n      - main.css  <- Main file above compiles to this\n  ..../ lib\n        - '_ffx-prez-styles.scss'\n        - etc.\n\n  See 'https://smacss.com/book/categorizing' for more on the system used to categorise the styling\n  rules included.\n*/\n/* \n  Base rules are the defaults. They are almost exclusively single element selectors (e.g. 'p', 'a',\n  'input', rather than class selectors, etc.) but base rules could include attribute selectors, \n  pseudo-class selectors, child selectors or sibling selectors.\n\n  We also use 'Base' to include variables broadly depended on by many other styles (e.g. colours,\n  font and text styles).\n*/\n/*\n  Reset\n\n  Fairfax styles reset from 'prez-library-react-shared-components':\n\n  https://bitbucket.org/sorenfrederiksenffx/prez-library-react-shared-components\n\n  October 24, 2017\n  ask sorenfrederiksen@fairfaxmedia.com.au\n*/\n/*\n  Convert between variable types\n\n  These functions are used to convert between variable types.\n\n  Adapted from: https://codepen.io/jakob-e/pen/AHunv\n*/\n/*\n  To string\n*/\n/*\n  To number\n*/\n/*\n  To integer\n*/\n/*\n  To U-integer\n*/\n/*\n  Convert between unit types\n\n  These functions are used to convert unit values from one unit type to another.\n\n  Adapted from: https://codepen.io/jakob-e/pen/AHunv\n*/\n/*\n  To unit\n\n  @param { String } unit - String denoting unit type (e.g. 'px')\n  @param { Number } input - Number with unit suffix (if it has one, e.g. '10em')\n  @returns { Number } - Number of denoted unit, if a conversion is possible (e.g. '10em' to 'em'\n  results in '100px')\n*/\n/*\n  To line height\n\n  Function takes a font size and returns an appropriate line-height.\n\n  @param { Number } font-size - Number (potentially with unit) denoting size of font\n  @param { Number } line-height - Number (potentially with unit) denoting line height desired\n*/\n/*\n  Colors\n\n  November 9, 2017\n  ask sorenfrederiksen@fairfaxmedia.com.au\n*/\n/*\n  Real color names\n*/\n/*\n  Descriptive color names\n*/\n/*\n  Functional color names\n*/\n/*\n  Colours - Australian politics\n\n  November 9, 2017\n  ask sorenfrederiksen@fairfaxmedia.comau\n*/\n/*\n  Colors - Charts\n\n  January 1, 2017\n  Ask sorenfrederiksen@fairfaxmedia.com.au\n\n  Colors for use in data visualisations. These and other styles are documented here:\n\n  https://ffxblue.atlassian.net/wiki/spaces/PROD/pages/32577164/Infogram+Style\n*/\n/*\n  Fonts\n\n  The file assumes it will be compiled to a CSS file that sits like so in the project's directory \n  hierarchy:\n\n  main.css\n  .. / assets\n  .. .. / fonts\n  .. .. .. / abril-titling\n  .. .. .. .. / AbrilTitling-Semibold.woff\n  .. .. .. .. / AbrilTitling-Semibold.woff2\n  .. .. .. / pt-sans\n  .. .. .. .. / PTSans-Regular.woff\n  .. .. .. .. / PTSans-Regular.woff2\n  .. .. .. .. / PTSans-Bold.woff\n  .. .. .. .. / PTSans-Bold.woff2\n  .. .. .. / pt-serif\n  .. .. .. .. / PTSerif-Regular.woff\n  .. .. .. .. / PTSerif-Regular.woff2\n  .. .. .. .. / PTSerif-Bold.woff\n  .. .. .. .. / PTSerif-Bold.woff2\n*/\n/*\n  Type\n\n  Standard and other type styles.\n\n  October 24, 2017\n  ask sorenfrederiksen@fairfaxmedia.com.au\n*/\n/*\n  These mix-ins are not used in the main, public 'standard-typography' mix-in, because they would \n  burden projects with bulkier styles expressed in long- rather than the short-form of that main \n  mix-in.\n\n  (As in, if we're assuming the user wants to apply all standard typographic styles, we can apply\n  styles to 'h1, h2, h3, h4, h5' all at once, saving many lines of code. Without that assumption,\n  we have to repeat our styles for each individual type of heading element.)\n\n  Individual typographical mix-ins are provided only for 'h1', 'h2', 'h3' and 'p' elements, as these\n  are considered most likely to prove of use.\n\n  The utility of all of these mix-ins is debatable, and subject to future consideration.\n*/\n/*\n  Standard typography - h1\n*/\n/*\n  Standard typography - h2\n*/\n/*\n  Standard typography - h3\n*/\n/*\n  Standard typography - p\n*/\n/*\n  Standard typography\n*/\n/*\n  Animations\n\n  January 1, 2018\n  ask sorenfrederiksen@fairfaxmedia.com.au\n*/\n@-webkit-keyframes spin {\n  100% {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg); } }\n@keyframes spin {\n  100% {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg); } }\n\n/*\n  Break point\n\n  Mix-in used to create standard Fairfax breakpoints.\n\n  These mix-ins can be used like so:\n\n  @includes('only', 'small') {\n    \n    .someMobileStyle {\n      color: red;\n    }\n\n    // ... other styles that will only show within the 'small' break-point bracket\n  }\n\n  See the 'Media Queries' section of this for a deeper explanation of how these work:\n  https://robots.thoughtbot.com/sasss-content-directive\n\n  @param { String } type - String denoting type of break-point to be created\n  @param { String } size - String denoting size of break-point to be created\n*/\n/* \n  Layout rules divide the page into sections. Layouts hold one or more modules together.\n*/\n/*\n  Embedded interactive\n\n  January 1, 2017\n  ask sorenfrederiksen@fairfaxmedia.com.au\n\n  Default styles for element containing embedded interactive.\n\n  Your SCSS:\n\n  ```\n  .yourEmbeddedInteractiveContainerClass {\n    @include embedded-interactive;\n  }\n  ```\n\n  Your HTML:\n\n  ```\n  <div class=\"yourEmbeddedInteractiveContainerClass\">\n    <!-- Your application -->\n  </div>\n  ```\n*/\n/*\n  Feature article header\n\n  November 7, 2017\n  ask sorenfrederiksen@fairfaxmedia.com.au\n\n  A mix-in that styles a container and its contents to become the header section of a long-form\n  feature article, including the article's header, subtitle, author credits, date and header\n  sharing buttons.\n\n  Your SCSS:\n\n  ```\n  // The class of your feature article header\n  .yourFeatureArticleHeaderClass {\n    @include feature-article-header(\"standard\", true, false);\n  }\n  ```\n\n  If you're using the `standard-typography` mix-in elsewhere in your style-sheet, you can set that\n  last variable - the `false` - to `true`. When set to `true`, that parameter will make the\n  `feature-article-header` mix-in assume that `standard-typography` is active, and so rely on\n  styles associated with that mix-in, resulting in less-bloated styles.\n\n  For example: \n\n  ```\n  // The class of your feature article header\n  .yourFeatureArticleHeaderClass {\n    @include feature-article-header(\"standard\", true, true);\n  }\n  ```\n\n  Your HTML:\n  ```\n  <header class=\"yourFeatureArticleHeaderClass\">\n\n    <p class=\"feature-article-header__topic\">\n      <a href=\"/national\">Your feature article's topic</a>\n    </p>\n    \n    <h1 class=\"feature-article-header__title\">\n      Your feature article title here\n    </h1>\n\n    <div class=\"feature-article-header__break\"></div>\n\n    <!-- Article header social media sharing buttons -->\n    <ul class=\"feature-article-header__social\">\n      <li class=\"feature-article-header__social__button social-button__facebook\">\n        <a href=\"javascript:void(0);\">\n          <span>Share on Facebook</span>\n          <svg height=\"1em\" width=\"1em\" aria-hidden=\"true\" focusable=\"false\">\n            <use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#icon-facebook\"></use>\n          </svg>\n        </a>\n      </li>\n      <li class=\"feature-article-header__social__button social-button__twitter\">\n        <a href=\"javascript:void(0);\">\n          <span>Share on Twitter</span>\n          <svg height=\"1em\" width=\"1em\" aria-hidden=\"true\" focusable=\"false\">\n            <use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#icon-twitter\"></use>\n          </svg>\n        </a>\n      </li>\n      <li class=\"feature-article-header__social__button social-button__whatsapp\">\n        <a href=\"javascript:void(0);\">\n          <span>Share on WhatsApp</span>\n          <svg height=\"1em\" width=\"1em\" aria-hidden=\"true\" focusable=\"false\">\n            <use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#icon-whatsapp\"></use>\n          </svg>\n        </a>\n      </li>\n      <li class=\"feature-article-header__social__button social-button__email\">\n        <a href=\"javascript:void(0);\">\n          <span>Share on Email</span>\n          <svg height=\"1em\" width=\"1em\" aria-hidden=\"true\" focusable=\"false\">\n            <use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#icon-email\"></use>\n          </svg>\n        </a>\n      </li>\n    </ul>\n\n    <p class=\"feature-article-header__subtitle\">\n      Here, you'll input a subtitle of around a sentence in length, usually running over two lines..\n    </p>\n\n    <p class=\"feature-article-header__author\">\n      by Soren Frederiksen &amp; Donald Trump\n    </p>\n\n    <p class=\"feature-article-header__date\">\n      February 6, 2018\n    </p>\n\n  </header>\n  ```\n*/\n/*\n  Feature article header\n\n  @param { Color } title-color - Colour used to colour the feature header's title\n  @param { Color } subtitle-color - Colour used to colour the feature header's subtitle\n  @param { Color } topic-color - Colour used to colour the feature header's topic\n  @param { Color } break-color - Colour used to colour the feature header's break between its title,\n  subtitle and other elements\n  @param { Color } author-and-date-color - Colour used to colour the feature header's author and\n  date elements\n  @param { Color } social-button-color - Colour used to colour the feature header's social buttons\n  @param { Boolean } sharing-only-on-mobile - Boolean denoting whether or not feature article header\n  sharing buttons wills be shown on devices larger than mobile\n  @param { Boolean } standard-typography-in-us - Boolean indicating whether or not the \n  'standard-typography' mix-in is in use elsewhere in this style-sheet\n*/\n/*\n  Feature article header\n\n  @param { String } style - String describing style of feature article header (e.g. 'standard' or\n  'standard--dark')\n  @param { Boolean } sharing-only-on-mobile - Boolean denoting whether or not feature article header\n  sharing buttons wills be shown on devices larger than mobile\n  @param { Boolean } standard-typography-in-us - Boolean indicating whether or not the \n  'standard-typography' mix-in is in use elsewhere in this style-sheet\n*/\n/*\n  Custom feature article header\n\n  @param { Color } title-color - Colour used to colour the feature header's title\n  @param { Color } subtitle-color - Colour used to colour the feature header's subtitle\n  @param { Color } topic-color - Colour used to colour the feature header's topic\n  @param { Color } break-color - Colour used to colour the feature header's break between its title,\n  subtitle and other elements\n  @param { Color } author-and-date-color - Colour used to colour the feature header's author and\n  date elements\n  @param { Color } social-button-color - Colour used to colour the feature header's social buttons\n  @param { Boolean } sharing-only-on-mobile - Boolean denoting whether or not feature article header\n  sharing buttons wills be shown on devices larger than mobile\n  @param { Boolean } standard-typography-in-us - Boolean indicating whether or not the \n  'standard-typography' mix-in is in use elsewhere in this style-sheet\n*/\n/*\n  Modules are the reusable, modular parts of our design.\n*/\n/*\n  Sports team icon\n\n  The file assumes it will be compiled to a CSS file that sits like so in the project's directory \n  hierarchy:\n\n  main.css\n  .. / libs\n  .. .. / ffx-prez-styles\n  .. .. .. / assets\n  .. .. .. .. / images\n  .. .. .. .. / logos\n  .. .. .. .. .. / sport\n  .. .. .. .. .. .. / mc-team-logos$2x.png\n*/\n/*\n  Sports team icon\n\n  @param { Number with unit } side-length - Figure with unit that determines width and height of icon\n  @param { String } league - String denoting which set of icons to include in icon style\n*/\n/*\n  Button\n\n  October 20, 2017\n  ask sorenfrederiksen@fairfaxmedia.com.au\n\n  A series of mix-ins to help developers hastily apply standard button styles.\n\n  Users are encouraged to stick to the standard button mixin ('button'), except where a given color\n  scheme demands a change (use 'button--custom') or the function of the button necessitates one \n  (e.g. where the button deletes things, use 'button--destructive').\n\n  All mix-ins result in buttons that can be made to appear deactivated (apply the '.is--deactivated'\n  class to your button) or to signify the application is in the midst of loading (apply the \n  '.is--loading' class). The latter requires the inclusion of the SVG element include in the example\n  HTML below.\n\n  To use this button style, add this to the top of your HTML document (or add the symbol elements to \n  an existing svg container):\n\n  ```\n  <svg xmlns=\"http://www.w3.org/2000/svg\" style=\"position:absolute; width: 0; height: 0;\">\n    <symbol viewBox=\"0 0 40 40\" id=\"icon-loading\">\n      <circle class=\"loading__icon__circle\" opacity=\"0\" cx=\"15.8\" cy=\"15\" r=\"15\"></circle>\n      <path d=\"M27.8084006,22.8842813 C29.5771785,20.6011257 30.6299412,17.7353365 \n               30.6299412,14.6236613 C30.6299412,9.67647577 27.9688583,5.35081946 \n               24,3\" class=\"loading__icon__active-segment\"></path>  \n    </symbol>\n  </svg>\n  ```\n\n  You can then use the button style as follows.\n\n  Your SCSS:\n\n  ```\n  .yourButtonClass {\n    @include button(\"medium\", \"dynamic\", \"solid\");\n  } \n\n  // ... or ...\n\n  .yourCustomButtonClass {\n    @include button--custom(#fff, red, \"1px solid red\", \"large\", \"dynamic\", \"red\");\n  }\n\n  // ... or ...\n\n  .yourDestructiveButtonClass {\n    @include button--destructive(\"large\", \"fixed\", \"solid--reversed\");\n  }\n  ```\n  Your HTML:\n\n  ```\n  <button class=\"yourButtonClass\">\n    <span>A long button</span>\n    <svg viewBox=\"0 0 40 40\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" \n         xmlns:xlink=\"http://www.w3.org/1999/xlink\" stroke=\"#096DD2\" \n         stroke-width=\"3\" fill=\"transparent\" class=\"button-loading\">\n      <use \n        xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n        xlink:href=\"#icon-loading\" \n        class=\"button-loading__icon\" \n        transform=\"translate(6.5 6.5)\">\n    </svg>\n  </button>\n  ```\n*/\n/*\n  Button\n\n  @param { Color } bg - Color for the button's background\n  @param { Color } hover-bg - Color for the button's background when user hovers over it\n  @param { Color } active-bg - Color for the button's background when the user clicks or taps it\n  @param { Color } color - Color for button's text\n  @param { Color } hover-color - Color for button's text when user hovers over it\n  @param { Color } active-color - Color for button's text when user clicks or taps it\n  @param { String } size - String denoting size of button (e.g. 'small', 'medium', 'large')\n  @param { String } size-rules - String denoting rules of how button will be sized ('fixed' or \n  'dynamic')\n  @param { Color } outline - Color of button's outline when it is clicked \n  @param { Boolean } can-load - Boolean indicating whether button can enter the loading state\n*/\n/*\n  Button deactivated\n*/\n/*\n  Button loading\n*/\n@-webkit-keyframes loading-icon-spin {\n  100% {\n    -webkit-transform: translateX(-50%) translateY(-50%) rotate(360deg);\n            transform: translateX(-50%) translateY(-50%) rotate(360deg); } }\n@keyframes loading-icon-spin {\n  100% {\n    -webkit-transform: translateX(-50%) translateY(-50%) rotate(360deg);\n            transform: translateX(-50%) translateY(-50%) rotate(360deg); } }\n\n/*\n  Button\n  \n  @param { String } size - String describing size of button (e.g. 'small', 'medium', 'large')\n  @param { String } size-rules - String describing rules determining size of button (e.g. 'fixed' or\n  'dynamic')\n  @param { String } style - String describing style of button (e.g. 'solid', 'solid--reversed', \n  'hollow' or 'hollow--reversed')\n  @param { Boolean } can-load - Boolean indicating whether button can enter the loading state\n*/\n/*\n  Custom button\n\n  @param { Color } custom-background - Colour for the background of the button\n  @param { Color } custom-color - Colour for the text of the button\n  @param { String } custom-border - Short-form border property for the button (e.g. '1px solid red')\n  @param { String } size - String describing size of button (e.g. 'small', 'medium', 'large')\n  @param { String } size-rules - String describing rules determining size of button (e.g. 'fixed' or\n  'dynamic')\n  @param { Color } custom-outline - Colour for the outline (shown on click) of the button\n  @param { Boolean } can-load - Boolean indicating whether button can enter the loading state\n*/\n/*\n  Destructive button\n\n  @param { String } size - String describing size of button (e.g. 'small', 'medium', 'large')\n  @param { String } size-rules - String describing rules determining size of button (e.g. 'fixed' or\n  'dynamic')\n  @param { String } style - String describing style of button (e.g. 'solid' or 'solid--reversed')\n*/\n/*\n  Social button\n\n  October 24, 2017\n  ask sorenfrederiksen@fairfaxmedia.com.au\n\n  A mix-in to facilitate the use of standard social media sharing buttons, including those for \n  Facebook, Twitter, Instagram, WhatsApp, Google Plus and Email.\n\n  To use social buttons, add this to the top of your HTML document (or add the symbol elements to \n  an existing svg container):\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" style=\"position:absolute; width: 0; height: 0;\">\n      <symbol viewBox=\"0 0 32 32\" id=\"icon-twitter\">\n        <path d=\"M32 6.371c-1.16.525-2.139.542-3.177.023 1.34-.811 1.4-1.38 1.884-2.916a12.91 12.91 0 0 1-4.115 1.596A6.431 6.431 0 0 0 21.864 3c-3.578 0-6.479 2.94-6.479 6.564 0 .515.058 1.016.167 1.496C10.167 10.787 5.394 8.173 2.2 4.2a6.612 6.612 0 0 0-.879 3.302 6.584 6.584 0 0 0 2.883 5.463 6.402 6.402 0 0 1-2.934-.82l-.001.082c0 3.18 2.234 5.833 5.198 6.437a6.43 6.43 0 0 1-2.927.112c.825 2.607 3.218 4.505 6.052 4.559A12.903 12.903 0 0 1 0 26.052 18.167 18.167 0 0 0 9.93 29c11.919 0 18.433-10.001 18.433-18.675 0-.286-.004-.566-.017-.85C29.61 8.551 31.132 7.69 32 6.371\" fill=\"currentColor\" fill-rule=\"evenodd\"></path>\n      </symbol>\n      <symbol viewBox=\"0 0 32 32\" id=\"icon-email\">\n        <g fill=\"currentColor\" fill-rule=\"evenodd\">\n          <path d=\"M16.086 17.334L30.627 6.502A3.267 3.267 0 0 0 28.885 6h-25.6c-.621 0-1.194.177-1.685.47l14.486 10.864z\"></path>\n          <path d=\"M16.464 18.857a.805.805 0 0 1-.931-.002L.413 7.538C.158 7.98 0 8.478 0 9.018v13.847c0 1.695 1.435 3.077 3.2 3.077h25.6c1.765 0 3.2-1.382 3.2-3.077V9.018c0-.518-.147-1-.382-1.429L16.464 18.857z\"></path>\n        </g>\n      </symbol>\n      <symbol viewBox=\"0 0 32 32\" id=\"icon-whatsapp\">\n        <path d=\"M22.189 24.818c-.856.078-.856.701-5.6-1.165-4.74-1.868-7.733-6.732-7.967-7.044-2.187-2.91-2.762-5.991-.273-8.715.79-.86 2.748-.824 3.19.235.387.934 1.32 3.229 1.438 3.462.117.235.194.507.037.817-.186.375-.38.814-1.166 1.596-.233.233-.475.484-.203.95.272.468 1.206 1.995 2.594 3.231 1.782 1.59 3.284 2.081 3.75 2.315.467.233.74.195 1.012-.117.271-.313 1.167-1.362 1.476-1.829.312-.467.624-.388 1.05-.233.428.155 2.72 1.283 3.188 1.518.466.23.778.35.895.544.701 1.177-.963 4.212-3.421 4.435M16 0C7.178 0 0 7.177 0 16c0 3.5 1.133 6.744 3.048 9.38L1.05 31.324l6.149-1.97A15.897 15.897 0 0 0 16 32c8.821 0 16-7.177 16-16 0-8.822-7.178-16-16-16\" fill=\"currentColor\" fill-rule=\"evenodd\"></path>\n      </symbol>\n      <symbol viewBox=\"0 0 32 32\" id=\"icon-facebook\">\n        <path d=\"M18.7 17.4h5.1l.7-5.6h-5.8V8.1c0-1.6.5-2.7 2.8-2.7h3V.2c-.5 0-2.3-.2-4.4-.2-4.4 0-7.9 2.7-7.9 7.7v4.1H7.6v5.6h4.6V32h6.5V17.4z\" fill=\"currentColor\"></path>\n      </symbol>\n      <symbol viewBox=\"0 0 32 32\" id=\"icon-google\">\n        <path d=\"M28.6 14.6v-3.4H26v3.4h-3.4v2.6H26v3.4h2.6v-3.4H32v-2.6zm-8-.6a8.2 8.2 0 0 1 .2 2.2c0 5.9-4 10.3-10.2 10.3A10.65 10.65 0 0 1 0 16 10.65 10.65 0 0 1 10.6 5.5a10.48 10.48 0 0 1 7.2 2.8l-3 3A6.38 6.38 0 0 0 4.2 16a6.24 6.24 0 0 0 6.4 6.3c3.2 0 5.4-1.8 5.8-4.3h-5.8v-3.9l10-.1z\" fill=\"currentColor\" fill-rule=\"evenodd\"></path>\n      </symbol>\n      <symbol viewBox=\"0 0 32 32\" id=\"icon-instagram\">\n        <g stroke=\"currentColor\" fill=\"currentColor\">\n          <path d=\"M8.5 2.9h15c1.6 0 3 .7 3.9 1.7 1 .9 1.7 2.3 1.7 3.9v15c0 1.6-.7 3-1.7 3.9-.9 1-2.3 1.7-3.9 1.7h-15c-1.6 0-3-.7-3.9-1.7-1-.9-1.7-2.3-1.7-3.9v-15c0-1.6.7-3 1.7-3.9.9-1.1 2.3-1.7 3.9-1.7m15-1.9h-15C4.4 1 1 4.4 1 8.5v15C1 27.6 4.4 31 8.5 31h15c4.1 0 7.5-3.4 7.5-7.5v-15C31 4.4 27.6 1 23.5 1\" stroke-width=\"2\"></path>\n          <path d=\"M16 21c-1.4 0-2.6-.6-3.5-1.5-.9-.9-1.5-2.1-1.5-3.5s.6-2.6 1.5-3.5c.9-.9 2.2-1.5 3.5-1.5 1.4 0 2.6.6 3.5 1.5.9.9 1.5 2.2 1.5 3.5 0 1.4-.6 2.6-1.5 3.5-.9.9-2.1 1.5-3.5 1.5m0-12c-3.9 0-7 3.1-7 7s3.1 7 7 7 7-3.1 7-7-3.1-7-7-7\" stroke-width=\"2\"></path>\n          <path d=\"M24 9.5c-.8 0-1.5-.7-1.5-1.5s.7-1.5 1.5-1.5 1.5.7 1.5 1.5-.7 1.5-1.5 1.5m0-4c-1.4 0-2.5 1.1-2.5 2.5s1.1 2.5 2.5 2.5 2.5-1.1 2.5-2.5-1.1-2.5-2.5-2.5\"></path>\n        </g>\n      </symbol>\n    </svg>\n  \n  (In future, it might be that the above isn't necessary, as mastheads in the Fairfax Blue style\n  appear to include the symbols above on every page the site.)\n\n  With the above in your HTML document, you can use this style as follows.\n\n  Your SCSS:\n\n    .yourSocialButtonContainerStyle {\n      @include social-button-container();\n    }\n\n    .yourSocialButtonStyle {\n      @include social-button(15px, #000, #ccc); \n    }\n\n  Your HTML:\n\n    <ul class=\"yourSocialButtonContainerStyle\">\n      <li class=\"yourSocialButtonStyle\">\n        <a href=\"javascript:void(0);\">\n          <span>Share on Facebook</span>\n          <svg height=\"1em\" width=\"1em\" aria-hidden=\"true\" focusable=\"false\">\n            <use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#icon-facebook\"></use>\n          </svg>\n        </a>\n      </li>\n      <li class=\"yourSocialButtonStyle\">\n        <a href=\"javascript:void(0);\">\n          <span>Share on Facebook</span>\n          <svg height=\"1em\" width=\"1em\" aria-hidden=\"true\" focusable=\"false\">\n            <use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#icon-twitter\"></use>\n          </svg>\n        </a>\n      </li>\n      <li class=\"yourSocialButtonStyle\">\n        <a href=\"javascript:void(0);\">\n          <span>Share on Facebook</span>\n          <svg height=\"1em\" width=\"1em\" aria-hidden=\"true\" focusable=\"false\">\n            <use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#icon-email\"></use>\n          </svg>\n        </a>\n      </li>\n    </ul>\n*/\n/*\n  Social button\n\n  @param { Number with unit } side-length - Figure with unit that determines width and height of \n  button\n  @param { Color } color - Color of the button \n  @param { Color } actionColor - Color of button in hover and focus states\n*/\n/*\n  Social button container\n*/\n/*\n  Text input\n\n  November 7, 2017\n  ask sorenfrederiksen@fairfaxmedia.com.au\n\n  A couple of mix-ins to help users get standard form-based text inputs up and running.\n\n  All mix-ins result in inputs that can be made to declare the user's input is invalid (apply the \n  '.is--invalid' class to your button) or to signify the input is deactivated (apply the \n  '.is--deactivated' class).\n\n  To use text inputs, add this to the top of your HTML document (or add the symbol elements to \n  an existing svg container):\n\n  ```\n  <svg xmlns=\"http://www.w3.org/2000/svg\" style=\"position:absolute; width: 0; height: 0;\">\n    <symbol viewBox=\"0 0 16 16\" id=\"icon-validation-alert\">\n      <circle r=\"8\" cx=\"8\" cy=\"8\" fill=\"currentColor\"></circle>\n      <text \n        text-anchor=\"middle\" \n        x=\"8\" \n        y=\"13\" \n        fill=\"#fff\" \n        style=\"font-size: 13px; font-weight: 700; font-family: 'PT Sans', sans-serif\">!</text>\n    </symbol>\n  </svg>\n  ```\n  \n  You can use this style as follows.\n\n  Example SCSS:\n\n  ```\n  .yourTextInputClass {\n    @include text-input(\"standard\");\n  }\n  ```\n\n  Example HTML:\n\n  ```\n  <div class=\"yourTextInputClass\">\n    <label>Some input label</label>\n    <div>\n      <input type=\"text\" placeholder=\"Some input text\"></input>\n      <svg viewBox=\"0 0 16 16\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" \n           xmlns:xlink=\"http://www.w3.org/1999/xlink\" class=\"validation-alert\">\n        <use \n          xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n          xlink:href=\"#icon-validation-alert\" \n          class=\"validation-alert__icon\">\n      </svg>\n    </div>\n    <p class=\"validation-error\">\n      You input the wrong thing.\n    </p>\n  </div>\n  ```\n\n  Example HTML where the user's input is invalid:\n\n  ```\n  <div class=\"yourTextInputClass is--invalid\">\n    <label>Some input label</label>\n    <div>\n      <input type=\"text\" placeholder=\"Some input text\"></input>\n      <svg viewBox=\"0 0 16 16\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" \n           xmlns:xlink=\"http://www.w3.org/1999/xlink\" class=\"validation-alert\">\n        <use \n          xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n          xlink:href=\"#icon-validation-alert\" \n          class=\"validation-alert__icon\">\n      </svg>\n    </div>\n    <p class=\"validation-error\">\n      You input the wrong thing.\n    </p>\n  </div>\n  ```\n\n  (Note the 'label', 'validation-alert' and 'validation-error' elements are optional.)\n*/\n/*\n  Text input\n\n  @param { Color } color - Colour of the input's text\n  @param { String } border - Border property of input\n  @param { Color } focus-color - Colour of the input's text when in focus state\n  @param { Color } focus-border - Border property of input when in focus state\n  @param { Number with unit } font-size - Size of the input's text\n  @param { Color } background - Background colour of the input\n  @param { Color } label-color - Color of the input's label\n  @param { Number with unit } label-font-size - Size of the input's label's font\n  @param { Color } outline - Color of the outline shown when the input is in focus\n*/\n/*\n  Text input without validation error\n\n  Included for use in other mix-ins where including validation error styles would add excessively\n  and needlessly to the stylesheet produced (e.g. with the 'search-input' mix-in).\n\n  @param { Color } color - Colour of the input's text\n  @param { String } border - Border property of input\n  @param { Color } focus-color - Colour of the input's text when in focus state\n  @param { Color } focus-border - Border property of input when in focus state\n  @param { Number with unit } font-size - Size of the input's text\n  @param { Color } background - Background colour of the input\n  @param { Color } label-color - Color of the input's label\n  @param { Number with unit } label-font-size - Size of the input's label's font\n  @param { Color } outline - Color of the outline shown when the input is in focus\n*/\n/*\n  Text input\n\n  @param { String } style - String denoting style of text input\n*/\n/*\n  Custom text input\n\n  @param { Color } border-color - Colour of the input's border\n  @param { Color } focus-border-color - Colour of the input's border in focus state\n  @param { Color } color - Colour of the input's text\n  @param { Number with unit } font-size - Size of input text (label is sized at 93.75% of this)\n  @param { Color } background - Colour of input's background\n  @param { Color } outline - Colour of outline shown around input when it is in focus\n*/\n/*\n  Search input\n\n  November 7, 2017\n  ask sorenfrederiksen@fairfaxmedia.com.au\n  \n  A kind of text input specifically designed for search functionality.\n\n  To use a search input, add this to the top of your HTML document (or add the symbol element to \n  an existing svg container):\n\n  ```\n  <svg xmlns=\"http://www.w3.org/2000/svg\" style=\"position:absolute; width: 0; height: 0;\">\n    <symbol viewBox=\"0 0 32 32\" id=\"icon-search\">\n      <path d=\"M21.08 18.573l10.4 10.4a1.773 1.773 0 1 1-2.508 2.507l-10.4-10.4a11.62 11.62 0 0 1-6.902 2.26C5.225 23.34 0 18.115 0 11.67S5.225 0 11.67 0s11.67 5.225 11.67 11.67c0 2.583-.84 4.97-2.26 6.903zm-1.287-6.903a8.123 8.123 0 1 0-16.247 0 8.123 8.123 0 0 0 16.247 0z\" fill=\"currentColor\" fill-rule=\"evenodd\"/>\n    </symbol>\n  </svg>\n  ```\n  \n  With the above in your HTML document, you can use this style as follows.\n\n  Your SCSS:\n\n  ```\n  .yourSearchInputClass {\n    @include search-input(\"standard\", \"right\", \"true\");\n  }\n  ```\n\n  Your HTML:\n  ```\n  <form class=\"yourSearchInputClass\">\n    <label>Some invisible search label</label>\n    <input type=\"text\" placeholder=\"Some search placeholder text\"></input>\n    <button type=\"submit\">\n      <svg viewBox=\"0 0 16 16\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" \n           xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n        <use \n          xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n          xlink:href=\"#icon-search\" >\n      </svg>\n    </button>\n  </form>\n  ```\n\n  Your HTML when using autocomplete:\n  ```\n  <form class=\"yourSearchInputClass\">\n    <label>Some invisible search label</label>\n    <input \n      type=\"text\" \n      placeholder=\"Some search placeholder text\" \n      id=\"text-input-with-autocomplete\"/>\n    <button type=\"submit\">\n      <svg viewBox=\"0 0 16 16\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" \n           xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n        <use \n          xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n          xlink:href=\"#icon-search\" >\n      </svg>\n    </button>\n  </form>\n\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/awesomplete/1.1.2/awesomplete.js\"></script>\n  <script>\n    var data = [\"Derpit\", \"Burpit\", \"Fartit\", \"McGardit\", \"Lardit\", \"Dingo\", \"Brunswick\", \"Brunton\", \"Brunsby\"]\n\n    var auto = new Awesomplete(\"#text-input-with-autocomplete\", {\n      minChars: 2,\n      maxItems: 5,\n      list: data\n    });\n  </script>\n  ```\n*/\n/*\n  Text input autocomplete\n\n  November 7, 2017\n  ask sorenfrederiksen@fairfaxmedia.com.au\n\n  A mix-in that adds styles to the autocomplete options appended to a text input when using \n  Awesomplete-style autocompletion.\n\n  Your SCSS:\n\n  ```\n  // The class of the element containing the text input you want to have autocomplete\n  .elementContainingTextInput {\n    \n    .awesomplete {\n      @include autocomplete(\"standard\");\n    }\n  }\n  ```\n\n  Your HTML:\n  ```\n  <div class=\"elementContainingTextInput\">\n    <input type=\"text\" id=\"text-input-with-autocomplete\" />\n  </div>\n\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/awesomplete/1.1.2/awesomplete.js\"></script>\n  <script>\n    var data = [\"Derpit\", \"Burpit\", \"Fartit\", \"McGardit\", \"Lardit\", \"Dingo\", \"Brunswick\", \"Brunton\", \"Brunsby\"]\n\n    var auto = new Awesomplete(\"#text-input-with-autocomplete\", {\n      minChars: 2,\n      maxItems: 5,\n      list: data\n    });\n  </script>\n  ```\n*/\n/*\n  Autocomplete\n\n  @param { String } style - String describing style of autocomplete \n*/\n/*\n  Search input\n\n  @param { String } style - String denoting style of text input\n  @param { String } icon-position - String denoting position of search icon\n  @param { String } autocomplete - String determining whether or search input will include \n  autocomplete\n*/\n/*\n  Custom search input\n\n  @param { Color } border-color - Colour of the input's border\n  @param { Color } focus-border-color - Colour of the input's border in focus state\n  @param { Color } color - Colour of the input's text\n  @param { Number with unit } font-size - Size of input text (label is sized at 93.75% of this)\n  @param { Color } background - Colour of input's background\n  @param { Color } outline - Colour of outline shown around input when it is in focus\n*/\n/*\n  Dropdown\n\n  March 1, 2018\n  ask sorenfrederiksen@fairfaxmedia.com.au\n\n  A couple of mix-ins to help users implement standard dropdowns as quickly as possible.\n\n  All mix-ins result in inputs that can signify the input is deactivated (apply the \n  '.is--deactivated' class).\n\n  To use dropdown inputs, add this to the top of your HTML document (or add the symbol elements to \n  an existing svg container):\n\n  ```\n  <svg xmlns=\"http://www.w3.org/2000/svg\" style=\"position:absolute; width: 0; height: 0;\">\n    <symbol viewBox=\"0 0 10 7\" id=\"icon-carat\">\n      <path d=\"M1 1l4 3.74L9 1\" stroke=\"currentColor\" stroke-width=\"2\" fill=\"none\" fill-rule=\"evenodd\"/>\n    </symbol>\n    <symbol viewBox=\"0 0 9 9\" id=\"icon-tick\">\n      <path d=\"M2.978 9a.998.998 0 0 1-.706-.294L.292 6.728a1 1 0 0 1 1.415-1.414L2.853 6.46 7.188.416a1 1 0 0 1 1.625 1.166l-5.022 7A.994.994 0 0 1 2.978 9\" fill=\"currentColor\" fill-rule=\"evenodd\"/>\n    </symbol>\n    <symbol viewBox=\"0 0 16 16\" id=\"icon-validation-alert\">\n      <circle r=\"8\" cx=\"8\" cy=\"8\" fill=\"currentColor\"></circle>\n      <text \n        text-anchor=\"middle\" \n        x=\"8\" \n        y=\"13\" \n        fill=\"#fff\" \n        style=\"font-size: 13px; font-weight: 700; font-family: 'PT Sans', sans-serif\">!</text>\n    </symbol>\n  </svg>\n  ```\n  \n  You can use this style as follows.\n\n  Example SCSS:\n  ```\n  .yourDropdownClass {\n    @include dropdown(\"standard\", false, true);\n  }\n  ```\n  Example HTML:\n  ```\n    <div class=\"yourDropdownClass\">\n      <label>Some input label</label>\n      <div class=\"dropdown__inner\" id=\"dropdown-container\">\n        <span class=\"dropdown__inner__current-value\" id=\"dropdown-current-value\">Soren Frederiksen</span>\n        <svg \n          viewBox=\"0 0 10 7\" version=\"1.1\" \n          xmlns=\"http://www.w3.org/2000/svg\"\n          class=\"dropdown__inner__carat\">\n          <use \n            xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n            xlink:href=\"#icon-carat\" \n            class=\"dropdown__inner__carat__image\">\n        </svg>\n        <svg \n          viewBox=\"0 0 16 16\" version=\"1.1\" \n          xmlns=\"http://www.w3.org/2000/svg\"\n          class=\"dropdown__inner__error\">\n          <use \n            xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n            xlink:href=\"#icon-validation-alert\" >\n        </svg>\n        <svg \n          viewBox=\"0 0 16 16\" version=\"1.1\" \n          xmlns=\"http://www.w3.org/2000/svg\"\n          class=\"dropdown__inner__error\">\n          <use \n            xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n            xlink:href=\"#icon-validation-alert\" >\n        </svg>\n        <select class=\"dropdown__inner__select\" id=\"dropdown-select-input\">\n          <option value=\"Soren Frederiksen\">Soren Frederiksen</option>\n          <option value=\"Richard Lama\">Richard Lama</option>\n          <option value=\"Reginal Sengkey\">Reginal Sengkey</option>\n        </select>\n        <ul class=\"dropdown__inner__list\" id=\"dropdown-list\">\n          <li value=\"Soren Frederiksen\"\n              class=\"dropdown__inner__list__item is--selected\">\n            Soren Frederiksen\n            <svg \n              viewBox=\"0 0 10 7\" version=\"1.1\" \n              xmlns=\"http://www.w3.org/2000/svg\"\n              class=\"dropdown__inner__list__item__tick\">\n              <use \n                xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n                xlink:href=\"#icon-tick\">\n            </svg>\n          </li>\n          <li value=\"Richard Lama\"\n              class=\"dropdown__inner__list__item\">\n            Richard Lama\n            <svg \n              viewBox=\"0 0 10 7\" version=\"1.1\" \n              xmlns=\"http://www.w3.org/2000/svg\"\n              class=\"dropdown__inner__list__item__tick\">\n              <use \n                xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n                xlink:href=\"#icon-tick\">\n            </svg>\n            </svg>\n          </li>\n          <li value=\"Reginal Sengkey\"\n              class=\"dropdown__inner__list__item\">\n            Reginal Sengkey\n            <svg \n              viewBox=\"0 0 10 7\" version=\"1.1\" \n              xmlns=\"http://www.w3.org/2000/svg\"\n              class=\"dropdown__inner__list__item__tick\">\n              <use \n                xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n                xlink:href=\"#icon-tick\">\n            </svg>\n            </svg>\n          </li>\n          <li value=\"Mark Stehle\"\n              class=\"dropdown__inner__list__item\">\n            Mark Stehle\n            <svg \n              viewBox=\"0 0 10 7\" version=\"1.1\" \n              xmlns=\"http://www.w3.org/2000/svg\"\n              class=\"dropdown__inner__list__item__tick\">\n              <use \n                xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n                xlink:href=\"#icon-tick\">\n            </svg>\n            </svg>\n          </li>\n          <li value=\"Matthew Absalom-Wong\"\n              class=\"dropdown__inner__list__item\">\n            Matthew Absalom-Wong\n            <svg \n              viewBox=\"0 0 10 7\" version=\"1.1\" \n              xmlns=\"http://www.w3.org/2000/svg\"\n              class=\"dropdown__inner__list__item__tick\">\n              <use \n                xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n                xlink:href=\"#icon-tick\">\n            </svg>\n            </svg>\n          </li>\n        </ul>\n      </div>\n      <p class=\"dropdown__error\">\n        You did something wrong.\n      </p>\n    </div>\n  ```\n  In order to work fully (included the custom dropdown list), this mix-in also requires some \n  JavaScript. \n\n  Below is some bare-bones vanilla JavaScript that developers will be able to more eloquently \n  implement using whatever framework or library they're using. In principal, though,\n  this is all you need.\n\n  Example JavaScript:\n  ```\n  var dropdownValueDisplay = document.getElementById('dropdown-current-value');\n  var dropdownSelectInput = document.getElementById('dropdown-select-input');\n  var dropdownContainer = document.getElementById('dropdown-container');\n  var dropdownListItems = dropdownContainer.getElementsByClassName('dropdown__inner__list__item');\n\n  // When the user clicks the dropdown container, show it as selected\n  dropdownContainer.addEventListener('click', function() {\n    dropdownContainer.classList.toggle('is--selected');\n  });\n\n  // When the user click a dropdown list item, select it\n  for (var i = 0; i < dropdownListItems.length; i += 1) {\n    dropdownListItems[i].addEventListener('click', selectDropdownListItem);\n  }\n\n  function selectDropdownListItem(e) {\n\n    var newDropdownValue = e.target.getAttribute('value');\n\n    // Update dropdown value display and input\n    dropdownValueDisplay.innerHTML = newDropdownValue;\n    dropdownSelectInput.value = newDropdownValue;\n\n    // Update dropdown list display (and calculate variables necessary to determine position of\n    // tick)\n    for (var i = 0; i < dropdownListItems.length; i += 1) {\n      if (dropdownListItems[i] !== e.target) {\n        dropdownListItems[i].classList.remove('is--selected');\n      }\n      else {\n        indexOfTargetListItem = i;\n        dropdownListItems[i].classList.add('is--selected');\n      }\n    }\n  }\n  ```\n*/\n/*\n  Dropdown\n\n  @param { Color } color - Colour of the input's text\n  @param { String } border - Border property of input\n  @param { Color } focus-color - Colour of the input's text when in focus state\n  @param { Color } focus-carat-color - Colour of the input's carat when in focus state\n  @param { Color } focus-border - Border property of input when in focus state\n  @param { Number with unit } font-size - Size of the input's text\n  @param { Color } background - Background colour of the input\n  @parma { Color } list-item-color - Color of dropdown list items\n  @parma { Color } selected-list-item-background - Background color signifying selected list item\n  @param { Color } label-color - Color of the input's label\n  @param { Number with unit } label-font-size - Size of the input's label's font\n  @param { Boolean } use-custom-dropdown-list-on-mobile - Boolean indicating whether or not to use \n  the custom dropdown list on mobile, or whether to rely on a device's in-built dropdown\n  @param { Boolean } can-be-invalid - Boolean indicating whether or not include invalid state styles\n*/\n/*\n  Dropdown desktop custom dropdown list styles\n*/\n/*\n  Dropdown\n\n  @param { String } style - String denoting style of dropdown menu\n  @param { Boolean } use-custom-dropdown-list-on-mobile - Boolean indicating whether or not to use \n  the custom dropdown list on mobile, or whether to rely on a device's in-built dropdown\n  @param { Boolean } can-be-invalid - Boolean indicating whether or not include invalid state styles\n*/\n/*\n  Custom dropdown\n\n  @param { Number with unit } font-size - Size of input text (label is sized at 93.75% of this)\n  @param { Color } color - Colour of the input's text\n  @param { Color } background - Colour of input's background\n  @param { Boolean } use-custom-dropdown-list-on-mobile - Boolean indicating whether or not to use \n  the custom dropdown list on mobile, or whether to rely on a device's in-built dropdown\n  @param { Boolean } can-be-invalid - Boolean indicating whether or not include invalid state styles\n  @param { Color } label-color - Colour of the input's label\n  @param { Color } border-color - Colour of the input's border\n  @param { Color } focus-border-color - Colour of the input's border in focus state\n  @param { Color } list-item-color - Colour of the input's list item text\n  @param { Number with unit } list-max-height - Maximum size of the dropdown list\n*/\n/*\n  Scrollbar\n\n  March 1, 2018\n  ask sorenfrederiksen@fairfaxmedia.com.au\n\n  A couple mix-ins that add a custom scrollbar to a scrolling container.\n  \n  You can use this style as follows.\n\n  Example SCSS:\n\n  ```\n  .yourScrollingContainerClass {\n    @include scrollbar(\"standard\");\n  }\n  ```\n\n  Example HTML:\n\n  ```\n  <div class=\"yourScrollingContainerClass\">\n    <!-- Lots of elements -->\n  </div>\n  ```\n*/\n/*\n  Scrollbar\n\n  @param { Number with unit } width - Width of the scrollbar\n  @param { Color } track-color - Color of the scrollbar track\n  @param { Color } thumb-color - Color of the scrollbar thumb (i.e. the movable control in the \n  scrollbar)\n  @param { Number with unit } track-border-radius - Border radius of the scrollbar track\n  @param { Number with unit } thumb-border-radius - Border radius of the scrollbar thumb (i.e. the\n  movable control in the scrollbar)\n  @param { Number with unit } thumb-padding - Gap between the thumb and the track\n*/\n/*\n  Scrollbar\n\n  @param { String } style - String describing the style of the scrollbar\n*/\n/*\n  Custom scrollbar\n\n  @param { Number with unit } width - Width of the scrollbar\n  @param { Color } track-color - Color of the scrollbar track\n  @param { Color } thumb-color - Color of the scrollbar thumb (i.e. the movable control in the \n  scrollbar)\n  @param { Number with unit } track-border-radius - Border radius of the scrollbar track\n  @param { Number with unit } thumb-border-radius - Border radius of the scrollbar thumb (i.e. the\n  movable control in the scrollbar)\n*/\n/*\n  Loader\n\n  January 1, 2017\n  ask sorenfrederiksen@fairfaxmedia.com.au\n\n  A loading indicator featuring a masthead-appropriate logo initial.\n\n  To use this loader style, add this to the top of your HTML document (or add the symbol elements to \n  an existing svg container):\n\n  ```\n  <svg xmlns=\"http://www.w3.org/2000/svg\" style=\"position:absolute; width: 0; height: 0;\">\n    <symbol viewBox=\"0 0 50 60\" id=\"icon-loading-ct\">\n      <path d=\"M18.244 19.205L16.378 20.5l-1.072-1.296L39.152 0c.285 1.58 1.219 6.812 4.092 6.31 2.152-.364 4.166-3.013 5.32-4.73H50c-.65 2.008-1.363 3.79-2.662 5.515-1.293 1.653-2.802 3.014-4.524 4.156-1.29.867-2.298 1.361-3.807 1.79l-.073 34.255c.787-.639 1.51-1.28 2.151-2.073 1.372-1.507 2.38-3.224 3.45-4.876l1.154.428c-1.226 3.37-2.445 6.813-4.669 9.745-2.37 3.085-5.675 6.1-9.273 7.67-2.508 1.151-6.033 1.653-8.76 1.79C12.138 60.418 3.158 53.324.86 42.786A42.985 42.985 0 0 1 0 34.182c.073-4.722 2.014-9.38 4.376-13.397 3.378-5.872 8.842-10.538 15.022-13.471 2.444-1.15 5.31-2.22 8.111-2.22.293 0 .723.066.861.35.073.145-.064.363-.21.363-2.729 1.07-3.306 1.143-5.815 2.795-2.452 1.645-4.815 3.37-6.617 5.662-4.523 5.59-5.886 12.968-5.1 20 .365 3.215 1.438 6.438 3.24 9.16 1.218 1.799 2.801 3.16 4.376 4.52v-28.74zm3.622 29.331c2.444 1.15 4.816 2.3 7.543 2.3 1.73.066 3.662 0 5.318-.648.577-.29 1.143-.712 1.721-1.077l.074-36.977-4.313-3.013-1.217 25.515c-.074 2.51-1.145 4.95-2.37 7.096-1.007 1.725-2.59 3.15-4.094 4.448-.86.72-1.72 1.506-2.662 2.356z\" fill=\"#0A1633\" fill-rule=\"evenodd\"/>\n    </symbol>\n    <symbol viewBox=\"0 0 59 62\" id=\"icon-loading-smh\">\n      <path d=\"M44.28 48.294c-4.229-3.036-9.12-5.265-13.698-6.539l-.124-.041 5.043-7.53c6.429 1.401 10.814 4.95 10.814 8.611 0 1.632-.746 3.81-1.975 5.418l-.06.08zM32.557 23.685c-.886-.123-3.722-.609-4.415-.766-2.306-.477-13.809-3.888-13.809-8.981 0-5.786 7.435-5.786 11.005-5.786.788 0 9.162.732 13.111 6.18-.041.078-4.838 7.711-5.892 9.353zm25.235-7.84l.115-.094c.566-.544 1.093-1.66 1.093-2.327 0-.776-.285-1.484-.799-2-.497-.565-1.268-.885-2.288-.96-.087-.006-.584-.03-.617-.03-2.5.024-5.195 1.598-8.038 4.36-2.497 2.425-3.438 4.221-5.015 6.71-1.28 2.024-1.892 2.98-2.235 3.528-.481-.06-3.38-.518-5.976-1.083.836-1.36 3.303-5.693 6.102-9.745 2.035-2.945 4.496-5.61 5.73-7.129.193-.236.38-.375.605-.502.168-.095.417-.22.5-.315.009-.113-.327-.447-.385-.49-.166.022-.265.06-.405.129-.191.09-.447.215-.801.215-.451 0-.916-.384-1.761-1.083C41.495 3.27 37.543.012 30.598 0 18.702-.018 11.679 10.125 11.767 16.839c.055 4.183.854 8.78 2.94 10.712 2.128 1.97 5.712 3.41 11.98 4.9l.421.11-1.005 1.117c-1.649 1.405-2.834 2.755-5.925 2.831-1.955 0-2.866-.669-3.566-1.296l-.147.062c.163.329.59 1.063 1.14 1.739.704.857 1.35 1.306 1.93 1.336.095.025.914.234 2.238-.179 1.71-.534 3.556-1.817 5.338-3.824l.688-.771.69-.769 4.475.799c.511.116 1.015.173 1.457.303l-1.843 2.806c-2.325 3.51-3.214 4.605-3.214 4.605s-1.551-.224-1.96-.303c-1.276-.255-3.283-.382-6.06-.359-5.432-.05-12.938 1.959-17.463 6.469a13.529 13.529 0 0 0-2.288 2.996A11.737 11.737 0 0 0 0 56.078C0 58.81 1.798 62 6.876 62c6.794 0 12.706-6.42 15.824-9.872l.5-.556c.928-1.019 1.353-1.732 1.692-2.095 3.593.995 9.43 3.433 14.54 6.786 1.038-1.058 4.088-4.69 6.947-8.944 1.568-2.334 5.184-7.758 5.313-11.921.126-3.987-3.603-8.775-10.497-10.197.221-.458.633-1.162 1.667-2.762 2.834-4.392 5.39-8.96 10.78-8.96.964 0 2.969.22 4.055 2.24.032.046.05.076.095.127zM17.445 55.863c-1.312 1.119-2.63 2.065-3.922 2.816-1.358.747-2.686 1.296-4.021 1.63a11.6 11.6 0 0 1-2.799.38c-.256 0-.516-.015-.822-.042-2.755-.271-4.47-1.906-4.47-4.277 0-6.279 10.526-8.23 14.361-8.23l.808-.005c1.756-.014 2.985.111 6.431.806l.723.192a46.746 46.746 0 0 1-5.011 5.552c-.435.407-.84.806-1.278 1.178z\" fill=\"#0A1633\" fill-rule=\"evenodd\"/>\n    </symbol>\n    <symbol viewBox=\"0 0 60 41\" id=\"icon-loading-watoday\">\n      <path d=\"M29.974 11.33h-.334c-.611 1.626-10.344 27.707-10.566 28.269-.22.618-.5 1.401-1.389 1.401-.611 0-.946-.449-1.167-1.12L4.007 4.318C3.45 2.746 2.448 2.297 1.725 2.297H.335C.055 2.297 0 2.074 0 1.85V.392C0 .112.056 0 .445 0c.445 0 2.17.166 7.897.166C12.347.166 14.624 0 15.18 0c.389 0 .446.166.446.447V1.85c0 .28-.057.447-.446.447h-1.223c-.89 0-1.446.788-1.112 1.91l7.62 24.453h.331c.668-1.906 7.34-19.744 7.34-21.763 0-1.403-.556-2.86-1.053-3.53-.502-.675-1.225-1.07-1.67-1.07h-1.112c-.279 0-.335-.113-.335-.447V.392c0-.226.056-.392.39-.392.502 0 2.449.166 7.34.166 4.67 0 6.784-.166 7.34-.166.334 0 .386.166.386.502v1.403c0 .224-.052.392-.385.392h-1.67c-.889 0-1.39 1.235-1.11 2.189l7.673 24.174h.333c2.728-7.627 7.564-21.874 7.564-24.904 0-.617-.723-1.459-1.78-1.459h-1.612c-.335 0-.392-.168-.392-.504v-1.4c0-.227.057-.393.446-.393.555 0 2.504.166 5.95.166C57.555.166 59.167 0 59.61 0c.336 0 .389.111.389.502v1.403c0 .224 0 .392-.389.392h-1.054c-.946 0-2.058.62-2.614 2.02-.668 1.796-11.846 32.252-12.958 34.946-.277.673-.667 1.737-1.669 1.737-.779 0-1.11-.728-1.389-1.51l-9.953-28.16\" fill=\"#0A1633\" fill-rule=\"evenodd\"/>\n    </symbol>\n    <symbol viewBox=\"0 0 61 56\" id=\"icon-loading-theage\">\n      <path d=\"M55.49 51.65a76.398 76.398 0 0 1-3.368-6.912L32.98 0h-4.86L16.7 28.195c-1.56 3.883-9.118 21.282-10.102 23.07-1.2 2.15-2.076 1.862-6.598 2.25V56c1.642-.077 6.268-.232 9.143-.232 2.547 0 5.093.155 7.394.232v-2.486c-6.16-.077-6.736-.387-6.736-1.24 0-.312.33-1.244.74-2.332l4.503-11.435c.494-1.165.741-1.398 1.808-1.398h18.65c1.481 0 1.645 0 2.137 1.165l4.953 12.367c.328.776.575 1.475.575 1.941 0 .39-.575.778-7.394.932V56c6.407-.154 9.2-.232 12.242-.232 4.435 0 9.37.078 12.985.232v-2.64c-3.184 0-4.771-.388-5.51-1.71zM35.61 34.391c0 .233-.411.466-.984.544H18.151c-1.151 0-1.48-.233-1.48-.466s.166-.544.329-1.088l8.973-22.253c.246-.466.33-.854.494-.854.162 0 .41.388.493.7l.047.116 8.274 22.291c.245.622.328.777.328 1.01z\" fill=\"#0A1633\" fill-rule=\"evenodd\"/>\n    </symbol>\n    <symbol viewBox=\"0 0 47 62\" id=\"icon-loading-bt\">\n      <path d=\"M25.33 53.374c-3.825 0-7.729-1.627-10.519-5.29V33.278c2.312-4.556 6.774-6.51 10.678-6.51 7.17 0 11.712 6.349 11.712 13.183 0 6.427-3.824 13.424-11.872 13.424m1.99-35.23c-4.38 0-9.479 1.79-12.508 5.776V0H0v8.782l5.172.34v51.9h8.764l.48-4.882C17.44 60.21 22.698 62 27.162 62 38.873 62 47 51.666 47 40.193c0-12.285-8.445-22.048-19.68-22.048\" fill=\"#0A1633\" fill-rule=\"evenodd\"/>\n    </symbol>\n  </svg>\n  ```\n  You can then use the button style as follows.\n\n  Your SCSS:\n  ```\n  .elementContainingYourLoaderClass {\n    position: relative;\n  }\n\n  .yourLoaderClass {\n    @include loader(\"standard\");\n  }\n  ```\n  Your HTML:\n  ```\n  <div class=\"yourLoaderClass\">\n    <div class=\"loader-icon\">\n      <div class=\"loader-icon__borders-container\">\n        <div class=\"loader-icon__borders-container__borders\"></div>   \n      </div>\n      <svg \n        viewBox=\"0 0 60 60\" version=\"1.1\" \n        xmlns=\"http://www.w3.org/2000/svg\"\n        class=\"loader-icon__svg\">\n        <use \n          xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n          xlink:href=\"#icon-loading-smh\" \n          class=\"loader-icon__svg__image\" >\n      </svg>\n    </div>\n    <p class=\"loader-message\">\n      Some default message.\n    </p>\n    <div class=\"loader-retry\">\n      <button class=\"loader-retry__button\">\n        Try again\n      </button>\n    </div>\n  </div>\n\n  ```\n*/\n/*\n  Loader\n\n  @param { Number with unit } icon-side-length - Length of the side of the loading icon to be displayed\n  @param { Color } icon-color - Color of the loading icon\n  @param { Color } inner-border-color - Color of the inner spinning border\n  @param { Color } outer-border-color - Color of the outer spinning border\n  @param { color } text-color - Color of the loading text\n*/\n/*\n  Loader\n\n  @param { String } style - String describing style of loader.\n*/\n/*\n  Loader container\n*/\n/*\n  Drop-cap\n\n  February 6, 2017\n  ask sorenfrederiksen@fairfaxmedia.com.au\n\n  A large capital letter used to start a section of a feature article.\n  \n  With the above in your HTML document, you can use this style as follows.\n\n  Your SCSS:\n\n  ```\n  .yourDropCapClass {\n    @include drop-cap(1rem);\n  }\n  ```\n\n  Your HTML:\n  ```\n  <p>\n    <span class=\"yourDropCapClass\">T</span>here are about 17,000 rips at beaches around Australia \n    on any given day. Chances are that – unless you’re a skilled surf lifesaver or an extremely \n    experienced surfer – you’d prefer not to be dicing with them.\n  </p>\n  ```\n*/\n/*\n  Drop cap\n\n  @param { Number with unit } normal-font-size - Size of most of the text in the drop-cap's \n  section\n*/\n/*\n  Fancy radio\n\n  April 9, 2018\n  ask sorenfrederiksen@fairfaxmedia.com.au\n\n  A pair of mix-ins to help users implement tab-like 'fancy' radio buttons.\n\n  All mix-ins result in radio button collections that can signify the buttons are deactivated (apply \n  the '.is--deactivated' class).\n\n  You can use this style as follows.\n\n  Example SCSS:\n  ```\n  .yourFancyRadioClass {\n    @include fancy-radio('standard');\n  }\n  ```\n\n  Example HTML:\n  ```\n  <div class=\"fancy-radio\">\n    <p>\n      Options label\n    </p>\n    <div>\n      <input \n        type=\"radio\" \n        name=\"options\" \n        id=\"option-1\"\n        value=\"option-1\"\n        checked>\n      <label \n        for=\"option-1\">\n        Option 1\n      </label>\n      <input \n        type=\"radio\" \n        name=\"options\" \n        id=\"option-2\"\n        value=\"option-2\">\n      <label \n        for=\"option-2\">\n        Option 2\n      </label>\n      <input \n        type=\"radio\" \n        name=\"options\" \n        id=\"option-3\"\n        value=\"option-3\">\n      <label \n        for=\"option-3\">\n        Option 3\n      </label>\n      <input \n        type=\"radio\" \n        name=\"options\" \n        id=\"option-4\"\n        value=\"option-4\">\n      <label \n        for=\"option-4\">\n        Option 4\n      </label>\n      <input \n        type=\"radio\" \n        name=\"options\" \n        id=\"option-5\"\n        value=\"option-5\">\n      <label \n        for=\"option-5\">\n        Option 5\n      </label>\n    </div>\n  </div>\n  ```\n*/\n/*\n  Fancy radio\n\n  @param { Color } color - Colour of the radio buttons' text\n  @param { Color } checked-color - Colour of the radio buttons' text when they are checked\n  @param { Color } background - Background colour of the radio buttons\n  @param { Color } checked-background - Background colour of the radio buttons when they are checked\n  @param { Color } hover-background - Background colour of the radio buttons when they are checked\n  @param { String } internal-border - Border between the radio buttons\n  @param { String } external-border - Border surrounding the collection of radio buttons\n  @param { Number with unit } font-size - Size of the radio buttons' text\n  @param { Color } label-color - Colour of the radio button group's label's text\n*/\n/*\n  Fancy radio\n\n  @param { String } style - String denoting style of fancy radio (e.g. 'standard', 'standard--dark')\n*/\n/*\n  Custom fancy radio\n\n  @param { Number with unit } font-size - Size of the radio buttons' text\n  @param { Color } color - Colour of the radio buttons' text\n  @param { Color } checked-color - Colour of the radio buttons' text when they are checked\n  @param { Color } background - Background colour of the radio buttons\n  @param { Color } checked-background - Background colour of the radio buttons when they are checked\n  @param { Color } hover-background - Background colour of the radio buttons when they are checked\n  @param { String } internal-border - Border between the radio buttons\n  @param { String } external-border - Border surrounding the collection of radio buttons\n  @param { Color } label-color - Colour of the radio button group's label's text\n*/\n/*\n  State rules are ways to describe how our modules or layouts will look when in a particular state. \n  Is it hidden or expanded? Is it active or inactive? They are about describing how a module or \n  layout looks on screens that are smaller or bigger. They are also about describing how a module \n  might look in different views like the home page or the inside page.\n*/\n#onlineVideo {\n  height: 100vh;\n  width: 100%;\n  left: 50%;\n  -webkit-transform: translateX(-50%) translate3d(0, 0, 0);\n          transform: translateX(-50%) translate3d(0, 0, 0); }\n\n@media only screen and (min-width: 600px) {\n  #onlineVideo {\n    width: 130%;\n    -webkit-transform: translateX(-47%) translate3d(0, 0, 0);\n            transform: translateX(-47%) translate3d(0, 0, 0); } }\n\n@media only screen and (min-width: 1140px) {\n  #onlineVideo {\n    width: 100%;\n    -webkit-transform: translateX(-50%) translate3d(0, 0, 0);\n            transform: translateX(-50%) translate3d(0, 0, 0); } }\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/components/Waypoints/Videos/VideoQuotesSideBySide/VideoWaypoint/VideoWaypoint.css","@charset \"UTF-8\";\n/*\n  Fairfax Presentation Styles\n\n  ask sorenfrederiksen@fairfaxmedia.com.au\n\n  This file binds together the various components of the Fairfax Presentation Styles library. \n\n  To use this file in a project, include it like so:\n\n  .../ css\n      - main.scss <- File imports '_ffx-prez-styles.scss', e.g. @import 'libs/_ffx-prez-styles.scss' \n      - main.css  <- Main file above compiles to this\n  ..../ lib\n        - '_ffx-prez-styles.scss'\n        - etc.\n\n  See 'https://smacss.com/book/categorizing' for more on the system used to categorise the styling\n  rules included.\n*/\n/* \n  Base rules are the defaults. They are almost exclusively single element selectors (e.g. 'p', 'a',\n  'input', rather than class selectors, etc.) but base rules could include attribute selectors, \n  pseudo-class selectors, child selectors or sibling selectors.\n\n  We also use 'Base' to include variables broadly depended on by many other styles (e.g. colours,\n  font and text styles).\n*/\n/*\n  Reset\n\n  Fairfax styles reset from 'prez-library-react-shared-components':\n\n  https://bitbucket.org/sorenfrederiksenffx/prez-library-react-shared-components\n\n  October 24, 2017\n  ask sorenfrederiksen@fairfaxmedia.com.au\n*/\n/*\n  Convert between variable types\n\n  These functions are used to convert between variable types.\n\n  Adapted from: https://codepen.io/jakob-e/pen/AHunv\n*/\n/*\n  To string\n*/\n/*\n  To number\n*/\n/*\n  To integer\n*/\n/*\n  To U-integer\n*/\n/*\n  Convert between unit types\n\n  These functions are used to convert unit values from one unit type to another.\n\n  Adapted from: https://codepen.io/jakob-e/pen/AHunv\n*/\n/*\n  To unit\n\n  @param { String } unit - String denoting unit type (e.g. 'px')\n  @param { Number } input - Number with unit suffix (if it has one, e.g. '10em')\n  @returns { Number } - Number of denoted unit, if a conversion is possible (e.g. '10em' to 'em'\n  results in '100px')\n*/\n/*\n  To line height\n\n  Function takes a font size and returns an appropriate line-height.\n\n  @param { Number } font-size - Number (potentially with unit) denoting size of font\n  @param { Number } line-height - Number (potentially with unit) denoting line height desired\n*/\n/*\n  Colors\n\n  November 9, 2017\n  ask sorenfrederiksen@fairfaxmedia.com.au\n*/\n/*\n  Real color names\n*/\n/*\n  Descriptive color names\n*/\n/*\n  Functional color names\n*/\n/*\n  Colours - Australian politics\n\n  November 9, 2017\n  ask sorenfrederiksen@fairfaxmedia.comau\n*/\n/*\n  Colors - Charts\n\n  January 1, 2017\n  Ask sorenfrederiksen@fairfaxmedia.com.au\n\n  Colors for use in data visualisations. These and other styles are documented here:\n\n  https://ffxblue.atlassian.net/wiki/spaces/PROD/pages/32577164/Infogram+Style\n*/\n/*\n  Fonts\n\n  The file assumes it will be compiled to a CSS file that sits like so in the project's directory \n  hierarchy:\n\n  main.css\n  .. / assets\n  .. .. / fonts\n  .. .. .. / abril-titling\n  .. .. .. .. / AbrilTitling-Semibold.woff\n  .. .. .. .. / AbrilTitling-Semibold.woff2\n  .. .. .. / pt-sans\n  .. .. .. .. / PTSans-Regular.woff\n  .. .. .. .. / PTSans-Regular.woff2\n  .. .. .. .. / PTSans-Bold.woff\n  .. .. .. .. / PTSans-Bold.woff2\n  .. .. .. / pt-serif\n  .. .. .. .. / PTSerif-Regular.woff\n  .. .. .. .. / PTSerif-Regular.woff2\n  .. .. .. .. / PTSerif-Bold.woff\n  .. .. .. .. / PTSerif-Bold.woff2\n*/\n/*\n  Type\n\n  Standard and other type styles.\n\n  October 24, 2017\n  ask sorenfrederiksen@fairfaxmedia.com.au\n*/\n/*\n  These mix-ins are not used in the main, public 'standard-typography' mix-in, because they would \n  burden projects with bulkier styles expressed in long- rather than the short-form of that main \n  mix-in.\n\n  (As in, if we're assuming the user wants to apply all standard typographic styles, we can apply\n  styles to 'h1, h2, h3, h4, h5' all at once, saving many lines of code. Without that assumption,\n  we have to repeat our styles for each individual type of heading element.)\n\n  Individual typographical mix-ins are provided only for 'h1', 'h2', 'h3' and 'p' elements, as these\n  are considered most likely to prove of use.\n\n  The utility of all of these mix-ins is debatable, and subject to future consideration.\n*/\n/*\n  Standard typography - h1\n*/\n/*\n  Standard typography - h2\n*/\n/*\n  Standard typography - h3\n*/\n/*\n  Standard typography - p\n*/\n/*\n  Standard typography\n*/\n/*\n  Animations\n\n  January 1, 2018\n  ask sorenfrederiksen@fairfaxmedia.com.au\n*/\n@-webkit-keyframes spin {\n  100% {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg); } }\n@keyframes spin {\n  100% {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg); } }\n\n/*\n  Break point\n\n  Mix-in used to create standard Fairfax breakpoints.\n\n  These mix-ins can be used like so:\n\n  @includes('only', 'small') {\n    \n    .someMobileStyle {\n      color: red;\n    }\n\n    // ... other styles that will only show within the 'small' break-point bracket\n  }\n\n  See the 'Media Queries' section of this for a deeper explanation of how these work:\n  https://robots.thoughtbot.com/sasss-content-directive\n\n  @param { String } type - String denoting type of break-point to be created\n  @param { String } size - String denoting size of break-point to be created\n*/\n/* \n  Layout rules divide the page into sections. Layouts hold one or more modules together.\n*/\n/*\n  Embedded interactive\n\n  January 1, 2017\n  ask sorenfrederiksen@fairfaxmedia.com.au\n\n  Default styles for element containing embedded interactive.\n\n  Your SCSS:\n\n  ```\n  .yourEmbeddedInteractiveContainerClass {\n    @include embedded-interactive;\n  }\n  ```\n\n  Your HTML:\n\n  ```\n  <div class=\"yourEmbeddedInteractiveContainerClass\">\n    <!-- Your application -->\n  </div>\n  ```\n*/\n/*\n  Feature article header\n\n  November 7, 2017\n  ask sorenfrederiksen@fairfaxmedia.com.au\n\n  A mix-in that styles a container and its contents to become the header section of a long-form\n  feature article, including the article's header, subtitle, author credits, date and header\n  sharing buttons.\n\n  Your SCSS:\n\n  ```\n  // The class of your feature article header\n  .yourFeatureArticleHeaderClass {\n    @include feature-article-header(\"standard\", true, false);\n  }\n  ```\n\n  If you're using the `standard-typography` mix-in elsewhere in your style-sheet, you can set that\n  last variable - the `false` - to `true`. When set to `true`, that parameter will make the\n  `feature-article-header` mix-in assume that `standard-typography` is active, and so rely on\n  styles associated with that mix-in, resulting in less-bloated styles.\n\n  For example: \n\n  ```\n  // The class of your feature article header\n  .yourFeatureArticleHeaderClass {\n    @include feature-article-header(\"standard\", true, true);\n  }\n  ```\n\n  Your HTML:\n  ```\n  <header class=\"yourFeatureArticleHeaderClass\">\n\n    <p class=\"feature-article-header__topic\">\n      <a href=\"/national\">Your feature article's topic</a>\n    </p>\n    \n    <h1 class=\"feature-article-header__title\">\n      Your feature article title here\n    </h1>\n\n    <div class=\"feature-article-header__break\"></div>\n\n    <!-- Article header social media sharing buttons -->\n    <ul class=\"feature-article-header__social\">\n      <li class=\"feature-article-header__social__button social-button__facebook\">\n        <a href=\"javascript:void(0);\">\n          <span>Share on Facebook</span>\n          <svg height=\"1em\" width=\"1em\" aria-hidden=\"true\" focusable=\"false\">\n            <use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#icon-facebook\"></use>\n          </svg>\n        </a>\n      </li>\n      <li class=\"feature-article-header__social__button social-button__twitter\">\n        <a href=\"javascript:void(0);\">\n          <span>Share on Twitter</span>\n          <svg height=\"1em\" width=\"1em\" aria-hidden=\"true\" focusable=\"false\">\n            <use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#icon-twitter\"></use>\n          </svg>\n        </a>\n      </li>\n      <li class=\"feature-article-header__social__button social-button__whatsapp\">\n        <a href=\"javascript:void(0);\">\n          <span>Share on WhatsApp</span>\n          <svg height=\"1em\" width=\"1em\" aria-hidden=\"true\" focusable=\"false\">\n            <use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#icon-whatsapp\"></use>\n          </svg>\n        </a>\n      </li>\n      <li class=\"feature-article-header__social__button social-button__email\">\n        <a href=\"javascript:void(0);\">\n          <span>Share on Email</span>\n          <svg height=\"1em\" width=\"1em\" aria-hidden=\"true\" focusable=\"false\">\n            <use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#icon-email\"></use>\n          </svg>\n        </a>\n      </li>\n    </ul>\n\n    <p class=\"feature-article-header__subtitle\">\n      Here, you'll input a subtitle of around a sentence in length, usually running over two lines..\n    </p>\n\n    <p class=\"feature-article-header__author\">\n      by Soren Frederiksen &amp; Donald Trump\n    </p>\n\n    <p class=\"feature-article-header__date\">\n      February 6, 2018\n    </p>\n\n  </header>\n  ```\n*/\n/*\n  Feature article header\n\n  @param { Color } title-color - Colour used to colour the feature header's title\n  @param { Color } subtitle-color - Colour used to colour the feature header's subtitle\n  @param { Color } topic-color - Colour used to colour the feature header's topic\n  @param { Color } break-color - Colour used to colour the feature header's break between its title,\n  subtitle and other elements\n  @param { Color } author-and-date-color - Colour used to colour the feature header's author and\n  date elements\n  @param { Color } social-button-color - Colour used to colour the feature header's social buttons\n  @param { Boolean } sharing-only-on-mobile - Boolean denoting whether or not feature article header\n  sharing buttons wills be shown on devices larger than mobile\n  @param { Boolean } standard-typography-in-us - Boolean indicating whether or not the \n  'standard-typography' mix-in is in use elsewhere in this style-sheet\n*/\n/*\n  Feature article header\n\n  @param { String } style - String describing style of feature article header (e.g. 'standard' or\n  'standard--dark')\n  @param { Boolean } sharing-only-on-mobile - Boolean denoting whether or not feature article header\n  sharing buttons wills be shown on devices larger than mobile\n  @param { Boolean } standard-typography-in-us - Boolean indicating whether or not the \n  'standard-typography' mix-in is in use elsewhere in this style-sheet\n*/\n/*\n  Custom feature article header\n\n  @param { Color } title-color - Colour used to colour the feature header's title\n  @param { Color } subtitle-color - Colour used to colour the feature header's subtitle\n  @param { Color } topic-color - Colour used to colour the feature header's topic\n  @param { Color } break-color - Colour used to colour the feature header's break between its title,\n  subtitle and other elements\n  @param { Color } author-and-date-color - Colour used to colour the feature header's author and\n  date elements\n  @param { Color } social-button-color - Colour used to colour the feature header's social buttons\n  @param { Boolean } sharing-only-on-mobile - Boolean denoting whether or not feature article header\n  sharing buttons wills be shown on devices larger than mobile\n  @param { Boolean } standard-typography-in-us - Boolean indicating whether or not the \n  'standard-typography' mix-in is in use elsewhere in this style-sheet\n*/\n/*\n  Modules are the reusable, modular parts of our design.\n*/\n/*\n  Sports team icon\n\n  The file assumes it will be compiled to a CSS file that sits like so in the project's directory \n  hierarchy:\n\n  main.css\n  .. / libs\n  .. .. / ffx-prez-styles\n  .. .. .. / assets\n  .. .. .. .. / images\n  .. .. .. .. / logos\n  .. .. .. .. .. / sport\n  .. .. .. .. .. .. / mc-team-logos$2x.png\n*/\n/*\n  Sports team icon\n\n  @param { Number with unit } side-length - Figure with unit that determines width and height of icon\n  @param { String } league - String denoting which set of icons to include in icon style\n*/\n/*\n  Button\n\n  October 20, 2017\n  ask sorenfrederiksen@fairfaxmedia.com.au\n\n  A series of mix-ins to help developers hastily apply standard button styles.\n\n  Users are encouraged to stick to the standard button mixin ('button'), except where a given color\n  scheme demands a change (use 'button--custom') or the function of the button necessitates one \n  (e.g. where the button deletes things, use 'button--destructive').\n\n  All mix-ins result in buttons that can be made to appear deactivated (apply the '.is--deactivated'\n  class to your button) or to signify the application is in the midst of loading (apply the \n  '.is--loading' class). The latter requires the inclusion of the SVG element include in the example\n  HTML below.\n\n  To use this button style, add this to the top of your HTML document (or add the symbol elements to \n  an existing svg container):\n\n  ```\n  <svg xmlns=\"http://www.w3.org/2000/svg\" style=\"position:absolute; width: 0; height: 0;\">\n    <symbol viewBox=\"0 0 40 40\" id=\"icon-loading\">\n      <circle class=\"loading__icon__circle\" opacity=\"0\" cx=\"15.8\" cy=\"15\" r=\"15\"></circle>\n      <path d=\"M27.8084006,22.8842813 C29.5771785,20.6011257 30.6299412,17.7353365 \n               30.6299412,14.6236613 C30.6299412,9.67647577 27.9688583,5.35081946 \n               24,3\" class=\"loading__icon__active-segment\"></path>  \n    </symbol>\n  </svg>\n  ```\n\n  You can then use the button style as follows.\n\n  Your SCSS:\n\n  ```\n  .yourButtonClass {\n    @include button(\"medium\", \"dynamic\", \"solid\");\n  } \n\n  // ... or ...\n\n  .yourCustomButtonClass {\n    @include button--custom(#fff, red, \"1px solid red\", \"large\", \"dynamic\", \"red\");\n  }\n\n  // ... or ...\n\n  .yourDestructiveButtonClass {\n    @include button--destructive(\"large\", \"fixed\", \"solid--reversed\");\n  }\n  ```\n  Your HTML:\n\n  ```\n  <button class=\"yourButtonClass\">\n    <span>A long button</span>\n    <svg viewBox=\"0 0 40 40\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" \n         xmlns:xlink=\"http://www.w3.org/1999/xlink\" stroke=\"#096DD2\" \n         stroke-width=\"3\" fill=\"transparent\" class=\"button-loading\">\n      <use \n        xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n        xlink:href=\"#icon-loading\" \n        class=\"button-loading__icon\" \n        transform=\"translate(6.5 6.5)\">\n    </svg>\n  </button>\n  ```\n*/\n/*\n  Button\n\n  @param { Color } bg - Color for the button's background\n  @param { Color } hover-bg - Color for the button's background when user hovers over it\n  @param { Color } active-bg - Color for the button's background when the user clicks or taps it\n  @param { Color } color - Color for button's text\n  @param { Color } hover-color - Color for button's text when user hovers over it\n  @param { Color } active-color - Color for button's text when user clicks or taps it\n  @param { String } size - String denoting size of button (e.g. 'small', 'medium', 'large')\n  @param { String } size-rules - String denoting rules of how button will be sized ('fixed' or \n  'dynamic')\n  @param { Color } outline - Color of button's outline when it is clicked \n  @param { Boolean } can-load - Boolean indicating whether button can enter the loading state\n*/\n/*\n  Button deactivated\n*/\n/*\n  Button loading\n*/\n@-webkit-keyframes loading-icon-spin {\n  100% {\n    -webkit-transform: translateX(-50%) translateY(-50%) rotate(360deg);\n            transform: translateX(-50%) translateY(-50%) rotate(360deg); } }\n@keyframes loading-icon-spin {\n  100% {\n    -webkit-transform: translateX(-50%) translateY(-50%) rotate(360deg);\n            transform: translateX(-50%) translateY(-50%) rotate(360deg); } }\n\n/*\n  Button\n  \n  @param { String } size - String describing size of button (e.g. 'small', 'medium', 'large')\n  @param { String } size-rules - String describing rules determining size of button (e.g. 'fixed' or\n  'dynamic')\n  @param { String } style - String describing style of button (e.g. 'solid', 'solid--reversed', \n  'hollow' or 'hollow--reversed')\n  @param { Boolean } can-load - Boolean indicating whether button can enter the loading state\n*/\n/*\n  Custom button\n\n  @param { Color } custom-background - Colour for the background of the button\n  @param { Color } custom-color - Colour for the text of the button\n  @param { String } custom-border - Short-form border property for the button (e.g. '1px solid red')\n  @param { String } size - String describing size of button (e.g. 'small', 'medium', 'large')\n  @param { String } size-rules - String describing rules determining size of button (e.g. 'fixed' or\n  'dynamic')\n  @param { Color } custom-outline - Colour for the outline (shown on click) of the button\n  @param { Boolean } can-load - Boolean indicating whether button can enter the loading state\n*/\n/*\n  Destructive button\n\n  @param { String } size - String describing size of button (e.g. 'small', 'medium', 'large')\n  @param { String } size-rules - String describing rules determining size of button (e.g. 'fixed' or\n  'dynamic')\n  @param { String } style - String describing style of button (e.g. 'solid' or 'solid--reversed')\n*/\n/*\n  Social button\n\n  October 24, 2017\n  ask sorenfrederiksen@fairfaxmedia.com.au\n\n  A mix-in to facilitate the use of standard social media sharing buttons, including those for \n  Facebook, Twitter, Instagram, WhatsApp, Google Plus and Email.\n\n  To use social buttons, add this to the top of your HTML document (or add the symbol elements to \n  an existing svg container):\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" style=\"position:absolute; width: 0; height: 0;\">\n      <symbol viewBox=\"0 0 32 32\" id=\"icon-twitter\">\n        <path d=\"M32 6.371c-1.16.525-2.139.542-3.177.023 1.34-.811 1.4-1.38 1.884-2.916a12.91 12.91 0 0 1-4.115 1.596A6.431 6.431 0 0 0 21.864 3c-3.578 0-6.479 2.94-6.479 6.564 0 .515.058 1.016.167 1.496C10.167 10.787 5.394 8.173 2.2 4.2a6.612 6.612 0 0 0-.879 3.302 6.584 6.584 0 0 0 2.883 5.463 6.402 6.402 0 0 1-2.934-.82l-.001.082c0 3.18 2.234 5.833 5.198 6.437a6.43 6.43 0 0 1-2.927.112c.825 2.607 3.218 4.505 6.052 4.559A12.903 12.903 0 0 1 0 26.052 18.167 18.167 0 0 0 9.93 29c11.919 0 18.433-10.001 18.433-18.675 0-.286-.004-.566-.017-.85C29.61 8.551 31.132 7.69 32 6.371\" fill=\"currentColor\" fill-rule=\"evenodd\"></path>\n      </symbol>\n      <symbol viewBox=\"0 0 32 32\" id=\"icon-email\">\n        <g fill=\"currentColor\" fill-rule=\"evenodd\">\n          <path d=\"M16.086 17.334L30.627 6.502A3.267 3.267 0 0 0 28.885 6h-25.6c-.621 0-1.194.177-1.685.47l14.486 10.864z\"></path>\n          <path d=\"M16.464 18.857a.805.805 0 0 1-.931-.002L.413 7.538C.158 7.98 0 8.478 0 9.018v13.847c0 1.695 1.435 3.077 3.2 3.077h25.6c1.765 0 3.2-1.382 3.2-3.077V9.018c0-.518-.147-1-.382-1.429L16.464 18.857z\"></path>\n        </g>\n      </symbol>\n      <symbol viewBox=\"0 0 32 32\" id=\"icon-whatsapp\">\n        <path d=\"M22.189 24.818c-.856.078-.856.701-5.6-1.165-4.74-1.868-7.733-6.732-7.967-7.044-2.187-2.91-2.762-5.991-.273-8.715.79-.86 2.748-.824 3.19.235.387.934 1.32 3.229 1.438 3.462.117.235.194.507.037.817-.186.375-.38.814-1.166 1.596-.233.233-.475.484-.203.95.272.468 1.206 1.995 2.594 3.231 1.782 1.59 3.284 2.081 3.75 2.315.467.233.74.195 1.012-.117.271-.313 1.167-1.362 1.476-1.829.312-.467.624-.388 1.05-.233.428.155 2.72 1.283 3.188 1.518.466.23.778.35.895.544.701 1.177-.963 4.212-3.421 4.435M16 0C7.178 0 0 7.177 0 16c0 3.5 1.133 6.744 3.048 9.38L1.05 31.324l6.149-1.97A15.897 15.897 0 0 0 16 32c8.821 0 16-7.177 16-16 0-8.822-7.178-16-16-16\" fill=\"currentColor\" fill-rule=\"evenodd\"></path>\n      </symbol>\n      <symbol viewBox=\"0 0 32 32\" id=\"icon-facebook\">\n        <path d=\"M18.7 17.4h5.1l.7-5.6h-5.8V8.1c0-1.6.5-2.7 2.8-2.7h3V.2c-.5 0-2.3-.2-4.4-.2-4.4 0-7.9 2.7-7.9 7.7v4.1H7.6v5.6h4.6V32h6.5V17.4z\" fill=\"currentColor\"></path>\n      </symbol>\n      <symbol viewBox=\"0 0 32 32\" id=\"icon-google\">\n        <path d=\"M28.6 14.6v-3.4H26v3.4h-3.4v2.6H26v3.4h2.6v-3.4H32v-2.6zm-8-.6a8.2 8.2 0 0 1 .2 2.2c0 5.9-4 10.3-10.2 10.3A10.65 10.65 0 0 1 0 16 10.65 10.65 0 0 1 10.6 5.5a10.48 10.48 0 0 1 7.2 2.8l-3 3A6.38 6.38 0 0 0 4.2 16a6.24 6.24 0 0 0 6.4 6.3c3.2 0 5.4-1.8 5.8-4.3h-5.8v-3.9l10-.1z\" fill=\"currentColor\" fill-rule=\"evenodd\"></path>\n      </symbol>\n      <symbol viewBox=\"0 0 32 32\" id=\"icon-instagram\">\n        <g stroke=\"currentColor\" fill=\"currentColor\">\n          <path d=\"M8.5 2.9h15c1.6 0 3 .7 3.9 1.7 1 .9 1.7 2.3 1.7 3.9v15c0 1.6-.7 3-1.7 3.9-.9 1-2.3 1.7-3.9 1.7h-15c-1.6 0-3-.7-3.9-1.7-1-.9-1.7-2.3-1.7-3.9v-15c0-1.6.7-3 1.7-3.9.9-1.1 2.3-1.7 3.9-1.7m15-1.9h-15C4.4 1 1 4.4 1 8.5v15C1 27.6 4.4 31 8.5 31h15c4.1 0 7.5-3.4 7.5-7.5v-15C31 4.4 27.6 1 23.5 1\" stroke-width=\"2\"></path>\n          <path d=\"M16 21c-1.4 0-2.6-.6-3.5-1.5-.9-.9-1.5-2.1-1.5-3.5s.6-2.6 1.5-3.5c.9-.9 2.2-1.5 3.5-1.5 1.4 0 2.6.6 3.5 1.5.9.9 1.5 2.2 1.5 3.5 0 1.4-.6 2.6-1.5 3.5-.9.9-2.1 1.5-3.5 1.5m0-12c-3.9 0-7 3.1-7 7s3.1 7 7 7 7-3.1 7-7-3.1-7-7-7\" stroke-width=\"2\"></path>\n          <path d=\"M24 9.5c-.8 0-1.5-.7-1.5-1.5s.7-1.5 1.5-1.5 1.5.7 1.5 1.5-.7 1.5-1.5 1.5m0-4c-1.4 0-2.5 1.1-2.5 2.5s1.1 2.5 2.5 2.5 2.5-1.1 2.5-2.5-1.1-2.5-2.5-2.5\"></path>\n        </g>\n      </symbol>\n    </svg>\n  \n  (In future, it might be that the above isn't necessary, as mastheads in the Fairfax Blue style\n  appear to include the symbols above on every page the site.)\n\n  With the above in your HTML document, you can use this style as follows.\n\n  Your SCSS:\n\n    .yourSocialButtonContainerStyle {\n      @include social-button-container();\n    }\n\n    .yourSocialButtonStyle {\n      @include social-button(15px, #000, #ccc); \n    }\n\n  Your HTML:\n\n    <ul class=\"yourSocialButtonContainerStyle\">\n      <li class=\"yourSocialButtonStyle\">\n        <a href=\"javascript:void(0);\">\n          <span>Share on Facebook</span>\n          <svg height=\"1em\" width=\"1em\" aria-hidden=\"true\" focusable=\"false\">\n            <use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#icon-facebook\"></use>\n          </svg>\n        </a>\n      </li>\n      <li class=\"yourSocialButtonStyle\">\n        <a href=\"javascript:void(0);\">\n          <span>Share on Facebook</span>\n          <svg height=\"1em\" width=\"1em\" aria-hidden=\"true\" focusable=\"false\">\n            <use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#icon-twitter\"></use>\n          </svg>\n        </a>\n      </li>\n      <li class=\"yourSocialButtonStyle\">\n        <a href=\"javascript:void(0);\">\n          <span>Share on Facebook</span>\n          <svg height=\"1em\" width=\"1em\" aria-hidden=\"true\" focusable=\"false\">\n            <use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#icon-email\"></use>\n          </svg>\n        </a>\n      </li>\n    </ul>\n*/\n/*\n  Social button\n\n  @param { Number with unit } side-length - Figure with unit that determines width and height of \n  button\n  @param { Color } color - Color of the button \n  @param { Color } actionColor - Color of button in hover and focus states\n*/\n/*\n  Social button container\n*/\n/*\n  Text input\n\n  November 7, 2017\n  ask sorenfrederiksen@fairfaxmedia.com.au\n\n  A couple of mix-ins to help users get standard form-based text inputs up and running.\n\n  All mix-ins result in inputs that can be made to declare the user's input is invalid (apply the \n  '.is--invalid' class to your button) or to signify the input is deactivated (apply the \n  '.is--deactivated' class).\n\n  To use text inputs, add this to the top of your HTML document (or add the symbol elements to \n  an existing svg container):\n\n  ```\n  <svg xmlns=\"http://www.w3.org/2000/svg\" style=\"position:absolute; width: 0; height: 0;\">\n    <symbol viewBox=\"0 0 16 16\" id=\"icon-validation-alert\">\n      <circle r=\"8\" cx=\"8\" cy=\"8\" fill=\"currentColor\"></circle>\n      <text \n        text-anchor=\"middle\" \n        x=\"8\" \n        y=\"13\" \n        fill=\"#fff\" \n        style=\"font-size: 13px; font-weight: 700; font-family: 'PT Sans', sans-serif\">!</text>\n    </symbol>\n  </svg>\n  ```\n  \n  You can use this style as follows.\n\n  Example SCSS:\n\n  ```\n  .yourTextInputClass {\n    @include text-input(\"standard\");\n  }\n  ```\n\n  Example HTML:\n\n  ```\n  <div class=\"yourTextInputClass\">\n    <label>Some input label</label>\n    <div>\n      <input type=\"text\" placeholder=\"Some input text\"></input>\n      <svg viewBox=\"0 0 16 16\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" \n           xmlns:xlink=\"http://www.w3.org/1999/xlink\" class=\"validation-alert\">\n        <use \n          xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n          xlink:href=\"#icon-validation-alert\" \n          class=\"validation-alert__icon\">\n      </svg>\n    </div>\n    <p class=\"validation-error\">\n      You input the wrong thing.\n    </p>\n  </div>\n  ```\n\n  Example HTML where the user's input is invalid:\n\n  ```\n  <div class=\"yourTextInputClass is--invalid\">\n    <label>Some input label</label>\n    <div>\n      <input type=\"text\" placeholder=\"Some input text\"></input>\n      <svg viewBox=\"0 0 16 16\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" \n           xmlns:xlink=\"http://www.w3.org/1999/xlink\" class=\"validation-alert\">\n        <use \n          xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n          xlink:href=\"#icon-validation-alert\" \n          class=\"validation-alert__icon\">\n      </svg>\n    </div>\n    <p class=\"validation-error\">\n      You input the wrong thing.\n    </p>\n  </div>\n  ```\n\n  (Note the 'label', 'validation-alert' and 'validation-error' elements are optional.)\n*/\n/*\n  Text input\n\n  @param { Color } color - Colour of the input's text\n  @param { String } border - Border property of input\n  @param { Color } focus-color - Colour of the input's text when in focus state\n  @param { Color } focus-border - Border property of input when in focus state\n  @param { Number with unit } font-size - Size of the input's text\n  @param { Color } background - Background colour of the input\n  @param { Color } label-color - Color of the input's label\n  @param { Number with unit } label-font-size - Size of the input's label's font\n  @param { Color } outline - Color of the outline shown when the input is in focus\n*/\n/*\n  Text input without validation error\n\n  Included for use in other mix-ins where including validation error styles would add excessively\n  and needlessly to the stylesheet produced (e.g. with the 'search-input' mix-in).\n\n  @param { Color } color - Colour of the input's text\n  @param { String } border - Border property of input\n  @param { Color } focus-color - Colour of the input's text when in focus state\n  @param { Color } focus-border - Border property of input when in focus state\n  @param { Number with unit } font-size - Size of the input's text\n  @param { Color } background - Background colour of the input\n  @param { Color } label-color - Color of the input's label\n  @param { Number with unit } label-font-size - Size of the input's label's font\n  @param { Color } outline - Color of the outline shown when the input is in focus\n*/\n/*\n  Text input\n\n  @param { String } style - String denoting style of text input\n*/\n/*\n  Custom text input\n\n  @param { Color } border-color - Colour of the input's border\n  @param { Color } focus-border-color - Colour of the input's border in focus state\n  @param { Color } color - Colour of the input's text\n  @param { Number with unit } font-size - Size of input text (label is sized at 93.75% of this)\n  @param { Color } background - Colour of input's background\n  @param { Color } outline - Colour of outline shown around input when it is in focus\n*/\n/*\n  Search input\n\n  November 7, 2017\n  ask sorenfrederiksen@fairfaxmedia.com.au\n  \n  A kind of text input specifically designed for search functionality.\n\n  To use a search input, add this to the top of your HTML document (or add the symbol element to \n  an existing svg container):\n\n  ```\n  <svg xmlns=\"http://www.w3.org/2000/svg\" style=\"position:absolute; width: 0; height: 0;\">\n    <symbol viewBox=\"0 0 32 32\" id=\"icon-search\">\n      <path d=\"M21.08 18.573l10.4 10.4a1.773 1.773 0 1 1-2.508 2.507l-10.4-10.4a11.62 11.62 0 0 1-6.902 2.26C5.225 23.34 0 18.115 0 11.67S5.225 0 11.67 0s11.67 5.225 11.67 11.67c0 2.583-.84 4.97-2.26 6.903zm-1.287-6.903a8.123 8.123 0 1 0-16.247 0 8.123 8.123 0 0 0 16.247 0z\" fill=\"currentColor\" fill-rule=\"evenodd\"/>\n    </symbol>\n  </svg>\n  ```\n  \n  With the above in your HTML document, you can use this style as follows.\n\n  Your SCSS:\n\n  ```\n  .yourSearchInputClass {\n    @include search-input(\"standard\", \"right\", \"true\");\n  }\n  ```\n\n  Your HTML:\n  ```\n  <form class=\"yourSearchInputClass\">\n    <label>Some invisible search label</label>\n    <input type=\"text\" placeholder=\"Some search placeholder text\"></input>\n    <button type=\"submit\">\n      <svg viewBox=\"0 0 16 16\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" \n           xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n        <use \n          xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n          xlink:href=\"#icon-search\" >\n      </svg>\n    </button>\n  </form>\n  ```\n\n  Your HTML when using autocomplete:\n  ```\n  <form class=\"yourSearchInputClass\">\n    <label>Some invisible search label</label>\n    <input \n      type=\"text\" \n      placeholder=\"Some search placeholder text\" \n      id=\"text-input-with-autocomplete\"/>\n    <button type=\"submit\">\n      <svg viewBox=\"0 0 16 16\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" \n           xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n        <use \n          xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n          xlink:href=\"#icon-search\" >\n      </svg>\n    </button>\n  </form>\n\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/awesomplete/1.1.2/awesomplete.js\"></script>\n  <script>\n    var data = [\"Derpit\", \"Burpit\", \"Fartit\", \"McGardit\", \"Lardit\", \"Dingo\", \"Brunswick\", \"Brunton\", \"Brunsby\"]\n\n    var auto = new Awesomplete(\"#text-input-with-autocomplete\", {\n      minChars: 2,\n      maxItems: 5,\n      list: data\n    });\n  </script>\n  ```\n*/\n/*\n  Text input autocomplete\n\n  November 7, 2017\n  ask sorenfrederiksen@fairfaxmedia.com.au\n\n  A mix-in that adds styles to the autocomplete options appended to a text input when using \n  Awesomplete-style autocompletion.\n\n  Your SCSS:\n\n  ```\n  // The class of the element containing the text input you want to have autocomplete\n  .elementContainingTextInput {\n    \n    .awesomplete {\n      @include autocomplete(\"standard\");\n    }\n  }\n  ```\n\n  Your HTML:\n  ```\n  <div class=\"elementContainingTextInput\">\n    <input type=\"text\" id=\"text-input-with-autocomplete\" />\n  </div>\n\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/awesomplete/1.1.2/awesomplete.js\"></script>\n  <script>\n    var data = [\"Derpit\", \"Burpit\", \"Fartit\", \"McGardit\", \"Lardit\", \"Dingo\", \"Brunswick\", \"Brunton\", \"Brunsby\"]\n\n    var auto = new Awesomplete(\"#text-input-with-autocomplete\", {\n      minChars: 2,\n      maxItems: 5,\n      list: data\n    });\n  </script>\n  ```\n*/\n/*\n  Autocomplete\n\n  @param { String } style - String describing style of autocomplete \n*/\n/*\n  Search input\n\n  @param { String } style - String denoting style of text input\n  @param { String } icon-position - String denoting position of search icon\n  @param { String } autocomplete - String determining whether or search input will include \n  autocomplete\n*/\n/*\n  Custom search input\n\n  @param { Color } border-color - Colour of the input's border\n  @param { Color } focus-border-color - Colour of the input's border in focus state\n  @param { Color } color - Colour of the input's text\n  @param { Number with unit } font-size - Size of input text (label is sized at 93.75% of this)\n  @param { Color } background - Colour of input's background\n  @param { Color } outline - Colour of outline shown around input when it is in focus\n*/\n/*\n  Dropdown\n\n  March 1, 2018\n  ask sorenfrederiksen@fairfaxmedia.com.au\n\n  A couple of mix-ins to help users implement standard dropdowns as quickly as possible.\n\n  All mix-ins result in inputs that can signify the input is deactivated (apply the \n  '.is--deactivated' class).\n\n  To use dropdown inputs, add this to the top of your HTML document (or add the symbol elements to \n  an existing svg container):\n\n  ```\n  <svg xmlns=\"http://www.w3.org/2000/svg\" style=\"position:absolute; width: 0; height: 0;\">\n    <symbol viewBox=\"0 0 10 7\" id=\"icon-carat\">\n      <path d=\"M1 1l4 3.74L9 1\" stroke=\"currentColor\" stroke-width=\"2\" fill=\"none\" fill-rule=\"evenodd\"/>\n    </symbol>\n    <symbol viewBox=\"0 0 9 9\" id=\"icon-tick\">\n      <path d=\"M2.978 9a.998.998 0 0 1-.706-.294L.292 6.728a1 1 0 0 1 1.415-1.414L2.853 6.46 7.188.416a1 1 0 0 1 1.625 1.166l-5.022 7A.994.994 0 0 1 2.978 9\" fill=\"currentColor\" fill-rule=\"evenodd\"/>\n    </symbol>\n    <symbol viewBox=\"0 0 16 16\" id=\"icon-validation-alert\">\n      <circle r=\"8\" cx=\"8\" cy=\"8\" fill=\"currentColor\"></circle>\n      <text \n        text-anchor=\"middle\" \n        x=\"8\" \n        y=\"13\" \n        fill=\"#fff\" \n        style=\"font-size: 13px; font-weight: 700; font-family: 'PT Sans', sans-serif\">!</text>\n    </symbol>\n  </svg>\n  ```\n  \n  You can use this style as follows.\n\n  Example SCSS:\n  ```\n  .yourDropdownClass {\n    @include dropdown(\"standard\", false, true);\n  }\n  ```\n  Example HTML:\n  ```\n    <div class=\"yourDropdownClass\">\n      <label>Some input label</label>\n      <div class=\"dropdown__inner\" id=\"dropdown-container\">\n        <span class=\"dropdown__inner__current-value\" id=\"dropdown-current-value\">Soren Frederiksen</span>\n        <svg \n          viewBox=\"0 0 10 7\" version=\"1.1\" \n          xmlns=\"http://www.w3.org/2000/svg\"\n          class=\"dropdown__inner__carat\">\n          <use \n            xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n            xlink:href=\"#icon-carat\" \n            class=\"dropdown__inner__carat__image\">\n        </svg>\n        <svg \n          viewBox=\"0 0 16 16\" version=\"1.1\" \n          xmlns=\"http://www.w3.org/2000/svg\"\n          class=\"dropdown__inner__error\">\n          <use \n            xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n            xlink:href=\"#icon-validation-alert\" >\n        </svg>\n        <svg \n          viewBox=\"0 0 16 16\" version=\"1.1\" \n          xmlns=\"http://www.w3.org/2000/svg\"\n          class=\"dropdown__inner__error\">\n          <use \n            xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n            xlink:href=\"#icon-validation-alert\" >\n        </svg>\n        <select class=\"dropdown__inner__select\" id=\"dropdown-select-input\">\n          <option value=\"Soren Frederiksen\">Soren Frederiksen</option>\n          <option value=\"Richard Lama\">Richard Lama</option>\n          <option value=\"Reginal Sengkey\">Reginal Sengkey</option>\n        </select>\n        <ul class=\"dropdown__inner__list\" id=\"dropdown-list\">\n          <li value=\"Soren Frederiksen\"\n              class=\"dropdown__inner__list__item is--selected\">\n            Soren Frederiksen\n            <svg \n              viewBox=\"0 0 10 7\" version=\"1.1\" \n              xmlns=\"http://www.w3.org/2000/svg\"\n              class=\"dropdown__inner__list__item__tick\">\n              <use \n                xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n                xlink:href=\"#icon-tick\">\n            </svg>\n          </li>\n          <li value=\"Richard Lama\"\n              class=\"dropdown__inner__list__item\">\n            Richard Lama\n            <svg \n              viewBox=\"0 0 10 7\" version=\"1.1\" \n              xmlns=\"http://www.w3.org/2000/svg\"\n              class=\"dropdown__inner__list__item__tick\">\n              <use \n                xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n                xlink:href=\"#icon-tick\">\n            </svg>\n            </svg>\n          </li>\n          <li value=\"Reginal Sengkey\"\n              class=\"dropdown__inner__list__item\">\n            Reginal Sengkey\n            <svg \n              viewBox=\"0 0 10 7\" version=\"1.1\" \n              xmlns=\"http://www.w3.org/2000/svg\"\n              class=\"dropdown__inner__list__item__tick\">\n              <use \n                xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n                xlink:href=\"#icon-tick\">\n            </svg>\n            </svg>\n          </li>\n          <li value=\"Mark Stehle\"\n              class=\"dropdown__inner__list__item\">\n            Mark Stehle\n            <svg \n              viewBox=\"0 0 10 7\" version=\"1.1\" \n              xmlns=\"http://www.w3.org/2000/svg\"\n              class=\"dropdown__inner__list__item__tick\">\n              <use \n                xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n                xlink:href=\"#icon-tick\">\n            </svg>\n            </svg>\n          </li>\n          <li value=\"Matthew Absalom-Wong\"\n              class=\"dropdown__inner__list__item\">\n            Matthew Absalom-Wong\n            <svg \n              viewBox=\"0 0 10 7\" version=\"1.1\" \n              xmlns=\"http://www.w3.org/2000/svg\"\n              class=\"dropdown__inner__list__item__tick\">\n              <use \n                xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n                xlink:href=\"#icon-tick\">\n            </svg>\n            </svg>\n          </li>\n        </ul>\n      </div>\n      <p class=\"dropdown__error\">\n        You did something wrong.\n      </p>\n    </div>\n  ```\n  In order to work fully (included the custom dropdown list), this mix-in also requires some \n  JavaScript. \n\n  Below is some bare-bones vanilla JavaScript that developers will be able to more eloquently \n  implement using whatever framework or library they're using. In principal, though,\n  this is all you need.\n\n  Example JavaScript:\n  ```\n  var dropdownValueDisplay = document.getElementById('dropdown-current-value');\n  var dropdownSelectInput = document.getElementById('dropdown-select-input');\n  var dropdownContainer = document.getElementById('dropdown-container');\n  var dropdownListItems = dropdownContainer.getElementsByClassName('dropdown__inner__list__item');\n\n  // When the user clicks the dropdown container, show it as selected\n  dropdownContainer.addEventListener('click', function() {\n    dropdownContainer.classList.toggle('is--selected');\n  });\n\n  // When the user click a dropdown list item, select it\n  for (var i = 0; i < dropdownListItems.length; i += 1) {\n    dropdownListItems[i].addEventListener('click', selectDropdownListItem);\n  }\n\n  function selectDropdownListItem(e) {\n\n    var newDropdownValue = e.target.getAttribute('value');\n\n    // Update dropdown value display and input\n    dropdownValueDisplay.innerHTML = newDropdownValue;\n    dropdownSelectInput.value = newDropdownValue;\n\n    // Update dropdown list display (and calculate variables necessary to determine position of\n    // tick)\n    for (var i = 0; i < dropdownListItems.length; i += 1) {\n      if (dropdownListItems[i] !== e.target) {\n        dropdownListItems[i].classList.remove('is--selected');\n      }\n      else {\n        indexOfTargetListItem = i;\n        dropdownListItems[i].classList.add('is--selected');\n      }\n    }\n  }\n  ```\n*/\n/*\n  Dropdown\n\n  @param { Color } color - Colour of the input's text\n  @param { String } border - Border property of input\n  @param { Color } focus-color - Colour of the input's text when in focus state\n  @param { Color } focus-carat-color - Colour of the input's carat when in focus state\n  @param { Color } focus-border - Border property of input when in focus state\n  @param { Number with unit } font-size - Size of the input's text\n  @param { Color } background - Background colour of the input\n  @parma { Color } list-item-color - Color of dropdown list items\n  @parma { Color } selected-list-item-background - Background color signifying selected list item\n  @param { Color } label-color - Color of the input's label\n  @param { Number with unit } label-font-size - Size of the input's label's font\n  @param { Boolean } use-custom-dropdown-list-on-mobile - Boolean indicating whether or not to use \n  the custom dropdown list on mobile, or whether to rely on a device's in-built dropdown\n  @param { Boolean } can-be-invalid - Boolean indicating whether or not include invalid state styles\n*/\n/*\n  Dropdown desktop custom dropdown list styles\n*/\n/*\n  Dropdown\n\n  @param { String } style - String denoting style of dropdown menu\n  @param { Boolean } use-custom-dropdown-list-on-mobile - Boolean indicating whether or not to use \n  the custom dropdown list on mobile, or whether to rely on a device's in-built dropdown\n  @param { Boolean } can-be-invalid - Boolean indicating whether or not include invalid state styles\n*/\n/*\n  Custom dropdown\n\n  @param { Number with unit } font-size - Size of input text (label is sized at 93.75% of this)\n  @param { Color } color - Colour of the input's text\n  @param { Color } background - Colour of input's background\n  @param { Boolean } use-custom-dropdown-list-on-mobile - Boolean indicating whether or not to use \n  the custom dropdown list on mobile, or whether to rely on a device's in-built dropdown\n  @param { Boolean } can-be-invalid - Boolean indicating whether or not include invalid state styles\n  @param { Color } label-color - Colour of the input's label\n  @param { Color } border-color - Colour of the input's border\n  @param { Color } focus-border-color - Colour of the input's border in focus state\n  @param { Color } list-item-color - Colour of the input's list item text\n  @param { Number with unit } list-max-height - Maximum size of the dropdown list\n*/\n/*\n  Scrollbar\n\n  March 1, 2018\n  ask sorenfrederiksen@fairfaxmedia.com.au\n\n  A couple mix-ins that add a custom scrollbar to a scrolling container.\n  \n  You can use this style as follows.\n\n  Example SCSS:\n\n  ```\n  .yourScrollingContainerClass {\n    @include scrollbar(\"standard\");\n  }\n  ```\n\n  Example HTML:\n\n  ```\n  <div class=\"yourScrollingContainerClass\">\n    <!-- Lots of elements -->\n  </div>\n  ```\n*/\n/*\n  Scrollbar\n\n  @param { Number with unit } width - Width of the scrollbar\n  @param { Color } track-color - Color of the scrollbar track\n  @param { Color } thumb-color - Color of the scrollbar thumb (i.e. the movable control in the \n  scrollbar)\n  @param { Number with unit } track-border-radius - Border radius of the scrollbar track\n  @param { Number with unit } thumb-border-radius - Border radius of the scrollbar thumb (i.e. the\n  movable control in the scrollbar)\n  @param { Number with unit } thumb-padding - Gap between the thumb and the track\n*/\n/*\n  Scrollbar\n\n  @param { String } style - String describing the style of the scrollbar\n*/\n/*\n  Custom scrollbar\n\n  @param { Number with unit } width - Width of the scrollbar\n  @param { Color } track-color - Color of the scrollbar track\n  @param { Color } thumb-color - Color of the scrollbar thumb (i.e. the movable control in the \n  scrollbar)\n  @param { Number with unit } track-border-radius - Border radius of the scrollbar track\n  @param { Number with unit } thumb-border-radius - Border radius of the scrollbar thumb (i.e. the\n  movable control in the scrollbar)\n*/\n/*\n  Loader\n\n  January 1, 2017\n  ask sorenfrederiksen@fairfaxmedia.com.au\n\n  A loading indicator featuring a masthead-appropriate logo initial.\n\n  To use this loader style, add this to the top of your HTML document (or add the symbol elements to \n  an existing svg container):\n\n  ```\n  <svg xmlns=\"http://www.w3.org/2000/svg\" style=\"position:absolute; width: 0; height: 0;\">\n    <symbol viewBox=\"0 0 50 60\" id=\"icon-loading-ct\">\n      <path d=\"M18.244 19.205L16.378 20.5l-1.072-1.296L39.152 0c.285 1.58 1.219 6.812 4.092 6.31 2.152-.364 4.166-3.013 5.32-4.73H50c-.65 2.008-1.363 3.79-2.662 5.515-1.293 1.653-2.802 3.014-4.524 4.156-1.29.867-2.298 1.361-3.807 1.79l-.073 34.255c.787-.639 1.51-1.28 2.151-2.073 1.372-1.507 2.38-3.224 3.45-4.876l1.154.428c-1.226 3.37-2.445 6.813-4.669 9.745-2.37 3.085-5.675 6.1-9.273 7.67-2.508 1.151-6.033 1.653-8.76 1.79C12.138 60.418 3.158 53.324.86 42.786A42.985 42.985 0 0 1 0 34.182c.073-4.722 2.014-9.38 4.376-13.397 3.378-5.872 8.842-10.538 15.022-13.471 2.444-1.15 5.31-2.22 8.111-2.22.293 0 .723.066.861.35.073.145-.064.363-.21.363-2.729 1.07-3.306 1.143-5.815 2.795-2.452 1.645-4.815 3.37-6.617 5.662-4.523 5.59-5.886 12.968-5.1 20 .365 3.215 1.438 6.438 3.24 9.16 1.218 1.799 2.801 3.16 4.376 4.52v-28.74zm3.622 29.331c2.444 1.15 4.816 2.3 7.543 2.3 1.73.066 3.662 0 5.318-.648.577-.29 1.143-.712 1.721-1.077l.074-36.977-4.313-3.013-1.217 25.515c-.074 2.51-1.145 4.95-2.37 7.096-1.007 1.725-2.59 3.15-4.094 4.448-.86.72-1.72 1.506-2.662 2.356z\" fill=\"#0A1633\" fill-rule=\"evenodd\"/>\n    </symbol>\n    <symbol viewBox=\"0 0 59 62\" id=\"icon-loading-smh\">\n      <path d=\"M44.28 48.294c-4.229-3.036-9.12-5.265-13.698-6.539l-.124-.041 5.043-7.53c6.429 1.401 10.814 4.95 10.814 8.611 0 1.632-.746 3.81-1.975 5.418l-.06.08zM32.557 23.685c-.886-.123-3.722-.609-4.415-.766-2.306-.477-13.809-3.888-13.809-8.981 0-5.786 7.435-5.786 11.005-5.786.788 0 9.162.732 13.111 6.18-.041.078-4.838 7.711-5.892 9.353zm25.235-7.84l.115-.094c.566-.544 1.093-1.66 1.093-2.327 0-.776-.285-1.484-.799-2-.497-.565-1.268-.885-2.288-.96-.087-.006-.584-.03-.617-.03-2.5.024-5.195 1.598-8.038 4.36-2.497 2.425-3.438 4.221-5.015 6.71-1.28 2.024-1.892 2.98-2.235 3.528-.481-.06-3.38-.518-5.976-1.083.836-1.36 3.303-5.693 6.102-9.745 2.035-2.945 4.496-5.61 5.73-7.129.193-.236.38-.375.605-.502.168-.095.417-.22.5-.315.009-.113-.327-.447-.385-.49-.166.022-.265.06-.405.129-.191.09-.447.215-.801.215-.451 0-.916-.384-1.761-1.083C41.495 3.27 37.543.012 30.598 0 18.702-.018 11.679 10.125 11.767 16.839c.055 4.183.854 8.78 2.94 10.712 2.128 1.97 5.712 3.41 11.98 4.9l.421.11-1.005 1.117c-1.649 1.405-2.834 2.755-5.925 2.831-1.955 0-2.866-.669-3.566-1.296l-.147.062c.163.329.59 1.063 1.14 1.739.704.857 1.35 1.306 1.93 1.336.095.025.914.234 2.238-.179 1.71-.534 3.556-1.817 5.338-3.824l.688-.771.69-.769 4.475.799c.511.116 1.015.173 1.457.303l-1.843 2.806c-2.325 3.51-3.214 4.605-3.214 4.605s-1.551-.224-1.96-.303c-1.276-.255-3.283-.382-6.06-.359-5.432-.05-12.938 1.959-17.463 6.469a13.529 13.529 0 0 0-2.288 2.996A11.737 11.737 0 0 0 0 56.078C0 58.81 1.798 62 6.876 62c6.794 0 12.706-6.42 15.824-9.872l.5-.556c.928-1.019 1.353-1.732 1.692-2.095 3.593.995 9.43 3.433 14.54 6.786 1.038-1.058 4.088-4.69 6.947-8.944 1.568-2.334 5.184-7.758 5.313-11.921.126-3.987-3.603-8.775-10.497-10.197.221-.458.633-1.162 1.667-2.762 2.834-4.392 5.39-8.96 10.78-8.96.964 0 2.969.22 4.055 2.24.032.046.05.076.095.127zM17.445 55.863c-1.312 1.119-2.63 2.065-3.922 2.816-1.358.747-2.686 1.296-4.021 1.63a11.6 11.6 0 0 1-2.799.38c-.256 0-.516-.015-.822-.042-2.755-.271-4.47-1.906-4.47-4.277 0-6.279 10.526-8.23 14.361-8.23l.808-.005c1.756-.014 2.985.111 6.431.806l.723.192a46.746 46.746 0 0 1-5.011 5.552c-.435.407-.84.806-1.278 1.178z\" fill=\"#0A1633\" fill-rule=\"evenodd\"/>\n    </symbol>\n    <symbol viewBox=\"0 0 60 41\" id=\"icon-loading-watoday\">\n      <path d=\"M29.974 11.33h-.334c-.611 1.626-10.344 27.707-10.566 28.269-.22.618-.5 1.401-1.389 1.401-.611 0-.946-.449-1.167-1.12L4.007 4.318C3.45 2.746 2.448 2.297 1.725 2.297H.335C.055 2.297 0 2.074 0 1.85V.392C0 .112.056 0 .445 0c.445 0 2.17.166 7.897.166C12.347.166 14.624 0 15.18 0c.389 0 .446.166.446.447V1.85c0 .28-.057.447-.446.447h-1.223c-.89 0-1.446.788-1.112 1.91l7.62 24.453h.331c.668-1.906 7.34-19.744 7.34-21.763 0-1.403-.556-2.86-1.053-3.53-.502-.675-1.225-1.07-1.67-1.07h-1.112c-.279 0-.335-.113-.335-.447V.392c0-.226.056-.392.39-.392.502 0 2.449.166 7.34.166 4.67 0 6.784-.166 7.34-.166.334 0 .386.166.386.502v1.403c0 .224-.052.392-.385.392h-1.67c-.889 0-1.39 1.235-1.11 2.189l7.673 24.174h.333c2.728-7.627 7.564-21.874 7.564-24.904 0-.617-.723-1.459-1.78-1.459h-1.612c-.335 0-.392-.168-.392-.504v-1.4c0-.227.057-.393.446-.393.555 0 2.504.166 5.95.166C57.555.166 59.167 0 59.61 0c.336 0 .389.111.389.502v1.403c0 .224 0 .392-.389.392h-1.054c-.946 0-2.058.62-2.614 2.02-.668 1.796-11.846 32.252-12.958 34.946-.277.673-.667 1.737-1.669 1.737-.779 0-1.11-.728-1.389-1.51l-9.953-28.16\" fill=\"#0A1633\" fill-rule=\"evenodd\"/>\n    </symbol>\n    <symbol viewBox=\"0 0 61 56\" id=\"icon-loading-theage\">\n      <path d=\"M55.49 51.65a76.398 76.398 0 0 1-3.368-6.912L32.98 0h-4.86L16.7 28.195c-1.56 3.883-9.118 21.282-10.102 23.07-1.2 2.15-2.076 1.862-6.598 2.25V56c1.642-.077 6.268-.232 9.143-.232 2.547 0 5.093.155 7.394.232v-2.486c-6.16-.077-6.736-.387-6.736-1.24 0-.312.33-1.244.74-2.332l4.503-11.435c.494-1.165.741-1.398 1.808-1.398h18.65c1.481 0 1.645 0 2.137 1.165l4.953 12.367c.328.776.575 1.475.575 1.941 0 .39-.575.778-7.394.932V56c6.407-.154 9.2-.232 12.242-.232 4.435 0 9.37.078 12.985.232v-2.64c-3.184 0-4.771-.388-5.51-1.71zM35.61 34.391c0 .233-.411.466-.984.544H18.151c-1.151 0-1.48-.233-1.48-.466s.166-.544.329-1.088l8.973-22.253c.246-.466.33-.854.494-.854.162 0 .41.388.493.7l.047.116 8.274 22.291c.245.622.328.777.328 1.01z\" fill=\"#0A1633\" fill-rule=\"evenodd\"/>\n    </symbol>\n    <symbol viewBox=\"0 0 47 62\" id=\"icon-loading-bt\">\n      <path d=\"M25.33 53.374c-3.825 0-7.729-1.627-10.519-5.29V33.278c2.312-4.556 6.774-6.51 10.678-6.51 7.17 0 11.712 6.349 11.712 13.183 0 6.427-3.824 13.424-11.872 13.424m1.99-35.23c-4.38 0-9.479 1.79-12.508 5.776V0H0v8.782l5.172.34v51.9h8.764l.48-4.882C17.44 60.21 22.698 62 27.162 62 38.873 62 47 51.666 47 40.193c0-12.285-8.445-22.048-19.68-22.048\" fill=\"#0A1633\" fill-rule=\"evenodd\"/>\n    </symbol>\n  </svg>\n  ```\n  You can then use the button style as follows.\n\n  Your SCSS:\n  ```\n  .elementContainingYourLoaderClass {\n    position: relative;\n  }\n\n  .yourLoaderClass {\n    @include loader(\"standard\");\n  }\n  ```\n  Your HTML:\n  ```\n  <div class=\"yourLoaderClass\">\n    <div class=\"loader-icon\">\n      <div class=\"loader-icon__borders-container\">\n        <div class=\"loader-icon__borders-container__borders\"></div>   \n      </div>\n      <svg \n        viewBox=\"0 0 60 60\" version=\"1.1\" \n        xmlns=\"http://www.w3.org/2000/svg\"\n        class=\"loader-icon__svg\">\n        <use \n          xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n          xlink:href=\"#icon-loading-smh\" \n          class=\"loader-icon__svg__image\" >\n      </svg>\n    </div>\n    <p class=\"loader-message\">\n      Some default message.\n    </p>\n    <div class=\"loader-retry\">\n      <button class=\"loader-retry__button\">\n        Try again\n      </button>\n    </div>\n  </div>\n\n  ```\n*/\n/*\n  Loader\n\n  @param { Number with unit } icon-side-length - Length of the side of the loading icon to be displayed\n  @param { Color } icon-color - Color of the loading icon\n  @param { Color } inner-border-color - Color of the inner spinning border\n  @param { Color } outer-border-color - Color of the outer spinning border\n  @param { color } text-color - Color of the loading text\n*/\n/*\n  Loader\n\n  @param { String } style - String describing style of loader.\n*/\n/*\n  Loader container\n*/\n/*\n  Drop-cap\n\n  February 6, 2017\n  ask sorenfrederiksen@fairfaxmedia.com.au\n\n  A large capital letter used to start a section of a feature article.\n  \n  With the above in your HTML document, you can use this style as follows.\n\n  Your SCSS:\n\n  ```\n  .yourDropCapClass {\n    @include drop-cap(1rem);\n  }\n  ```\n\n  Your HTML:\n  ```\n  <p>\n    <span class=\"yourDropCapClass\">T</span>here are about 17,000 rips at beaches around Australia \n    on any given day. Chances are that – unless you’re a skilled surf lifesaver or an extremely \n    experienced surfer – you’d prefer not to be dicing with them.\n  </p>\n  ```\n*/\n/*\n  Drop cap\n\n  @param { Number with unit } normal-font-size - Size of most of the text in the drop-cap's \n  section\n*/\n/*\n  Fancy radio\n\n  April 9, 2018\n  ask sorenfrederiksen@fairfaxmedia.com.au\n\n  A pair of mix-ins to help users implement tab-like 'fancy' radio buttons.\n\n  All mix-ins result in radio button collections that can signify the buttons are deactivated (apply \n  the '.is--deactivated' class).\n\n  You can use this style as follows.\n\n  Example SCSS:\n  ```\n  .yourFancyRadioClass {\n    @include fancy-radio('standard');\n  }\n  ```\n\n  Example HTML:\n  ```\n  <div class=\"fancy-radio\">\n    <p>\n      Options label\n    </p>\n    <div>\n      <input \n        type=\"radio\" \n        name=\"options\" \n        id=\"option-1\"\n        value=\"option-1\"\n        checked>\n      <label \n        for=\"option-1\">\n        Option 1\n      </label>\n      <input \n        type=\"radio\" \n        name=\"options\" \n        id=\"option-2\"\n        value=\"option-2\">\n      <label \n        for=\"option-2\">\n        Option 2\n      </label>\n      <input \n        type=\"radio\" \n        name=\"options\" \n        id=\"option-3\"\n        value=\"option-3\">\n      <label \n        for=\"option-3\">\n        Option 3\n      </label>\n      <input \n        type=\"radio\" \n        name=\"options\" \n        id=\"option-4\"\n        value=\"option-4\">\n      <label \n        for=\"option-4\">\n        Option 4\n      </label>\n      <input \n        type=\"radio\" \n        name=\"options\" \n        id=\"option-5\"\n        value=\"option-5\">\n      <label \n        for=\"option-5\">\n        Option 5\n      </label>\n    </div>\n  </div>\n  ```\n*/\n/*\n  Fancy radio\n\n  @param { Color } color - Colour of the radio buttons' text\n  @param { Color } checked-color - Colour of the radio buttons' text when they are checked\n  @param { Color } background - Background colour of the radio buttons\n  @param { Color } checked-background - Background colour of the radio buttons when they are checked\n  @param { Color } hover-background - Background colour of the radio buttons when they are checked\n  @param { String } internal-border - Border between the radio buttons\n  @param { String } external-border - Border surrounding the collection of radio buttons\n  @param { Number with unit } font-size - Size of the radio buttons' text\n  @param { Color } label-color - Colour of the radio button group's label's text\n*/\n/*\n  Fancy radio\n\n  @param { String } style - String denoting style of fancy radio (e.g. 'standard', 'standard--dark')\n*/\n/*\n  Custom fancy radio\n\n  @param { Number with unit } font-size - Size of the radio buttons' text\n  @param { Color } color - Colour of the radio buttons' text\n  @param { Color } checked-color - Colour of the radio buttons' text when they are checked\n  @param { Color } background - Background colour of the radio buttons\n  @param { Color } checked-background - Background colour of the radio buttons when they are checked\n  @param { Color } hover-background - Background colour of the radio buttons when they are checked\n  @param { String } internal-border - Border between the radio buttons\n  @param { String } external-border - Border surrounding the collection of radio buttons\n  @param { Color } label-color - Colour of the radio button group's label's text\n*/\n/*\n  State rules are ways to describe how our modules or layouts will look when in a particular state. \n  Is it hidden or expanded? Is it active or inactive? They are about describing how a module or \n  layout looks on screens that are smaller or bigger. They are also about describing how a module \n  might look in different views like the home page or the inside page.\n*/\nbody {\n  background: rgba(67, 160, 71, 0.1); }\n\n.app {\n  overflow: hidden; }\n\n.app__scrolly-map-container {\n  position: relative;\n  min-height: 100vh; }\n\nh1,\nh2,\nh3,\np,\ntext,\ndiv {\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale; }\n\n.app__scrolly-map-container__content {\n  pointer-events: none;\n  min-height: 100vh;\n  position: relative;\n  z-index: 100;\n  padding: 0 16px;\n  -webkit-transition: opacity 350ms ease;\n  -o-transition: opacity 350ms ease;\n  transition: opacity 350ms ease; }\n  .app__scrolly-map-container__content__note {\n    font-family: 'PT Serif', Georgia, Times, 'Times New Roman', serif;\n    width: 90%;\n    max-width: 460px;\n    position: absolute;\n    left: 50%;\n    top: -25%;\n    -webkit-transform: translateX(-50%) translateY(-50%);\n        -ms-transform: translateX(-50%) translateY(-50%);\n            transform: translateX(-50%) translateY(-50%); }\n    .app__scrolly-map-container__content__note__pars {\n      padding: 11px 5px;\n      color: #0A1633;\n      background: #ebf5ec; }\n    .app__scrolly-map-container__content__note__time {\n      font-family: 'Abril Titling Bold', 'Book Antiqua', Palatino, 'Palatino Linotype', 'Palatino LT STD', Georgia, serif;\n      color: #fff;\n      text-align: center;\n      font-size: 8px;\n      background: #192646;\n      border-radius: 4px;\n      -webkit-box-shadow: 3px 3px 4px RGBA(0, 0, 0, 0.2);\n              box-shadow: 3px 3px 4px RGBA(0, 0, 0, 0.2);\n      position: absolute;\n      left: 16px;\n      top: -26px;\n      z-index: -100;\n      min-width: 110px;\n      min-height: 40px;\n      padding: 5px 0; }\n      .app__scrolly-map-container__content__note__time span {\n        color: #fcac00;\n        padding-left: 8px; }\n    .app__scrolly-map-container__content__note__caption {\n      font-family: 'PT Sans', 'Trebuchet MS', 'Arial Narrow', sans-serif;\n      font-size: 15px;\n      position: absolute;\n      left: 0;\n      top: -36px;\n      z-index: -100;\n      min-width: 110px;\n      min-height: 40px;\n      padding: 5px;\n      background: #ebf5ec;\n      font-weight: 700; }\n      .app__scrolly-map-container__content__note__caption span {\n        color: #691C3F; }\n      .app__scrolly-map-container__content__note__caption__head {\n        font-family: 'Abril Titling Bold', 'Book Antiqua', Palatino, 'Palatino Linotype', 'Palatino LT STD', Georgia, serif;\n        font-size: 36px; }\n    .app__scrolly-map-container__content__note__pullquote {\n      font-family: 'Abril Titling Bold', 'Book Antiqua', Palatino, 'Palatino Linotype', 'Palatino LT STD', Georgia, serif;\n      font-size: 18px;\n      line-height: 20px;\n      padding: 11px 5px;\n      color: #0A1633;\n      font-style: italic;\n      letter-spacing: 0.1px;\n      background: #ebf5ec;\n      border-top: 1px solid #d7dbe3;\n      border-width: 0.5px; }\n    .app__scrolly-map-container__content__note__body {\n      background: #fff;\n      -webkit-box-shadow: 3px 3px 4px RGBA(0, 0, 0, 0.2);\n              box-shadow: 3px 3px 4px RGBA(0, 0, 0, 0.2);\n      color: #232323;\n      font-size: 16px;\n      line-height: 1.6;\n      padding: 16px;\n      border-radius: 4px; }\n      .app__scrolly-map-container__content__note__body strong {\n        font-weight: 700; }\n      .app__scrolly-map-container__content__note__body__legend {\n        font-family: 'PT Sans', 'Trebuchet MS', 'Arial Narrow', sans-serif;\n        font-weight: 700;\n        padding-top: 8px; }\n        .app__scrolly-map-container__content__note__body__legend__circle {\n          display: inline-block;\n          height: 16px;\n          width: 16px;\n          border-radius: 16px;\n          margin-right: 10px;\n          position: relative;\n          top: 3px;\n          background: #ac0000; }\n\n@media only screen and (min-width: 1024px) {\n  .app__scrolly-map-container__content {\n    max-width: 1130px;\n    margin: 0 auto; }\n    .app__scrolly-map-container__content__note {\n      position: absolute;\n      left: initial;\n      right: 46px;\n      -webkit-transform: translateY(-50%);\n          -ms-transform: translateY(-50%);\n              transform: translateY(-50%);\n      margin: 0; }\n      .app__scrolly-map-container__content__note__pullquote {\n        font-size: 28px;\n        line-height: 35px;\n        padding: 20px 5px; } }\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/components/App/App.css","@charset \"UTF-8\";\n/*\n  Fairfax Presentation Styles\n\n  ask sorenfrederiksen@fairfaxmedia.com.au\n\n  This file binds together the various components of the Fairfax Presentation Styles library. \n\n  To use this file in a project, include it like so:\n\n  .../ css\n      - main.scss <- File imports '_ffx-prez-styles.scss', e.g. @import 'libs/_ffx-prez-styles.scss' \n      - main.css  <- Main file above compiles to this\n  ..../ lib\n        - '_ffx-prez-styles.scss'\n        - etc.\n\n  See 'https://smacss.com/book/categorizing' for more on the system used to categorise the styling\n  rules included.\n*/\n/* \n  Base rules are the defaults. They are almost exclusively single element selectors (e.g. 'p', 'a',\n  'input', rather than class selectors, etc.) but base rules could include attribute selectors, \n  pseudo-class selectors, child selectors or sibling selectors.\n\n  We also use 'Base' to include variables broadly depended on by many other styles (e.g. colours,\n  font and text styles).\n*/\n/*\n  Reset\n\n  Fairfax styles reset from 'prez-library-react-shared-components':\n\n  https://bitbucket.org/sorenfrederiksenffx/prez-library-react-shared-components\n\n  October 24, 2017\n  ask sorenfrederiksen@fairfaxmedia.com.au\n*/\n/*\n  Convert between variable types\n\n  These functions are used to convert between variable types.\n\n  Adapted from: https://codepen.io/jakob-e/pen/AHunv\n*/\n/*\n  To string\n*/\n/*\n  To number\n*/\n/*\n  To integer\n*/\n/*\n  To U-integer\n*/\n/*\n  Convert between unit types\n\n  These functions are used to convert unit values from one unit type to another.\n\n  Adapted from: https://codepen.io/jakob-e/pen/AHunv\n*/\n/*\n  To unit\n\n  @param { String } unit - String denoting unit type (e.g. 'px')\n  @param { Number } input - Number with unit suffix (if it has one, e.g. '10em')\n  @returns { Number } - Number of denoted unit, if a conversion is possible (e.g. '10em' to 'em'\n  results in '100px')\n*/\n/*\n  To line height\n\n  Function takes a font size and returns an appropriate line-height.\n\n  @param { Number } font-size - Number (potentially with unit) denoting size of font\n  @param { Number } line-height - Number (potentially with unit) denoting line height desired\n*/\n/*\n  Colors\n\n  November 9, 2017\n  ask sorenfrederiksen@fairfaxmedia.com.au\n*/\n/*\n  Real color names\n*/\n/*\n  Descriptive color names\n*/\n/*\n  Functional color names\n*/\n/*\n  Colours - Australian politics\n\n  November 9, 2017\n  ask sorenfrederiksen@fairfaxmedia.comau\n*/\n/*\n  Colors - Charts\n\n  January 1, 2017\n  Ask sorenfrederiksen@fairfaxmedia.com.au\n\n  Colors for use in data visualisations. These and other styles are documented here:\n\n  https://ffxblue.atlassian.net/wiki/spaces/PROD/pages/32577164/Infogram+Style\n*/\n/*\n  Fonts\n\n  The file assumes it will be compiled to a CSS file that sits like so in the project's directory \n  hierarchy:\n\n  main.css\n  .. / assets\n  .. .. / fonts\n  .. .. .. / abril-titling\n  .. .. .. .. / AbrilTitling-Semibold.woff\n  .. .. .. .. / AbrilTitling-Semibold.woff2\n  .. .. .. / pt-sans\n  .. .. .. .. / PTSans-Regular.woff\n  .. .. .. .. / PTSans-Regular.woff2\n  .. .. .. .. / PTSans-Bold.woff\n  .. .. .. .. / PTSans-Bold.woff2\n  .. .. .. / pt-serif\n  .. .. .. .. / PTSerif-Regular.woff\n  .. .. .. .. / PTSerif-Regular.woff2\n  .. .. .. .. / PTSerif-Bold.woff\n  .. .. .. .. / PTSerif-Bold.woff2\n*/\n/*\n  Type\n\n  Standard and other type styles.\n\n  October 24, 2017\n  ask sorenfrederiksen@fairfaxmedia.com.au\n*/\n/*\n  These mix-ins are not used in the main, public 'standard-typography' mix-in, because they would \n  burden projects with bulkier styles expressed in long- rather than the short-form of that main \n  mix-in.\n\n  (As in, if we're assuming the user wants to apply all standard typographic styles, we can apply\n  styles to 'h1, h2, h3, h4, h5' all at once, saving many lines of code. Without that assumption,\n  we have to repeat our styles for each individual type of heading element.)\n\n  Individual typographical mix-ins are provided only for 'h1', 'h2', 'h3' and 'p' elements, as these\n  are considered most likely to prove of use.\n\n  The utility of all of these mix-ins is debatable, and subject to future consideration.\n*/\n/*\n  Standard typography - h1\n*/\n/*\n  Standard typography - h2\n*/\n/*\n  Standard typography - h3\n*/\n/*\n  Standard typography - p\n*/\n/*\n  Standard typography\n*/\n/*\n  Animations\n\n  January 1, 2018\n  ask sorenfrederiksen@fairfaxmedia.com.au\n*/\n@-webkit-keyframes spin {\n  100% {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg); } }\n@keyframes spin {\n  100% {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg); } }\n\n/*\n  Break point\n\n  Mix-in used to create standard Fairfax breakpoints.\n\n  These mix-ins can be used like so:\n\n  @includes('only', 'small') {\n    \n    .someMobileStyle {\n      color: red;\n    }\n\n    // ... other styles that will only show within the 'small' break-point bracket\n  }\n\n  See the 'Media Queries' section of this for a deeper explanation of how these work:\n  https://robots.thoughtbot.com/sasss-content-directive\n\n  @param { String } type - String denoting type of break-point to be created\n  @param { String } size - String denoting size of break-point to be created\n*/\n/* \n  Layout rules divide the page into sections. Layouts hold one or more modules together.\n*/\n/*\n  Embedded interactive\n\n  January 1, 2017\n  ask sorenfrederiksen@fairfaxmedia.com.au\n\n  Default styles for element containing embedded interactive.\n\n  Your SCSS:\n\n  ```\n  .yourEmbeddedInteractiveContainerClass {\n    @include embedded-interactive;\n  }\n  ```\n\n  Your HTML:\n\n  ```\n  <div class=\"yourEmbeddedInteractiveContainerClass\">\n    <!-- Your application -->\n  </div>\n  ```\n*/\n/*\n  Feature article header\n\n  November 7, 2017\n  ask sorenfrederiksen@fairfaxmedia.com.au\n\n  A mix-in that styles a container and its contents to become the header section of a long-form\n  feature article, including the article's header, subtitle, author credits, date and header\n  sharing buttons.\n\n  Your SCSS:\n\n  ```\n  // The class of your feature article header\n  .yourFeatureArticleHeaderClass {\n    @include feature-article-header(\"standard\", true, false);\n  }\n  ```\n\n  If you're using the `standard-typography` mix-in elsewhere in your style-sheet, you can set that\n  last variable - the `false` - to `true`. When set to `true`, that parameter will make the\n  `feature-article-header` mix-in assume that `standard-typography` is active, and so rely on\n  styles associated with that mix-in, resulting in less-bloated styles.\n\n  For example: \n\n  ```\n  // The class of your feature article header\n  .yourFeatureArticleHeaderClass {\n    @include feature-article-header(\"standard\", true, true);\n  }\n  ```\n\n  Your HTML:\n  ```\n  <header class=\"yourFeatureArticleHeaderClass\">\n\n    <p class=\"feature-article-header__topic\">\n      <a href=\"/national\">Your feature article's topic</a>\n    </p>\n    \n    <h1 class=\"feature-article-header__title\">\n      Your feature article title here\n    </h1>\n\n    <div class=\"feature-article-header__break\"></div>\n\n    <!-- Article header social media sharing buttons -->\n    <ul class=\"feature-article-header__social\">\n      <li class=\"feature-article-header__social__button social-button__facebook\">\n        <a href=\"javascript:void(0);\">\n          <span>Share on Facebook</span>\n          <svg height=\"1em\" width=\"1em\" aria-hidden=\"true\" focusable=\"false\">\n            <use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#icon-facebook\"></use>\n          </svg>\n        </a>\n      </li>\n      <li class=\"feature-article-header__social__button social-button__twitter\">\n        <a href=\"javascript:void(0);\">\n          <span>Share on Twitter</span>\n          <svg height=\"1em\" width=\"1em\" aria-hidden=\"true\" focusable=\"false\">\n            <use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#icon-twitter\"></use>\n          </svg>\n        </a>\n      </li>\n      <li class=\"feature-article-header__social__button social-button__whatsapp\">\n        <a href=\"javascript:void(0);\">\n          <span>Share on WhatsApp</span>\n          <svg height=\"1em\" width=\"1em\" aria-hidden=\"true\" focusable=\"false\">\n            <use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#icon-whatsapp\"></use>\n          </svg>\n        </a>\n      </li>\n      <li class=\"feature-article-header__social__button social-button__email\">\n        <a href=\"javascript:void(0);\">\n          <span>Share on Email</span>\n          <svg height=\"1em\" width=\"1em\" aria-hidden=\"true\" focusable=\"false\">\n            <use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#icon-email\"></use>\n          </svg>\n        </a>\n      </li>\n    </ul>\n\n    <p class=\"feature-article-header__subtitle\">\n      Here, you'll input a subtitle of around a sentence in length, usually running over two lines..\n    </p>\n\n    <p class=\"feature-article-header__author\">\n      by Soren Frederiksen &amp; Donald Trump\n    </p>\n\n    <p class=\"feature-article-header__date\">\n      February 6, 2018\n    </p>\n\n  </header>\n  ```\n*/\n/*\n  Feature article header\n\n  @param { Color } title-color - Colour used to colour the feature header's title\n  @param { Color } subtitle-color - Colour used to colour the feature header's subtitle\n  @param { Color } topic-color - Colour used to colour the feature header's topic\n  @param { Color } break-color - Colour used to colour the feature header's break between its title,\n  subtitle and other elements\n  @param { Color } author-and-date-color - Colour used to colour the feature header's author and\n  date elements\n  @param { Color } social-button-color - Colour used to colour the feature header's social buttons\n  @param { Boolean } sharing-only-on-mobile - Boolean denoting whether or not feature article header\n  sharing buttons wills be shown on devices larger than mobile\n  @param { Boolean } standard-typography-in-us - Boolean indicating whether or not the \n  'standard-typography' mix-in is in use elsewhere in this style-sheet\n*/\n/*\n  Feature article header\n\n  @param { String } style - String describing style of feature article header (e.g. 'standard' or\n  'standard--dark')\n  @param { Boolean } sharing-only-on-mobile - Boolean denoting whether or not feature article header\n  sharing buttons wills be shown on devices larger than mobile\n  @param { Boolean } standard-typography-in-us - Boolean indicating whether or not the \n  'standard-typography' mix-in is in use elsewhere in this style-sheet\n*/\n/*\n  Custom feature article header\n\n  @param { Color } title-color - Colour used to colour the feature header's title\n  @param { Color } subtitle-color - Colour used to colour the feature header's subtitle\n  @param { Color } topic-color - Colour used to colour the feature header's topic\n  @param { Color } break-color - Colour used to colour the feature header's break between its title,\n  subtitle and other elements\n  @param { Color } author-and-date-color - Colour used to colour the feature header's author and\n  date elements\n  @param { Color } social-button-color - Colour used to colour the feature header's social buttons\n  @param { Boolean } sharing-only-on-mobile - Boolean denoting whether or not feature article header\n  sharing buttons wills be shown on devices larger than mobile\n  @param { Boolean } standard-typography-in-us - Boolean indicating whether or not the \n  'standard-typography' mix-in is in use elsewhere in this style-sheet\n*/\n/*\n  Modules are the reusable, modular parts of our design.\n*/\n/*\n  Sports team icon\n\n  The file assumes it will be compiled to a CSS file that sits like so in the project's directory \n  hierarchy:\n\n  main.css\n  .. / libs\n  .. .. / ffx-prez-styles\n  .. .. .. / assets\n  .. .. .. .. / images\n  .. .. .. .. / logos\n  .. .. .. .. .. / sport\n  .. .. .. .. .. .. / mc-team-logos$2x.png\n*/\n/*\n  Sports team icon\n\n  @param { Number with unit } side-length - Figure with unit that determines width and height of icon\n  @param { String } league - String denoting which set of icons to include in icon style\n*/\n/*\n  Button\n\n  October 20, 2017\n  ask sorenfrederiksen@fairfaxmedia.com.au\n\n  A series of mix-ins to help developers hastily apply standard button styles.\n\n  Users are encouraged to stick to the standard button mixin ('button'), except where a given color\n  scheme demands a change (use 'button--custom') or the function of the button necessitates one \n  (e.g. where the button deletes things, use 'button--destructive').\n\n  All mix-ins result in buttons that can be made to appear deactivated (apply the '.is--deactivated'\n  class to your button) or to signify the application is in the midst of loading (apply the \n  '.is--loading' class). The latter requires the inclusion of the SVG element include in the example\n  HTML below.\n\n  To use this button style, add this to the top of your HTML document (or add the symbol elements to \n  an existing svg container):\n\n  ```\n  <svg xmlns=\"http://www.w3.org/2000/svg\" style=\"position:absolute; width: 0; height: 0;\">\n    <symbol viewBox=\"0 0 40 40\" id=\"icon-loading\">\n      <circle class=\"loading__icon__circle\" opacity=\"0\" cx=\"15.8\" cy=\"15\" r=\"15\"></circle>\n      <path d=\"M27.8084006,22.8842813 C29.5771785,20.6011257 30.6299412,17.7353365 \n               30.6299412,14.6236613 C30.6299412,9.67647577 27.9688583,5.35081946 \n               24,3\" class=\"loading__icon__active-segment\"></path>  \n    </symbol>\n  </svg>\n  ```\n\n  You can then use the button style as follows.\n\n  Your SCSS:\n\n  ```\n  .yourButtonClass {\n    @include button(\"medium\", \"dynamic\", \"solid\");\n  } \n\n  // ... or ...\n\n  .yourCustomButtonClass {\n    @include button--custom(#fff, red, \"1px solid red\", \"large\", \"dynamic\", \"red\");\n  }\n\n  // ... or ...\n\n  .yourDestructiveButtonClass {\n    @include button--destructive(\"large\", \"fixed\", \"solid--reversed\");\n  }\n  ```\n  Your HTML:\n\n  ```\n  <button class=\"yourButtonClass\">\n    <span>A long button</span>\n    <svg viewBox=\"0 0 40 40\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" \n         xmlns:xlink=\"http://www.w3.org/1999/xlink\" stroke=\"#096DD2\" \n         stroke-width=\"3\" fill=\"transparent\" class=\"button-loading\">\n      <use \n        xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n        xlink:href=\"#icon-loading\" \n        class=\"button-loading__icon\" \n        transform=\"translate(6.5 6.5)\">\n    </svg>\n  </button>\n  ```\n*/\n/*\n  Button\n\n  @param { Color } bg - Color for the button's background\n  @param { Color } hover-bg - Color for the button's background when user hovers over it\n  @param { Color } active-bg - Color for the button's background when the user clicks or taps it\n  @param { Color } color - Color for button's text\n  @param { Color } hover-color - Color for button's text when user hovers over it\n  @param { Color } active-color - Color for button's text when user clicks or taps it\n  @param { String } size - String denoting size of button (e.g. 'small', 'medium', 'large')\n  @param { String } size-rules - String denoting rules of how button will be sized ('fixed' or \n  'dynamic')\n  @param { Color } outline - Color of button's outline when it is clicked \n  @param { Boolean } can-load - Boolean indicating whether button can enter the loading state\n*/\n/*\n  Button deactivated\n*/\n/*\n  Button loading\n*/\n@-webkit-keyframes loading-icon-spin {\n  100% {\n    -webkit-transform: translateX(-50%) translateY(-50%) rotate(360deg);\n            transform: translateX(-50%) translateY(-50%) rotate(360deg); } }\n@keyframes loading-icon-spin {\n  100% {\n    -webkit-transform: translateX(-50%) translateY(-50%) rotate(360deg);\n            transform: translateX(-50%) translateY(-50%) rotate(360deg); } }\n\n/*\n  Button\n  \n  @param { String } size - String describing size of button (e.g. 'small', 'medium', 'large')\n  @param { String } size-rules - String describing rules determining size of button (e.g. 'fixed' or\n  'dynamic')\n  @param { String } style - String describing style of button (e.g. 'solid', 'solid--reversed', \n  'hollow' or 'hollow--reversed')\n  @param { Boolean } can-load - Boolean indicating whether button can enter the loading state\n*/\n/*\n  Custom button\n\n  @param { Color } custom-background - Colour for the background of the button\n  @param { Color } custom-color - Colour for the text of the button\n  @param { String } custom-border - Short-form border property for the button (e.g. '1px solid red')\n  @param { String } size - String describing size of button (e.g. 'small', 'medium', 'large')\n  @param { String } size-rules - String describing rules determining size of button (e.g. 'fixed' or\n  'dynamic')\n  @param { Color } custom-outline - Colour for the outline (shown on click) of the button\n  @param { Boolean } can-load - Boolean indicating whether button can enter the loading state\n*/\n/*\n  Destructive button\n\n  @param { String } size - String describing size of button (e.g. 'small', 'medium', 'large')\n  @param { String } size-rules - String describing rules determining size of button (e.g. 'fixed' or\n  'dynamic')\n  @param { String } style - String describing style of button (e.g. 'solid' or 'solid--reversed')\n*/\n/*\n  Social button\n\n  October 24, 2017\n  ask sorenfrederiksen@fairfaxmedia.com.au\n\n  A mix-in to facilitate the use of standard social media sharing buttons, including those for \n  Facebook, Twitter, Instagram, WhatsApp, Google Plus and Email.\n\n  To use social buttons, add this to the top of your HTML document (or add the symbol elements to \n  an existing svg container):\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" style=\"position:absolute; width: 0; height: 0;\">\n      <symbol viewBox=\"0 0 32 32\" id=\"icon-twitter\">\n        <path d=\"M32 6.371c-1.16.525-2.139.542-3.177.023 1.34-.811 1.4-1.38 1.884-2.916a12.91 12.91 0 0 1-4.115 1.596A6.431 6.431 0 0 0 21.864 3c-3.578 0-6.479 2.94-6.479 6.564 0 .515.058 1.016.167 1.496C10.167 10.787 5.394 8.173 2.2 4.2a6.612 6.612 0 0 0-.879 3.302 6.584 6.584 0 0 0 2.883 5.463 6.402 6.402 0 0 1-2.934-.82l-.001.082c0 3.18 2.234 5.833 5.198 6.437a6.43 6.43 0 0 1-2.927.112c.825 2.607 3.218 4.505 6.052 4.559A12.903 12.903 0 0 1 0 26.052 18.167 18.167 0 0 0 9.93 29c11.919 0 18.433-10.001 18.433-18.675 0-.286-.004-.566-.017-.85C29.61 8.551 31.132 7.69 32 6.371\" fill=\"currentColor\" fill-rule=\"evenodd\"></path>\n      </symbol>\n      <symbol viewBox=\"0 0 32 32\" id=\"icon-email\">\n        <g fill=\"currentColor\" fill-rule=\"evenodd\">\n          <path d=\"M16.086 17.334L30.627 6.502A3.267 3.267 0 0 0 28.885 6h-25.6c-.621 0-1.194.177-1.685.47l14.486 10.864z\"></path>\n          <path d=\"M16.464 18.857a.805.805 0 0 1-.931-.002L.413 7.538C.158 7.98 0 8.478 0 9.018v13.847c0 1.695 1.435 3.077 3.2 3.077h25.6c1.765 0 3.2-1.382 3.2-3.077V9.018c0-.518-.147-1-.382-1.429L16.464 18.857z\"></path>\n        </g>\n      </symbol>\n      <symbol viewBox=\"0 0 32 32\" id=\"icon-whatsapp\">\n        <path d=\"M22.189 24.818c-.856.078-.856.701-5.6-1.165-4.74-1.868-7.733-6.732-7.967-7.044-2.187-2.91-2.762-5.991-.273-8.715.79-.86 2.748-.824 3.19.235.387.934 1.32 3.229 1.438 3.462.117.235.194.507.037.817-.186.375-.38.814-1.166 1.596-.233.233-.475.484-.203.95.272.468 1.206 1.995 2.594 3.231 1.782 1.59 3.284 2.081 3.75 2.315.467.233.74.195 1.012-.117.271-.313 1.167-1.362 1.476-1.829.312-.467.624-.388 1.05-.233.428.155 2.72 1.283 3.188 1.518.466.23.778.35.895.544.701 1.177-.963 4.212-3.421 4.435M16 0C7.178 0 0 7.177 0 16c0 3.5 1.133 6.744 3.048 9.38L1.05 31.324l6.149-1.97A15.897 15.897 0 0 0 16 32c8.821 0 16-7.177 16-16 0-8.822-7.178-16-16-16\" fill=\"currentColor\" fill-rule=\"evenodd\"></path>\n      </symbol>\n      <symbol viewBox=\"0 0 32 32\" id=\"icon-facebook\">\n        <path d=\"M18.7 17.4h5.1l.7-5.6h-5.8V8.1c0-1.6.5-2.7 2.8-2.7h3V.2c-.5 0-2.3-.2-4.4-.2-4.4 0-7.9 2.7-7.9 7.7v4.1H7.6v5.6h4.6V32h6.5V17.4z\" fill=\"currentColor\"></path>\n      </symbol>\n      <symbol viewBox=\"0 0 32 32\" id=\"icon-google\">\n        <path d=\"M28.6 14.6v-3.4H26v3.4h-3.4v2.6H26v3.4h2.6v-3.4H32v-2.6zm-8-.6a8.2 8.2 0 0 1 .2 2.2c0 5.9-4 10.3-10.2 10.3A10.65 10.65 0 0 1 0 16 10.65 10.65 0 0 1 10.6 5.5a10.48 10.48 0 0 1 7.2 2.8l-3 3A6.38 6.38 0 0 0 4.2 16a6.24 6.24 0 0 0 6.4 6.3c3.2 0 5.4-1.8 5.8-4.3h-5.8v-3.9l10-.1z\" fill=\"currentColor\" fill-rule=\"evenodd\"></path>\n      </symbol>\n      <symbol viewBox=\"0 0 32 32\" id=\"icon-instagram\">\n        <g stroke=\"currentColor\" fill=\"currentColor\">\n          <path d=\"M8.5 2.9h15c1.6 0 3 .7 3.9 1.7 1 .9 1.7 2.3 1.7 3.9v15c0 1.6-.7 3-1.7 3.9-.9 1-2.3 1.7-3.9 1.7h-15c-1.6 0-3-.7-3.9-1.7-1-.9-1.7-2.3-1.7-3.9v-15c0-1.6.7-3 1.7-3.9.9-1.1 2.3-1.7 3.9-1.7m15-1.9h-15C4.4 1 1 4.4 1 8.5v15C1 27.6 4.4 31 8.5 31h15c4.1 0 7.5-3.4 7.5-7.5v-15C31 4.4 27.6 1 23.5 1\" stroke-width=\"2\"></path>\n          <path d=\"M16 21c-1.4 0-2.6-.6-3.5-1.5-.9-.9-1.5-2.1-1.5-3.5s.6-2.6 1.5-3.5c.9-.9 2.2-1.5 3.5-1.5 1.4 0 2.6.6 3.5 1.5.9.9 1.5 2.2 1.5 3.5 0 1.4-.6 2.6-1.5 3.5-.9.9-2.1 1.5-3.5 1.5m0-12c-3.9 0-7 3.1-7 7s3.1 7 7 7 7-3.1 7-7-3.1-7-7-7\" stroke-width=\"2\"></path>\n          <path d=\"M24 9.5c-.8 0-1.5-.7-1.5-1.5s.7-1.5 1.5-1.5 1.5.7 1.5 1.5-.7 1.5-1.5 1.5m0-4c-1.4 0-2.5 1.1-2.5 2.5s1.1 2.5 2.5 2.5 2.5-1.1 2.5-2.5-1.1-2.5-2.5-2.5\"></path>\n        </g>\n      </symbol>\n    </svg>\n  \n  (In future, it might be that the above isn't necessary, as mastheads in the Fairfax Blue style\n  appear to include the symbols above on every page the site.)\n\n  With the above in your HTML document, you can use this style as follows.\n\n  Your SCSS:\n\n    .yourSocialButtonContainerStyle {\n      @include social-button-container();\n    }\n\n    .yourSocialButtonStyle {\n      @include social-button(15px, #000, #ccc); \n    }\n\n  Your HTML:\n\n    <ul class=\"yourSocialButtonContainerStyle\">\n      <li class=\"yourSocialButtonStyle\">\n        <a href=\"javascript:void(0);\">\n          <span>Share on Facebook</span>\n          <svg height=\"1em\" width=\"1em\" aria-hidden=\"true\" focusable=\"false\">\n            <use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#icon-facebook\"></use>\n          </svg>\n        </a>\n      </li>\n      <li class=\"yourSocialButtonStyle\">\n        <a href=\"javascript:void(0);\">\n          <span>Share on Facebook</span>\n          <svg height=\"1em\" width=\"1em\" aria-hidden=\"true\" focusable=\"false\">\n            <use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#icon-twitter\"></use>\n          </svg>\n        </a>\n      </li>\n      <li class=\"yourSocialButtonStyle\">\n        <a href=\"javascript:void(0);\">\n          <span>Share on Facebook</span>\n          <svg height=\"1em\" width=\"1em\" aria-hidden=\"true\" focusable=\"false\">\n            <use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#icon-email\"></use>\n          </svg>\n        </a>\n      </li>\n    </ul>\n*/\n/*\n  Social button\n\n  @param { Number with unit } side-length - Figure with unit that determines width and height of \n  button\n  @param { Color } color - Color of the button \n  @param { Color } actionColor - Color of button in hover and focus states\n*/\n/*\n  Social button container\n*/\n/*\n  Text input\n\n  November 7, 2017\n  ask sorenfrederiksen@fairfaxmedia.com.au\n\n  A couple of mix-ins to help users get standard form-based text inputs up and running.\n\n  All mix-ins result in inputs that can be made to declare the user's input is invalid (apply the \n  '.is--invalid' class to your button) or to signify the input is deactivated (apply the \n  '.is--deactivated' class).\n\n  To use text inputs, add this to the top of your HTML document (or add the symbol elements to \n  an existing svg container):\n\n  ```\n  <svg xmlns=\"http://www.w3.org/2000/svg\" style=\"position:absolute; width: 0; height: 0;\">\n    <symbol viewBox=\"0 0 16 16\" id=\"icon-validation-alert\">\n      <circle r=\"8\" cx=\"8\" cy=\"8\" fill=\"currentColor\"></circle>\n      <text \n        text-anchor=\"middle\" \n        x=\"8\" \n        y=\"13\" \n        fill=\"#fff\" \n        style=\"font-size: 13px; font-weight: 700; font-family: 'PT Sans', sans-serif\">!</text>\n    </symbol>\n  </svg>\n  ```\n  \n  You can use this style as follows.\n\n  Example SCSS:\n\n  ```\n  .yourTextInputClass {\n    @include text-input(\"standard\");\n  }\n  ```\n\n  Example HTML:\n\n  ```\n  <div class=\"yourTextInputClass\">\n    <label>Some input label</label>\n    <div>\n      <input type=\"text\" placeholder=\"Some input text\"></input>\n      <svg viewBox=\"0 0 16 16\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" \n           xmlns:xlink=\"http://www.w3.org/1999/xlink\" class=\"validation-alert\">\n        <use \n          xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n          xlink:href=\"#icon-validation-alert\" \n          class=\"validation-alert__icon\">\n      </svg>\n    </div>\n    <p class=\"validation-error\">\n      You input the wrong thing.\n    </p>\n  </div>\n  ```\n\n  Example HTML where the user's input is invalid:\n\n  ```\n  <div class=\"yourTextInputClass is--invalid\">\n    <label>Some input label</label>\n    <div>\n      <input type=\"text\" placeholder=\"Some input text\"></input>\n      <svg viewBox=\"0 0 16 16\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" \n           xmlns:xlink=\"http://www.w3.org/1999/xlink\" class=\"validation-alert\">\n        <use \n          xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n          xlink:href=\"#icon-validation-alert\" \n          class=\"validation-alert__icon\">\n      </svg>\n    </div>\n    <p class=\"validation-error\">\n      You input the wrong thing.\n    </p>\n  </div>\n  ```\n\n  (Note the 'label', 'validation-alert' and 'validation-error' elements are optional.)\n*/\n/*\n  Text input\n\n  @param { Color } color - Colour of the input's text\n  @param { String } border - Border property of input\n  @param { Color } focus-color - Colour of the input's text when in focus state\n  @param { Color } focus-border - Border property of input when in focus state\n  @param { Number with unit } font-size - Size of the input's text\n  @param { Color } background - Background colour of the input\n  @param { Color } label-color - Color of the input's label\n  @param { Number with unit } label-font-size - Size of the input's label's font\n  @param { Color } outline - Color of the outline shown when the input is in focus\n*/\n/*\n  Text input without validation error\n\n  Included for use in other mix-ins where including validation error styles would add excessively\n  and needlessly to the stylesheet produced (e.g. with the 'search-input' mix-in).\n\n  @param { Color } color - Colour of the input's text\n  @param { String } border - Border property of input\n  @param { Color } focus-color - Colour of the input's text when in focus state\n  @param { Color } focus-border - Border property of input when in focus state\n  @param { Number with unit } font-size - Size of the input's text\n  @param { Color } background - Background colour of the input\n  @param { Color } label-color - Color of the input's label\n  @param { Number with unit } label-font-size - Size of the input's label's font\n  @param { Color } outline - Color of the outline shown when the input is in focus\n*/\n/*\n  Text input\n\n  @param { String } style - String denoting style of text input\n*/\n/*\n  Custom text input\n\n  @param { Color } border-color - Colour of the input's border\n  @param { Color } focus-border-color - Colour of the input's border in focus state\n  @param { Color } color - Colour of the input's text\n  @param { Number with unit } font-size - Size of input text (label is sized at 93.75% of this)\n  @param { Color } background - Colour of input's background\n  @param { Color } outline - Colour of outline shown around input when it is in focus\n*/\n/*\n  Search input\n\n  November 7, 2017\n  ask sorenfrederiksen@fairfaxmedia.com.au\n  \n  A kind of text input specifically designed for search functionality.\n\n  To use a search input, add this to the top of your HTML document (or add the symbol element to \n  an existing svg container):\n\n  ```\n  <svg xmlns=\"http://www.w3.org/2000/svg\" style=\"position:absolute; width: 0; height: 0;\">\n    <symbol viewBox=\"0 0 32 32\" id=\"icon-search\">\n      <path d=\"M21.08 18.573l10.4 10.4a1.773 1.773 0 1 1-2.508 2.507l-10.4-10.4a11.62 11.62 0 0 1-6.902 2.26C5.225 23.34 0 18.115 0 11.67S5.225 0 11.67 0s11.67 5.225 11.67 11.67c0 2.583-.84 4.97-2.26 6.903zm-1.287-6.903a8.123 8.123 0 1 0-16.247 0 8.123 8.123 0 0 0 16.247 0z\" fill=\"currentColor\" fill-rule=\"evenodd\"/>\n    </symbol>\n  </svg>\n  ```\n  \n  With the above in your HTML document, you can use this style as follows.\n\n  Your SCSS:\n\n  ```\n  .yourSearchInputClass {\n    @include search-input(\"standard\", \"right\", \"true\");\n  }\n  ```\n\n  Your HTML:\n  ```\n  <form class=\"yourSearchInputClass\">\n    <label>Some invisible search label</label>\n    <input type=\"text\" placeholder=\"Some search placeholder text\"></input>\n    <button type=\"submit\">\n      <svg viewBox=\"0 0 16 16\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" \n           xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n        <use \n          xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n          xlink:href=\"#icon-search\" >\n      </svg>\n    </button>\n  </form>\n  ```\n\n  Your HTML when using autocomplete:\n  ```\n  <form class=\"yourSearchInputClass\">\n    <label>Some invisible search label</label>\n    <input \n      type=\"text\" \n      placeholder=\"Some search placeholder text\" \n      id=\"text-input-with-autocomplete\"/>\n    <button type=\"submit\">\n      <svg viewBox=\"0 0 16 16\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" \n           xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n        <use \n          xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n          xlink:href=\"#icon-search\" >\n      </svg>\n    </button>\n  </form>\n\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/awesomplete/1.1.2/awesomplete.js\"></script>\n  <script>\n    var data = [\"Derpit\", \"Burpit\", \"Fartit\", \"McGardit\", \"Lardit\", \"Dingo\", \"Brunswick\", \"Brunton\", \"Brunsby\"]\n\n    var auto = new Awesomplete(\"#text-input-with-autocomplete\", {\n      minChars: 2,\n      maxItems: 5,\n      list: data\n    });\n  </script>\n  ```\n*/\n/*\n  Text input autocomplete\n\n  November 7, 2017\n  ask sorenfrederiksen@fairfaxmedia.com.au\n\n  A mix-in that adds styles to the autocomplete options appended to a text input when using \n  Awesomplete-style autocompletion.\n\n  Your SCSS:\n\n  ```\n  // The class of the element containing the text input you want to have autocomplete\n  .elementContainingTextInput {\n    \n    .awesomplete {\n      @include autocomplete(\"standard\");\n    }\n  }\n  ```\n\n  Your HTML:\n  ```\n  <div class=\"elementContainingTextInput\">\n    <input type=\"text\" id=\"text-input-with-autocomplete\" />\n  </div>\n\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/awesomplete/1.1.2/awesomplete.js\"></script>\n  <script>\n    var data = [\"Derpit\", \"Burpit\", \"Fartit\", \"McGardit\", \"Lardit\", \"Dingo\", \"Brunswick\", \"Brunton\", \"Brunsby\"]\n\n    var auto = new Awesomplete(\"#text-input-with-autocomplete\", {\n      minChars: 2,\n      maxItems: 5,\n      list: data\n    });\n  </script>\n  ```\n*/\n/*\n  Autocomplete\n\n  @param { String } style - String describing style of autocomplete \n*/\n/*\n  Search input\n\n  @param { String } style - String denoting style of text input\n  @param { String } icon-position - String denoting position of search icon\n  @param { String } autocomplete - String determining whether or search input will include \n  autocomplete\n*/\n/*\n  Custom search input\n\n  @param { Color } border-color - Colour of the input's border\n  @param { Color } focus-border-color - Colour of the input's border in focus state\n  @param { Color } color - Colour of the input's text\n  @param { Number with unit } font-size - Size of input text (label is sized at 93.75% of this)\n  @param { Color } background - Colour of input's background\n  @param { Color } outline - Colour of outline shown around input when it is in focus\n*/\n/*\n  Dropdown\n\n  March 1, 2018\n  ask sorenfrederiksen@fairfaxmedia.com.au\n\n  A couple of mix-ins to help users implement standard dropdowns as quickly as possible.\n\n  All mix-ins result in inputs that can signify the input is deactivated (apply the \n  '.is--deactivated' class).\n\n  To use dropdown inputs, add this to the top of your HTML document (or add the symbol elements to \n  an existing svg container):\n\n  ```\n  <svg xmlns=\"http://www.w3.org/2000/svg\" style=\"position:absolute; width: 0; height: 0;\">\n    <symbol viewBox=\"0 0 10 7\" id=\"icon-carat\">\n      <path d=\"M1 1l4 3.74L9 1\" stroke=\"currentColor\" stroke-width=\"2\" fill=\"none\" fill-rule=\"evenodd\"/>\n    </symbol>\n    <symbol viewBox=\"0 0 9 9\" id=\"icon-tick\">\n      <path d=\"M2.978 9a.998.998 0 0 1-.706-.294L.292 6.728a1 1 0 0 1 1.415-1.414L2.853 6.46 7.188.416a1 1 0 0 1 1.625 1.166l-5.022 7A.994.994 0 0 1 2.978 9\" fill=\"currentColor\" fill-rule=\"evenodd\"/>\n    </symbol>\n    <symbol viewBox=\"0 0 16 16\" id=\"icon-validation-alert\">\n      <circle r=\"8\" cx=\"8\" cy=\"8\" fill=\"currentColor\"></circle>\n      <text \n        text-anchor=\"middle\" \n        x=\"8\" \n        y=\"13\" \n        fill=\"#fff\" \n        style=\"font-size: 13px; font-weight: 700; font-family: 'PT Sans', sans-serif\">!</text>\n    </symbol>\n  </svg>\n  ```\n  \n  You can use this style as follows.\n\n  Example SCSS:\n  ```\n  .yourDropdownClass {\n    @include dropdown(\"standard\", false, true);\n  }\n  ```\n  Example HTML:\n  ```\n    <div class=\"yourDropdownClass\">\n      <label>Some input label</label>\n      <div class=\"dropdown__inner\" id=\"dropdown-container\">\n        <span class=\"dropdown__inner__current-value\" id=\"dropdown-current-value\">Soren Frederiksen</span>\n        <svg \n          viewBox=\"0 0 10 7\" version=\"1.1\" \n          xmlns=\"http://www.w3.org/2000/svg\"\n          class=\"dropdown__inner__carat\">\n          <use \n            xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n            xlink:href=\"#icon-carat\" \n            class=\"dropdown__inner__carat__image\">\n        </svg>\n        <svg \n          viewBox=\"0 0 16 16\" version=\"1.1\" \n          xmlns=\"http://www.w3.org/2000/svg\"\n          class=\"dropdown__inner__error\">\n          <use \n            xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n            xlink:href=\"#icon-validation-alert\" >\n        </svg>\n        <svg \n          viewBox=\"0 0 16 16\" version=\"1.1\" \n          xmlns=\"http://www.w3.org/2000/svg\"\n          class=\"dropdown__inner__error\">\n          <use \n            xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n            xlink:href=\"#icon-validation-alert\" >\n        </svg>\n        <select class=\"dropdown__inner__select\" id=\"dropdown-select-input\">\n          <option value=\"Soren Frederiksen\">Soren Frederiksen</option>\n          <option value=\"Richard Lama\">Richard Lama</option>\n          <option value=\"Reginal Sengkey\">Reginal Sengkey</option>\n        </select>\n        <ul class=\"dropdown__inner__list\" id=\"dropdown-list\">\n          <li value=\"Soren Frederiksen\"\n              class=\"dropdown__inner__list__item is--selected\">\n            Soren Frederiksen\n            <svg \n              viewBox=\"0 0 10 7\" version=\"1.1\" \n              xmlns=\"http://www.w3.org/2000/svg\"\n              class=\"dropdown__inner__list__item__tick\">\n              <use \n                xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n                xlink:href=\"#icon-tick\">\n            </svg>\n          </li>\n          <li value=\"Richard Lama\"\n              class=\"dropdown__inner__list__item\">\n            Richard Lama\n            <svg \n              viewBox=\"0 0 10 7\" version=\"1.1\" \n              xmlns=\"http://www.w3.org/2000/svg\"\n              class=\"dropdown__inner__list__item__tick\">\n              <use \n                xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n                xlink:href=\"#icon-tick\">\n            </svg>\n            </svg>\n          </li>\n          <li value=\"Reginal Sengkey\"\n              class=\"dropdown__inner__list__item\">\n            Reginal Sengkey\n            <svg \n              viewBox=\"0 0 10 7\" version=\"1.1\" \n              xmlns=\"http://www.w3.org/2000/svg\"\n              class=\"dropdown__inner__list__item__tick\">\n              <use \n                xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n                xlink:href=\"#icon-tick\">\n            </svg>\n            </svg>\n          </li>\n          <li value=\"Mark Stehle\"\n              class=\"dropdown__inner__list__item\">\n            Mark Stehle\n            <svg \n              viewBox=\"0 0 10 7\" version=\"1.1\" \n              xmlns=\"http://www.w3.org/2000/svg\"\n              class=\"dropdown__inner__list__item__tick\">\n              <use \n                xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n                xlink:href=\"#icon-tick\">\n            </svg>\n            </svg>\n          </li>\n          <li value=\"Matthew Absalom-Wong\"\n              class=\"dropdown__inner__list__item\">\n            Matthew Absalom-Wong\n            <svg \n              viewBox=\"0 0 10 7\" version=\"1.1\" \n              xmlns=\"http://www.w3.org/2000/svg\"\n              class=\"dropdown__inner__list__item__tick\">\n              <use \n                xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n                xlink:href=\"#icon-tick\">\n            </svg>\n            </svg>\n          </li>\n        </ul>\n      </div>\n      <p class=\"dropdown__error\">\n        You did something wrong.\n      </p>\n    </div>\n  ```\n  In order to work fully (included the custom dropdown list), this mix-in also requires some \n  JavaScript. \n\n  Below is some bare-bones vanilla JavaScript that developers will be able to more eloquently \n  implement using whatever framework or library they're using. In principal, though,\n  this is all you need.\n\n  Example JavaScript:\n  ```\n  var dropdownValueDisplay = document.getElementById('dropdown-current-value');\n  var dropdownSelectInput = document.getElementById('dropdown-select-input');\n  var dropdownContainer = document.getElementById('dropdown-container');\n  var dropdownListItems = dropdownContainer.getElementsByClassName('dropdown__inner__list__item');\n\n  // When the user clicks the dropdown container, show it as selected\n  dropdownContainer.addEventListener('click', function() {\n    dropdownContainer.classList.toggle('is--selected');\n  });\n\n  // When the user click a dropdown list item, select it\n  for (var i = 0; i < dropdownListItems.length; i += 1) {\n    dropdownListItems[i].addEventListener('click', selectDropdownListItem);\n  }\n\n  function selectDropdownListItem(e) {\n\n    var newDropdownValue = e.target.getAttribute('value');\n\n    // Update dropdown value display and input\n    dropdownValueDisplay.innerHTML = newDropdownValue;\n    dropdownSelectInput.value = newDropdownValue;\n\n    // Update dropdown list display (and calculate variables necessary to determine position of\n    // tick)\n    for (var i = 0; i < dropdownListItems.length; i += 1) {\n      if (dropdownListItems[i] !== e.target) {\n        dropdownListItems[i].classList.remove('is--selected');\n      }\n      else {\n        indexOfTargetListItem = i;\n        dropdownListItems[i].classList.add('is--selected');\n      }\n    }\n  }\n  ```\n*/\n/*\n  Dropdown\n\n  @param { Color } color - Colour of the input's text\n  @param { String } border - Border property of input\n  @param { Color } focus-color - Colour of the input's text when in focus state\n  @param { Color } focus-carat-color - Colour of the input's carat when in focus state\n  @param { Color } focus-border - Border property of input when in focus state\n  @param { Number with unit } font-size - Size of the input's text\n  @param { Color } background - Background colour of the input\n  @parma { Color } list-item-color - Color of dropdown list items\n  @parma { Color } selected-list-item-background - Background color signifying selected list item\n  @param { Color } label-color - Color of the input's label\n  @param { Number with unit } label-font-size - Size of the input's label's font\n  @param { Boolean } use-custom-dropdown-list-on-mobile - Boolean indicating whether or not to use \n  the custom dropdown list on mobile, or whether to rely on a device's in-built dropdown\n  @param { Boolean } can-be-invalid - Boolean indicating whether or not include invalid state styles\n*/\n/*\n  Dropdown desktop custom dropdown list styles\n*/\n/*\n  Dropdown\n\n  @param { String } style - String denoting style of dropdown menu\n  @param { Boolean } use-custom-dropdown-list-on-mobile - Boolean indicating whether or not to use \n  the custom dropdown list on mobile, or whether to rely on a device's in-built dropdown\n  @param { Boolean } can-be-invalid - Boolean indicating whether or not include invalid state styles\n*/\n/*\n  Custom dropdown\n\n  @param { Number with unit } font-size - Size of input text (label is sized at 93.75% of this)\n  @param { Color } color - Colour of the input's text\n  @param { Color } background - Colour of input's background\n  @param { Boolean } use-custom-dropdown-list-on-mobile - Boolean indicating whether or not to use \n  the custom dropdown list on mobile, or whether to rely on a device's in-built dropdown\n  @param { Boolean } can-be-invalid - Boolean indicating whether or not include invalid state styles\n  @param { Color } label-color - Colour of the input's label\n  @param { Color } border-color - Colour of the input's border\n  @param { Color } focus-border-color - Colour of the input's border in focus state\n  @param { Color } list-item-color - Colour of the input's list item text\n  @param { Number with unit } list-max-height - Maximum size of the dropdown list\n*/\n/*\n  Scrollbar\n\n  March 1, 2018\n  ask sorenfrederiksen@fairfaxmedia.com.au\n\n  A couple mix-ins that add a custom scrollbar to a scrolling container.\n  \n  You can use this style as follows.\n\n  Example SCSS:\n\n  ```\n  .yourScrollingContainerClass {\n    @include scrollbar(\"standard\");\n  }\n  ```\n\n  Example HTML:\n\n  ```\n  <div class=\"yourScrollingContainerClass\">\n    <!-- Lots of elements -->\n  </div>\n  ```\n*/\n/*\n  Scrollbar\n\n  @param { Number with unit } width - Width of the scrollbar\n  @param { Color } track-color - Color of the scrollbar track\n  @param { Color } thumb-color - Color of the scrollbar thumb (i.e. the movable control in the \n  scrollbar)\n  @param { Number with unit } track-border-radius - Border radius of the scrollbar track\n  @param { Number with unit } thumb-border-radius - Border radius of the scrollbar thumb (i.e. the\n  movable control in the scrollbar)\n  @param { Number with unit } thumb-padding - Gap between the thumb and the track\n*/\n/*\n  Scrollbar\n\n  @param { String } style - String describing the style of the scrollbar\n*/\n/*\n  Custom scrollbar\n\n  @param { Number with unit } width - Width of the scrollbar\n  @param { Color } track-color - Color of the scrollbar track\n  @param { Color } thumb-color - Color of the scrollbar thumb (i.e. the movable control in the \n  scrollbar)\n  @param { Number with unit } track-border-radius - Border radius of the scrollbar track\n  @param { Number with unit } thumb-border-radius - Border radius of the scrollbar thumb (i.e. the\n  movable control in the scrollbar)\n*/\n/*\n  Loader\n\n  January 1, 2017\n  ask sorenfrederiksen@fairfaxmedia.com.au\n\n  A loading indicator featuring a masthead-appropriate logo initial.\n\n  To use this loader style, add this to the top of your HTML document (or add the symbol elements to \n  an existing svg container):\n\n  ```\n  <svg xmlns=\"http://www.w3.org/2000/svg\" style=\"position:absolute; width: 0; height: 0;\">\n    <symbol viewBox=\"0 0 50 60\" id=\"icon-loading-ct\">\n      <path d=\"M18.244 19.205L16.378 20.5l-1.072-1.296L39.152 0c.285 1.58 1.219 6.812 4.092 6.31 2.152-.364 4.166-3.013 5.32-4.73H50c-.65 2.008-1.363 3.79-2.662 5.515-1.293 1.653-2.802 3.014-4.524 4.156-1.29.867-2.298 1.361-3.807 1.79l-.073 34.255c.787-.639 1.51-1.28 2.151-2.073 1.372-1.507 2.38-3.224 3.45-4.876l1.154.428c-1.226 3.37-2.445 6.813-4.669 9.745-2.37 3.085-5.675 6.1-9.273 7.67-2.508 1.151-6.033 1.653-8.76 1.79C12.138 60.418 3.158 53.324.86 42.786A42.985 42.985 0 0 1 0 34.182c.073-4.722 2.014-9.38 4.376-13.397 3.378-5.872 8.842-10.538 15.022-13.471 2.444-1.15 5.31-2.22 8.111-2.22.293 0 .723.066.861.35.073.145-.064.363-.21.363-2.729 1.07-3.306 1.143-5.815 2.795-2.452 1.645-4.815 3.37-6.617 5.662-4.523 5.59-5.886 12.968-5.1 20 .365 3.215 1.438 6.438 3.24 9.16 1.218 1.799 2.801 3.16 4.376 4.52v-28.74zm3.622 29.331c2.444 1.15 4.816 2.3 7.543 2.3 1.73.066 3.662 0 5.318-.648.577-.29 1.143-.712 1.721-1.077l.074-36.977-4.313-3.013-1.217 25.515c-.074 2.51-1.145 4.95-2.37 7.096-1.007 1.725-2.59 3.15-4.094 4.448-.86.72-1.72 1.506-2.662 2.356z\" fill=\"#0A1633\" fill-rule=\"evenodd\"/>\n    </symbol>\n    <symbol viewBox=\"0 0 59 62\" id=\"icon-loading-smh\">\n      <path d=\"M44.28 48.294c-4.229-3.036-9.12-5.265-13.698-6.539l-.124-.041 5.043-7.53c6.429 1.401 10.814 4.95 10.814 8.611 0 1.632-.746 3.81-1.975 5.418l-.06.08zM32.557 23.685c-.886-.123-3.722-.609-4.415-.766-2.306-.477-13.809-3.888-13.809-8.981 0-5.786 7.435-5.786 11.005-5.786.788 0 9.162.732 13.111 6.18-.041.078-4.838 7.711-5.892 9.353zm25.235-7.84l.115-.094c.566-.544 1.093-1.66 1.093-2.327 0-.776-.285-1.484-.799-2-.497-.565-1.268-.885-2.288-.96-.087-.006-.584-.03-.617-.03-2.5.024-5.195 1.598-8.038 4.36-2.497 2.425-3.438 4.221-5.015 6.71-1.28 2.024-1.892 2.98-2.235 3.528-.481-.06-3.38-.518-5.976-1.083.836-1.36 3.303-5.693 6.102-9.745 2.035-2.945 4.496-5.61 5.73-7.129.193-.236.38-.375.605-.502.168-.095.417-.22.5-.315.009-.113-.327-.447-.385-.49-.166.022-.265.06-.405.129-.191.09-.447.215-.801.215-.451 0-.916-.384-1.761-1.083C41.495 3.27 37.543.012 30.598 0 18.702-.018 11.679 10.125 11.767 16.839c.055 4.183.854 8.78 2.94 10.712 2.128 1.97 5.712 3.41 11.98 4.9l.421.11-1.005 1.117c-1.649 1.405-2.834 2.755-5.925 2.831-1.955 0-2.866-.669-3.566-1.296l-.147.062c.163.329.59 1.063 1.14 1.739.704.857 1.35 1.306 1.93 1.336.095.025.914.234 2.238-.179 1.71-.534 3.556-1.817 5.338-3.824l.688-.771.69-.769 4.475.799c.511.116 1.015.173 1.457.303l-1.843 2.806c-2.325 3.51-3.214 4.605-3.214 4.605s-1.551-.224-1.96-.303c-1.276-.255-3.283-.382-6.06-.359-5.432-.05-12.938 1.959-17.463 6.469a13.529 13.529 0 0 0-2.288 2.996A11.737 11.737 0 0 0 0 56.078C0 58.81 1.798 62 6.876 62c6.794 0 12.706-6.42 15.824-9.872l.5-.556c.928-1.019 1.353-1.732 1.692-2.095 3.593.995 9.43 3.433 14.54 6.786 1.038-1.058 4.088-4.69 6.947-8.944 1.568-2.334 5.184-7.758 5.313-11.921.126-3.987-3.603-8.775-10.497-10.197.221-.458.633-1.162 1.667-2.762 2.834-4.392 5.39-8.96 10.78-8.96.964 0 2.969.22 4.055 2.24.032.046.05.076.095.127zM17.445 55.863c-1.312 1.119-2.63 2.065-3.922 2.816-1.358.747-2.686 1.296-4.021 1.63a11.6 11.6 0 0 1-2.799.38c-.256 0-.516-.015-.822-.042-2.755-.271-4.47-1.906-4.47-4.277 0-6.279 10.526-8.23 14.361-8.23l.808-.005c1.756-.014 2.985.111 6.431.806l.723.192a46.746 46.746 0 0 1-5.011 5.552c-.435.407-.84.806-1.278 1.178z\" fill=\"#0A1633\" fill-rule=\"evenodd\"/>\n    </symbol>\n    <symbol viewBox=\"0 0 60 41\" id=\"icon-loading-watoday\">\n      <path d=\"M29.974 11.33h-.334c-.611 1.626-10.344 27.707-10.566 28.269-.22.618-.5 1.401-1.389 1.401-.611 0-.946-.449-1.167-1.12L4.007 4.318C3.45 2.746 2.448 2.297 1.725 2.297H.335C.055 2.297 0 2.074 0 1.85V.392C0 .112.056 0 .445 0c.445 0 2.17.166 7.897.166C12.347.166 14.624 0 15.18 0c.389 0 .446.166.446.447V1.85c0 .28-.057.447-.446.447h-1.223c-.89 0-1.446.788-1.112 1.91l7.62 24.453h.331c.668-1.906 7.34-19.744 7.34-21.763 0-1.403-.556-2.86-1.053-3.53-.502-.675-1.225-1.07-1.67-1.07h-1.112c-.279 0-.335-.113-.335-.447V.392c0-.226.056-.392.39-.392.502 0 2.449.166 7.34.166 4.67 0 6.784-.166 7.34-.166.334 0 .386.166.386.502v1.403c0 .224-.052.392-.385.392h-1.67c-.889 0-1.39 1.235-1.11 2.189l7.673 24.174h.333c2.728-7.627 7.564-21.874 7.564-24.904 0-.617-.723-1.459-1.78-1.459h-1.612c-.335 0-.392-.168-.392-.504v-1.4c0-.227.057-.393.446-.393.555 0 2.504.166 5.95.166C57.555.166 59.167 0 59.61 0c.336 0 .389.111.389.502v1.403c0 .224 0 .392-.389.392h-1.054c-.946 0-2.058.62-2.614 2.02-.668 1.796-11.846 32.252-12.958 34.946-.277.673-.667 1.737-1.669 1.737-.779 0-1.11-.728-1.389-1.51l-9.953-28.16\" fill=\"#0A1633\" fill-rule=\"evenodd\"/>\n    </symbol>\n    <symbol viewBox=\"0 0 61 56\" id=\"icon-loading-theage\">\n      <path d=\"M55.49 51.65a76.398 76.398 0 0 1-3.368-6.912L32.98 0h-4.86L16.7 28.195c-1.56 3.883-9.118 21.282-10.102 23.07-1.2 2.15-2.076 1.862-6.598 2.25V56c1.642-.077 6.268-.232 9.143-.232 2.547 0 5.093.155 7.394.232v-2.486c-6.16-.077-6.736-.387-6.736-1.24 0-.312.33-1.244.74-2.332l4.503-11.435c.494-1.165.741-1.398 1.808-1.398h18.65c1.481 0 1.645 0 2.137 1.165l4.953 12.367c.328.776.575 1.475.575 1.941 0 .39-.575.778-7.394.932V56c6.407-.154 9.2-.232 12.242-.232 4.435 0 9.37.078 12.985.232v-2.64c-3.184 0-4.771-.388-5.51-1.71zM35.61 34.391c0 .233-.411.466-.984.544H18.151c-1.151 0-1.48-.233-1.48-.466s.166-.544.329-1.088l8.973-22.253c.246-.466.33-.854.494-.854.162 0 .41.388.493.7l.047.116 8.274 22.291c.245.622.328.777.328 1.01z\" fill=\"#0A1633\" fill-rule=\"evenodd\"/>\n    </symbol>\n    <symbol viewBox=\"0 0 47 62\" id=\"icon-loading-bt\">\n      <path d=\"M25.33 53.374c-3.825 0-7.729-1.627-10.519-5.29V33.278c2.312-4.556 6.774-6.51 10.678-6.51 7.17 0 11.712 6.349 11.712 13.183 0 6.427-3.824 13.424-11.872 13.424m1.99-35.23c-4.38 0-9.479 1.79-12.508 5.776V0H0v8.782l5.172.34v51.9h8.764l.48-4.882C17.44 60.21 22.698 62 27.162 62 38.873 62 47 51.666 47 40.193c0-12.285-8.445-22.048-19.68-22.048\" fill=\"#0A1633\" fill-rule=\"evenodd\"/>\n    </symbol>\n  </svg>\n  ```\n  You can then use the button style as follows.\n\n  Your SCSS:\n  ```\n  .elementContainingYourLoaderClass {\n    position: relative;\n  }\n\n  .yourLoaderClass {\n    @include loader(\"standard\");\n  }\n  ```\n  Your HTML:\n  ```\n  <div class=\"yourLoaderClass\">\n    <div class=\"loader-icon\">\n      <div class=\"loader-icon__borders-container\">\n        <div class=\"loader-icon__borders-container__borders\"></div>   \n      </div>\n      <svg \n        viewBox=\"0 0 60 60\" version=\"1.1\" \n        xmlns=\"http://www.w3.org/2000/svg\"\n        class=\"loader-icon__svg\">\n        <use \n          xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n          xlink:href=\"#icon-loading-smh\" \n          class=\"loader-icon__svg__image\" >\n      </svg>\n    </div>\n    <p class=\"loader-message\">\n      Some default message.\n    </p>\n    <div class=\"loader-retry\">\n      <button class=\"loader-retry__button\">\n        Try again\n      </button>\n    </div>\n  </div>\n\n  ```\n*/\n/*\n  Loader\n\n  @param { Number with unit } icon-side-length - Length of the side of the loading icon to be displayed\n  @param { Color } icon-color - Color of the loading icon\n  @param { Color } inner-border-color - Color of the inner spinning border\n  @param { Color } outer-border-color - Color of the outer spinning border\n  @param { color } text-color - Color of the loading text\n*/\n/*\n  Loader\n\n  @param { String } style - String describing style of loader.\n*/\n/*\n  Loader container\n*/\n/*\n  Drop-cap\n\n  February 6, 2017\n  ask sorenfrederiksen@fairfaxmedia.com.au\n\n  A large capital letter used to start a section of a feature article.\n  \n  With the above in your HTML document, you can use this style as follows.\n\n  Your SCSS:\n\n  ```\n  .yourDropCapClass {\n    @include drop-cap(1rem);\n  }\n  ```\n\n  Your HTML:\n  ```\n  <p>\n    <span class=\"yourDropCapClass\">T</span>here are about 17,000 rips at beaches around Australia \n    on any given day. Chances are that – unless you’re a skilled surf lifesaver or an extremely \n    experienced surfer – you’d prefer not to be dicing with them.\n  </p>\n  ```\n*/\n/*\n  Drop cap\n\n  @param { Number with unit } normal-font-size - Size of most of the text in the drop-cap's \n  section\n*/\n/*\n  Fancy radio\n\n  April 9, 2018\n  ask sorenfrederiksen@fairfaxmedia.com.au\n\n  A pair of mix-ins to help users implement tab-like 'fancy' radio buttons.\n\n  All mix-ins result in radio button collections that can signify the buttons are deactivated (apply \n  the '.is--deactivated' class).\n\n  You can use this style as follows.\n\n  Example SCSS:\n  ```\n  .yourFancyRadioClass {\n    @include fancy-radio('standard');\n  }\n  ```\n\n  Example HTML:\n  ```\n  <div class=\"fancy-radio\">\n    <p>\n      Options label\n    </p>\n    <div>\n      <input \n        type=\"radio\" \n        name=\"options\" \n        id=\"option-1\"\n        value=\"option-1\"\n        checked>\n      <label \n        for=\"option-1\">\n        Option 1\n      </label>\n      <input \n        type=\"radio\" \n        name=\"options\" \n        id=\"option-2\"\n        value=\"option-2\">\n      <label \n        for=\"option-2\">\n        Option 2\n      </label>\n      <input \n        type=\"radio\" \n        name=\"options\" \n        id=\"option-3\"\n        value=\"option-3\">\n      <label \n        for=\"option-3\">\n        Option 3\n      </label>\n      <input \n        type=\"radio\" \n        name=\"options\" \n        id=\"option-4\"\n        value=\"option-4\">\n      <label \n        for=\"option-4\">\n        Option 4\n      </label>\n      <input \n        type=\"radio\" \n        name=\"options\" \n        id=\"option-5\"\n        value=\"option-5\">\n      <label \n        for=\"option-5\">\n        Option 5\n      </label>\n    </div>\n  </div>\n  ```\n*/\n/*\n  Fancy radio\n\n  @param { Color } color - Colour of the radio buttons' text\n  @param { Color } checked-color - Colour of the radio buttons' text when they are checked\n  @param { Color } background - Background colour of the radio buttons\n  @param { Color } checked-background - Background colour of the radio buttons when they are checked\n  @param { Color } hover-background - Background colour of the radio buttons when they are checked\n  @param { String } internal-border - Border between the radio buttons\n  @param { String } external-border - Border surrounding the collection of radio buttons\n  @param { Number with unit } font-size - Size of the radio buttons' text\n  @param { Color } label-color - Colour of the radio button group's label's text\n*/\n/*\n  Fancy radio\n\n  @param { String } style - String denoting style of fancy radio (e.g. 'standard', 'standard--dark')\n*/\n/*\n  Custom fancy radio\n\n  @param { Number with unit } font-size - Size of the radio buttons' text\n  @param { Color } color - Colour of the radio buttons' text\n  @param { Color } checked-color - Colour of the radio buttons' text when they are checked\n  @param { Color } background - Background colour of the radio buttons\n  @param { Color } checked-background - Background colour of the radio buttons when they are checked\n  @param { Color } hover-background - Background colour of the radio buttons when they are checked\n  @param { String } internal-border - Border between the radio buttons\n  @param { String } external-border - Border surrounding the collection of radio buttons\n  @param { Color } label-color - Colour of the radio button group's label's text\n*/\n/*\n  State rules are ways to describe how our modules or layouts will look when in a particular state. \n  Is it hidden or expanded? Is it active or inactive? They are about describing how a module or \n  layout looks on screens that are smaller or bigger. They are also about describing how a module \n  might look in different views like the home page or the inside page.\n*/\n.article-section {\n  width: 100%;\n  padding: 2rem 0; }\n  .article-section em {\n    font-style: italic; }\n  .article-section strong {\n    font-weight: 700; }\n\n.article-section__header,\n.article-section__super-subsection,\n.article-section__subsection {\n  margin: 0 auto;\n  padding: 0 20px;\n  position: relative; }\n\n.article-section__super-subsection .drop-cap,\n.article-section__subsection .drop-cap {\n  font-family: 'PT Serif', Georgia, Times, 'Times New Roman', serif;\n  font-size: 68.8px;\n  font-size: 4.3rem;\n  line-height: 2.8rem;\n  display: block;\n  margin: 8px 8px 0 0;\n  float: left; }\n  @media only screen and (min-width: 600px) {\n    .article-section__super-subsection .drop-cap,\n    .article-section__subsection .drop-cap {\n      margin: 12px 8px 0 0; } }\n\n.article-section__header {\n  margin-bottom: 16px; }\n  .article-section__header.is--centered {\n    text-align: center; }\n\n.article-section__subsection__social {\n  list-style: none;\n  width: 32px;\n  padding: 8px 0;\n  display: none;\n  position: absolute;\n  top: 0px;\n  left: -56px; }\n\n.article-section__subsection__social__button {\n  font-size: 16px;\n  font-size: 1rem;\n  line-height: 1;\n  display: inline-block;\n  padding: 7px 8px;\n  cursor: pointer;\n  margin: 0 auto; }\n  .article-section__subsection__social__button a {\n    color: #0a1633; }\n  .article-section__subsection__social__button span {\n    position: absolute;\n    overflow: hidden;\n    clip: rect(1px, 1px, 1px, 1px);\n    width: 1px;\n    height: 1px;\n    padding: 0;\n    white-space: nowrap;\n    border: 0; }\n  .article-section__subsection__social__button:not(:first-child) {\n    margin-left: 8px; }\n  .article-section__subsection__social__button:hover a, .article-section__subsection__social__button:focus a {\n    color: #096dd2; }\n  .article-section__subsection__social__button:not(:first-child) {\n    margin: 8px auto 0 auto; }\n\n.article-section__subsection__introduction {\n  font-family: 'PT Sans', 'Trebuchet MS', 'Arial Narrow', sans-serif;\n  font-size: 16px;\n  line-height: 1.25; }\n\n.calculations ul {\n  list-style: disc;\n  list-style-position: outside;\n  padding-left: 20px; }\n\n@media only screen and (min-width: 600px) {\n  .article-section {\n    width: 100%;\n    padding: 3rem 0; }\n  .article-section__header,\n  .article-section__subsection {\n    max-width: 640px; }\n  .article-section__super-subsection {\n    max-width: 980px; } }\n\n@media only screen and (min-width: 768px) {\n  .article-section__subsection__social {\n    display: block; }\n  .social-button__whatsapp {\n    display: none; } }\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/components/App/ArticleSection.css","@charset \"UTF-8\";\n/*\n  Fairfax Presentation Styles\n\n  ask sorenfrederiksen@fairfaxmedia.com.au\n\n  This file binds together the various components of the Fairfax Presentation Styles library. \n\n  To use this file in a project, include it like so:\n\n  .../ css\n      - main.scss <- File imports '_ffx-prez-styles.scss', e.g. @import 'libs/_ffx-prez-styles.scss' \n      - main.css  <- Main file above compiles to this\n  ..../ lib\n        - '_ffx-prez-styles.scss'\n        - etc.\n\n  See 'https://smacss.com/book/categorizing' for more on the system used to categorise the styling\n  rules included.\n*/\n/* \n  Base rules are the defaults. They are almost exclusively single element selectors (e.g. 'p', 'a',\n  'input', rather than class selectors, etc.) but base rules could include attribute selectors, \n  pseudo-class selectors, child selectors or sibling selectors.\n\n  We also use 'Base' to include variables broadly depended on by many other styles (e.g. colours,\n  font and text styles).\n*/\n/*\n  Reset\n\n  Fairfax styles reset from 'prez-library-react-shared-components':\n\n  https://bitbucket.org/sorenfrederiksenffx/prez-library-react-shared-components\n\n  October 24, 2017\n  ask sorenfrederiksen@fairfaxmedia.com.au\n*/\n/*\n  Convert between variable types\n\n  These functions are used to convert between variable types.\n\n  Adapted from: https://codepen.io/jakob-e/pen/AHunv\n*/\n/*\n  To string\n*/\n/*\n  To number\n*/\n/*\n  To integer\n*/\n/*\n  To U-integer\n*/\n/*\n  Convert between unit types\n\n  These functions are used to convert unit values from one unit type to another.\n\n  Adapted from: https://codepen.io/jakob-e/pen/AHunv\n*/\n/*\n  To unit\n\n  @param { String } unit - String denoting unit type (e.g. 'px')\n  @param { Number } input - Number with unit suffix (if it has one, e.g. '10em')\n  @returns { Number } - Number of denoted unit, if a conversion is possible (e.g. '10em' to 'em'\n  results in '100px')\n*/\n/*\n  To line height\n\n  Function takes a font size and returns an appropriate line-height.\n\n  @param { Number } font-size - Number (potentially with unit) denoting size of font\n  @param { Number } line-height - Number (potentially with unit) denoting line height desired\n*/\n/*\n  Colors\n\n  November 9, 2017\n  ask sorenfrederiksen@fairfaxmedia.com.au\n*/\n/*\n  Real color names\n*/\n/*\n  Descriptive color names\n*/\n/*\n  Functional color names\n*/\n/*\n  Colours - Australian politics\n\n  November 9, 2017\n  ask sorenfrederiksen@fairfaxmedia.comau\n*/\n/*\n  Colors - Charts\n\n  January 1, 2017\n  Ask sorenfrederiksen@fairfaxmedia.com.au\n\n  Colors for use in data visualisations. These and other styles are documented here:\n\n  https://ffxblue.atlassian.net/wiki/spaces/PROD/pages/32577164/Infogram+Style\n*/\n/*\n  Fonts\n\n  The file assumes it will be compiled to a CSS file that sits like so in the project's directory \n  hierarchy:\n\n  main.css\n  .. / assets\n  .. .. / fonts\n  .. .. .. / abril-titling\n  .. .. .. .. / AbrilTitling-Semibold.woff\n  .. .. .. .. / AbrilTitling-Semibold.woff2\n  .. .. .. / pt-sans\n  .. .. .. .. / PTSans-Regular.woff\n  .. .. .. .. / PTSans-Regular.woff2\n  .. .. .. .. / PTSans-Bold.woff\n  .. .. .. .. / PTSans-Bold.woff2\n  .. .. .. / pt-serif\n  .. .. .. .. / PTSerif-Regular.woff\n  .. .. .. .. / PTSerif-Regular.woff2\n  .. .. .. .. / PTSerif-Bold.woff\n  .. .. .. .. / PTSerif-Bold.woff2\n*/\n/*\n  Type\n\n  Standard and other type styles.\n\n  October 24, 2017\n  ask sorenfrederiksen@fairfaxmedia.com.au\n*/\n/*\n  These mix-ins are not used in the main, public 'standard-typography' mix-in, because they would \n  burden projects with bulkier styles expressed in long- rather than the short-form of that main \n  mix-in.\n\n  (As in, if we're assuming the user wants to apply all standard typographic styles, we can apply\n  styles to 'h1, h2, h3, h4, h5' all at once, saving many lines of code. Without that assumption,\n  we have to repeat our styles for each individual type of heading element.)\n\n  Individual typographical mix-ins are provided only for 'h1', 'h2', 'h3' and 'p' elements, as these\n  are considered most likely to prove of use.\n\n  The utility of all of these mix-ins is debatable, and subject to future consideration.\n*/\n/*\n  Standard typography - h1\n*/\n/*\n  Standard typography - h2\n*/\n/*\n  Standard typography - h3\n*/\n/*\n  Standard typography - p\n*/\n/*\n  Standard typography\n*/\n/*\n  Animations\n\n  January 1, 2018\n  ask sorenfrederiksen@fairfaxmedia.com.au\n*/\n@-webkit-keyframes spin {\n  100% {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg); } }\n@keyframes spin {\n  100% {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg); } }\n\n/*\n  Break point\n\n  Mix-in used to create standard Fairfax breakpoints.\n\n  These mix-ins can be used like so:\n\n  @includes('only', 'small') {\n    \n    .someMobileStyle {\n      color: red;\n    }\n\n    // ... other styles that will only show within the 'small' break-point bracket\n  }\n\n  See the 'Media Queries' section of this for a deeper explanation of how these work:\n  https://robots.thoughtbot.com/sasss-content-directive\n\n  @param { String } type - String denoting type of break-point to be created\n  @param { String } size - String denoting size of break-point to be created\n*/\n/* \n  Layout rules divide the page into sections. Layouts hold one or more modules together.\n*/\n/*\n  Embedded interactive\n\n  January 1, 2017\n  ask sorenfrederiksen@fairfaxmedia.com.au\n\n  Default styles for element containing embedded interactive.\n\n  Your SCSS:\n\n  ```\n  .yourEmbeddedInteractiveContainerClass {\n    @include embedded-interactive;\n  }\n  ```\n\n  Your HTML:\n\n  ```\n  <div class=\"yourEmbeddedInteractiveContainerClass\">\n    <!-- Your application -->\n  </div>\n  ```\n*/\n/*\n  Feature article header\n\n  November 7, 2017\n  ask sorenfrederiksen@fairfaxmedia.com.au\n\n  A mix-in that styles a container and its contents to become the header section of a long-form\n  feature article, including the article's header, subtitle, author credits, date and header\n  sharing buttons.\n\n  Your SCSS:\n\n  ```\n  // The class of your feature article header\n  .yourFeatureArticleHeaderClass {\n    @include feature-article-header(\"standard\", true, false);\n  }\n  ```\n\n  If you're using the `standard-typography` mix-in elsewhere in your style-sheet, you can set that\n  last variable - the `false` - to `true`. When set to `true`, that parameter will make the\n  `feature-article-header` mix-in assume that `standard-typography` is active, and so rely on\n  styles associated with that mix-in, resulting in less-bloated styles.\n\n  For example: \n\n  ```\n  // The class of your feature article header\n  .yourFeatureArticleHeaderClass {\n    @include feature-article-header(\"standard\", true, true);\n  }\n  ```\n\n  Your HTML:\n  ```\n  <header class=\"yourFeatureArticleHeaderClass\">\n\n    <p class=\"feature-article-header__topic\">\n      <a href=\"/national\">Your feature article's topic</a>\n    </p>\n    \n    <h1 class=\"feature-article-header__title\">\n      Your feature article title here\n    </h1>\n\n    <div class=\"feature-article-header__break\"></div>\n\n    <!-- Article header social media sharing buttons -->\n    <ul class=\"feature-article-header__social\">\n      <li class=\"feature-article-header__social__button social-button__facebook\">\n        <a href=\"javascript:void(0);\">\n          <span>Share on Facebook</span>\n          <svg height=\"1em\" width=\"1em\" aria-hidden=\"true\" focusable=\"false\">\n            <use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#icon-facebook\"></use>\n          </svg>\n        </a>\n      </li>\n      <li class=\"feature-article-header__social__button social-button__twitter\">\n        <a href=\"javascript:void(0);\">\n          <span>Share on Twitter</span>\n          <svg height=\"1em\" width=\"1em\" aria-hidden=\"true\" focusable=\"false\">\n            <use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#icon-twitter\"></use>\n          </svg>\n        </a>\n      </li>\n      <li class=\"feature-article-header__social__button social-button__whatsapp\">\n        <a href=\"javascript:void(0);\">\n          <span>Share on WhatsApp</span>\n          <svg height=\"1em\" width=\"1em\" aria-hidden=\"true\" focusable=\"false\">\n            <use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#icon-whatsapp\"></use>\n          </svg>\n        </a>\n      </li>\n      <li class=\"feature-article-header__social__button social-button__email\">\n        <a href=\"javascript:void(0);\">\n          <span>Share on Email</span>\n          <svg height=\"1em\" width=\"1em\" aria-hidden=\"true\" focusable=\"false\">\n            <use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#icon-email\"></use>\n          </svg>\n        </a>\n      </li>\n    </ul>\n\n    <p class=\"feature-article-header__subtitle\">\n      Here, you'll input a subtitle of around a sentence in length, usually running over two lines..\n    </p>\n\n    <p class=\"feature-article-header__author\">\n      by Soren Frederiksen &amp; Donald Trump\n    </p>\n\n    <p class=\"feature-article-header__date\">\n      February 6, 2018\n    </p>\n\n  </header>\n  ```\n*/\n/*\n  Feature article header\n\n  @param { Color } title-color - Colour used to colour the feature header's title\n  @param { Color } subtitle-color - Colour used to colour the feature header's subtitle\n  @param { Color } topic-color - Colour used to colour the feature header's topic\n  @param { Color } break-color - Colour used to colour the feature header's break between its title,\n  subtitle and other elements\n  @param { Color } author-and-date-color - Colour used to colour the feature header's author and\n  date elements\n  @param { Color } social-button-color - Colour used to colour the feature header's social buttons\n  @param { Boolean } sharing-only-on-mobile - Boolean denoting whether or not feature article header\n  sharing buttons wills be shown on devices larger than mobile\n  @param { Boolean } standard-typography-in-us - Boolean indicating whether or not the \n  'standard-typography' mix-in is in use elsewhere in this style-sheet\n*/\n/*\n  Feature article header\n\n  @param { String } style - String describing style of feature article header (e.g. 'standard' or\n  'standard--dark')\n  @param { Boolean } sharing-only-on-mobile - Boolean denoting whether or not feature article header\n  sharing buttons wills be shown on devices larger than mobile\n  @param { Boolean } standard-typography-in-us - Boolean indicating whether or not the \n  'standard-typography' mix-in is in use elsewhere in this style-sheet\n*/\n/*\n  Custom feature article header\n\n  @param { Color } title-color - Colour used to colour the feature header's title\n  @param { Color } subtitle-color - Colour used to colour the feature header's subtitle\n  @param { Color } topic-color - Colour used to colour the feature header's topic\n  @param { Color } break-color - Colour used to colour the feature header's break between its title,\n  subtitle and other elements\n  @param { Color } author-and-date-color - Colour used to colour the feature header's author and\n  date elements\n  @param { Color } social-button-color - Colour used to colour the feature header's social buttons\n  @param { Boolean } sharing-only-on-mobile - Boolean denoting whether or not feature article header\n  sharing buttons wills be shown on devices larger than mobile\n  @param { Boolean } standard-typography-in-us - Boolean indicating whether or not the \n  'standard-typography' mix-in is in use elsewhere in this style-sheet\n*/\n/*\n  Modules are the reusable, modular parts of our design.\n*/\n/*\n  Sports team icon\n\n  The file assumes it will be compiled to a CSS file that sits like so in the project's directory \n  hierarchy:\n\n  main.css\n  .. / libs\n  .. .. / ffx-prez-styles\n  .. .. .. / assets\n  .. .. .. .. / images\n  .. .. .. .. / logos\n  .. .. .. .. .. / sport\n  .. .. .. .. .. .. / mc-team-logos$2x.png\n*/\n/*\n  Sports team icon\n\n  @param { Number with unit } side-length - Figure with unit that determines width and height of icon\n  @param { String } league - String denoting which set of icons to include in icon style\n*/\n/*\n  Button\n\n  October 20, 2017\n  ask sorenfrederiksen@fairfaxmedia.com.au\n\n  A series of mix-ins to help developers hastily apply standard button styles.\n\n  Users are encouraged to stick to the standard button mixin ('button'), except where a given color\n  scheme demands a change (use 'button--custom') or the function of the button necessitates one \n  (e.g. where the button deletes things, use 'button--destructive').\n\n  All mix-ins result in buttons that can be made to appear deactivated (apply the '.is--deactivated'\n  class to your button) or to signify the application is in the midst of loading (apply the \n  '.is--loading' class). The latter requires the inclusion of the SVG element include in the example\n  HTML below.\n\n  To use this button style, add this to the top of your HTML document (or add the symbol elements to \n  an existing svg container):\n\n  ```\n  <svg xmlns=\"http://www.w3.org/2000/svg\" style=\"position:absolute; width: 0; height: 0;\">\n    <symbol viewBox=\"0 0 40 40\" id=\"icon-loading\">\n      <circle class=\"loading__icon__circle\" opacity=\"0\" cx=\"15.8\" cy=\"15\" r=\"15\"></circle>\n      <path d=\"M27.8084006,22.8842813 C29.5771785,20.6011257 30.6299412,17.7353365 \n               30.6299412,14.6236613 C30.6299412,9.67647577 27.9688583,5.35081946 \n               24,3\" class=\"loading__icon__active-segment\"></path>  \n    </symbol>\n  </svg>\n  ```\n\n  You can then use the button style as follows.\n\n  Your SCSS:\n\n  ```\n  .yourButtonClass {\n    @include button(\"medium\", \"dynamic\", \"solid\");\n  } \n\n  // ... or ...\n\n  .yourCustomButtonClass {\n    @include button--custom(#fff, red, \"1px solid red\", \"large\", \"dynamic\", \"red\");\n  }\n\n  // ... or ...\n\n  .yourDestructiveButtonClass {\n    @include button--destructive(\"large\", \"fixed\", \"solid--reversed\");\n  }\n  ```\n  Your HTML:\n\n  ```\n  <button class=\"yourButtonClass\">\n    <span>A long button</span>\n    <svg viewBox=\"0 0 40 40\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" \n         xmlns:xlink=\"http://www.w3.org/1999/xlink\" stroke=\"#096DD2\" \n         stroke-width=\"3\" fill=\"transparent\" class=\"button-loading\">\n      <use \n        xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n        xlink:href=\"#icon-loading\" \n        class=\"button-loading__icon\" \n        transform=\"translate(6.5 6.5)\">\n    </svg>\n  </button>\n  ```\n*/\n/*\n  Button\n\n  @param { Color } bg - Color for the button's background\n  @param { Color } hover-bg - Color for the button's background when user hovers over it\n  @param { Color } active-bg - Color for the button's background when the user clicks or taps it\n  @param { Color } color - Color for button's text\n  @param { Color } hover-color - Color for button's text when user hovers over it\n  @param { Color } active-color - Color for button's text when user clicks or taps it\n  @param { String } size - String denoting size of button (e.g. 'small', 'medium', 'large')\n  @param { String } size-rules - String denoting rules of how button will be sized ('fixed' or \n  'dynamic')\n  @param { Color } outline - Color of button's outline when it is clicked \n  @param { Boolean } can-load - Boolean indicating whether button can enter the loading state\n*/\n/*\n  Button deactivated\n*/\n/*\n  Button loading\n*/\n@-webkit-keyframes loading-icon-spin {\n  100% {\n    -webkit-transform: translateX(-50%) translateY(-50%) rotate(360deg);\n            transform: translateX(-50%) translateY(-50%) rotate(360deg); } }\n@keyframes loading-icon-spin {\n  100% {\n    -webkit-transform: translateX(-50%) translateY(-50%) rotate(360deg);\n            transform: translateX(-50%) translateY(-50%) rotate(360deg); } }\n\n/*\n  Button\n  \n  @param { String } size - String describing size of button (e.g. 'small', 'medium', 'large')\n  @param { String } size-rules - String describing rules determining size of button (e.g. 'fixed' or\n  'dynamic')\n  @param { String } style - String describing style of button (e.g. 'solid', 'solid--reversed', \n  'hollow' or 'hollow--reversed')\n  @param { Boolean } can-load - Boolean indicating whether button can enter the loading state\n*/\n/*\n  Custom button\n\n  @param { Color } custom-background - Colour for the background of the button\n  @param { Color } custom-color - Colour for the text of the button\n  @param { String } custom-border - Short-form border property for the button (e.g. '1px solid red')\n  @param { String } size - String describing size of button (e.g. 'small', 'medium', 'large')\n  @param { String } size-rules - String describing rules determining size of button (e.g. 'fixed' or\n  'dynamic')\n  @param { Color } custom-outline - Colour for the outline (shown on click) of the button\n  @param { Boolean } can-load - Boolean indicating whether button can enter the loading state\n*/\n/*\n  Destructive button\n\n  @param { String } size - String describing size of button (e.g. 'small', 'medium', 'large')\n  @param { String } size-rules - String describing rules determining size of button (e.g. 'fixed' or\n  'dynamic')\n  @param { String } style - String describing style of button (e.g. 'solid' or 'solid--reversed')\n*/\n/*\n  Social button\n\n  October 24, 2017\n  ask sorenfrederiksen@fairfaxmedia.com.au\n\n  A mix-in to facilitate the use of standard social media sharing buttons, including those for \n  Facebook, Twitter, Instagram, WhatsApp, Google Plus and Email.\n\n  To use social buttons, add this to the top of your HTML document (or add the symbol elements to \n  an existing svg container):\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" style=\"position:absolute; width: 0; height: 0;\">\n      <symbol viewBox=\"0 0 32 32\" id=\"icon-twitter\">\n        <path d=\"M32 6.371c-1.16.525-2.139.542-3.177.023 1.34-.811 1.4-1.38 1.884-2.916a12.91 12.91 0 0 1-4.115 1.596A6.431 6.431 0 0 0 21.864 3c-3.578 0-6.479 2.94-6.479 6.564 0 .515.058 1.016.167 1.496C10.167 10.787 5.394 8.173 2.2 4.2a6.612 6.612 0 0 0-.879 3.302 6.584 6.584 0 0 0 2.883 5.463 6.402 6.402 0 0 1-2.934-.82l-.001.082c0 3.18 2.234 5.833 5.198 6.437a6.43 6.43 0 0 1-2.927.112c.825 2.607 3.218 4.505 6.052 4.559A12.903 12.903 0 0 1 0 26.052 18.167 18.167 0 0 0 9.93 29c11.919 0 18.433-10.001 18.433-18.675 0-.286-.004-.566-.017-.85C29.61 8.551 31.132 7.69 32 6.371\" fill=\"currentColor\" fill-rule=\"evenodd\"></path>\n      </symbol>\n      <symbol viewBox=\"0 0 32 32\" id=\"icon-email\">\n        <g fill=\"currentColor\" fill-rule=\"evenodd\">\n          <path d=\"M16.086 17.334L30.627 6.502A3.267 3.267 0 0 0 28.885 6h-25.6c-.621 0-1.194.177-1.685.47l14.486 10.864z\"></path>\n          <path d=\"M16.464 18.857a.805.805 0 0 1-.931-.002L.413 7.538C.158 7.98 0 8.478 0 9.018v13.847c0 1.695 1.435 3.077 3.2 3.077h25.6c1.765 0 3.2-1.382 3.2-3.077V9.018c0-.518-.147-1-.382-1.429L16.464 18.857z\"></path>\n        </g>\n      </symbol>\n      <symbol viewBox=\"0 0 32 32\" id=\"icon-whatsapp\">\n        <path d=\"M22.189 24.818c-.856.078-.856.701-5.6-1.165-4.74-1.868-7.733-6.732-7.967-7.044-2.187-2.91-2.762-5.991-.273-8.715.79-.86 2.748-.824 3.19.235.387.934 1.32 3.229 1.438 3.462.117.235.194.507.037.817-.186.375-.38.814-1.166 1.596-.233.233-.475.484-.203.95.272.468 1.206 1.995 2.594 3.231 1.782 1.59 3.284 2.081 3.75 2.315.467.233.74.195 1.012-.117.271-.313 1.167-1.362 1.476-1.829.312-.467.624-.388 1.05-.233.428.155 2.72 1.283 3.188 1.518.466.23.778.35.895.544.701 1.177-.963 4.212-3.421 4.435M16 0C7.178 0 0 7.177 0 16c0 3.5 1.133 6.744 3.048 9.38L1.05 31.324l6.149-1.97A15.897 15.897 0 0 0 16 32c8.821 0 16-7.177 16-16 0-8.822-7.178-16-16-16\" fill=\"currentColor\" fill-rule=\"evenodd\"></path>\n      </symbol>\n      <symbol viewBox=\"0 0 32 32\" id=\"icon-facebook\">\n        <path d=\"M18.7 17.4h5.1l.7-5.6h-5.8V8.1c0-1.6.5-2.7 2.8-2.7h3V.2c-.5 0-2.3-.2-4.4-.2-4.4 0-7.9 2.7-7.9 7.7v4.1H7.6v5.6h4.6V32h6.5V17.4z\" fill=\"currentColor\"></path>\n      </symbol>\n      <symbol viewBox=\"0 0 32 32\" id=\"icon-google\">\n        <path d=\"M28.6 14.6v-3.4H26v3.4h-3.4v2.6H26v3.4h2.6v-3.4H32v-2.6zm-8-.6a8.2 8.2 0 0 1 .2 2.2c0 5.9-4 10.3-10.2 10.3A10.65 10.65 0 0 1 0 16 10.65 10.65 0 0 1 10.6 5.5a10.48 10.48 0 0 1 7.2 2.8l-3 3A6.38 6.38 0 0 0 4.2 16a6.24 6.24 0 0 0 6.4 6.3c3.2 0 5.4-1.8 5.8-4.3h-5.8v-3.9l10-.1z\" fill=\"currentColor\" fill-rule=\"evenodd\"></path>\n      </symbol>\n      <symbol viewBox=\"0 0 32 32\" id=\"icon-instagram\">\n        <g stroke=\"currentColor\" fill=\"currentColor\">\n          <path d=\"M8.5 2.9h15c1.6 0 3 .7 3.9 1.7 1 .9 1.7 2.3 1.7 3.9v15c0 1.6-.7 3-1.7 3.9-.9 1-2.3 1.7-3.9 1.7h-15c-1.6 0-3-.7-3.9-1.7-1-.9-1.7-2.3-1.7-3.9v-15c0-1.6.7-3 1.7-3.9.9-1.1 2.3-1.7 3.9-1.7m15-1.9h-15C4.4 1 1 4.4 1 8.5v15C1 27.6 4.4 31 8.5 31h15c4.1 0 7.5-3.4 7.5-7.5v-15C31 4.4 27.6 1 23.5 1\" stroke-width=\"2\"></path>\n          <path d=\"M16 21c-1.4 0-2.6-.6-3.5-1.5-.9-.9-1.5-2.1-1.5-3.5s.6-2.6 1.5-3.5c.9-.9 2.2-1.5 3.5-1.5 1.4 0 2.6.6 3.5 1.5.9.9 1.5 2.2 1.5 3.5 0 1.4-.6 2.6-1.5 3.5-.9.9-2.1 1.5-3.5 1.5m0-12c-3.9 0-7 3.1-7 7s3.1 7 7 7 7-3.1 7-7-3.1-7-7-7\" stroke-width=\"2\"></path>\n          <path d=\"M24 9.5c-.8 0-1.5-.7-1.5-1.5s.7-1.5 1.5-1.5 1.5.7 1.5 1.5-.7 1.5-1.5 1.5m0-4c-1.4 0-2.5 1.1-2.5 2.5s1.1 2.5 2.5 2.5 2.5-1.1 2.5-2.5-1.1-2.5-2.5-2.5\"></path>\n        </g>\n      </symbol>\n    </svg>\n  \n  (In future, it might be that the above isn't necessary, as mastheads in the Fairfax Blue style\n  appear to include the symbols above on every page the site.)\n\n  With the above in your HTML document, you can use this style as follows.\n\n  Your SCSS:\n\n    .yourSocialButtonContainerStyle {\n      @include social-button-container();\n    }\n\n    .yourSocialButtonStyle {\n      @include social-button(15px, #000, #ccc); \n    }\n\n  Your HTML:\n\n    <ul class=\"yourSocialButtonContainerStyle\">\n      <li class=\"yourSocialButtonStyle\">\n        <a href=\"javascript:void(0);\">\n          <span>Share on Facebook</span>\n          <svg height=\"1em\" width=\"1em\" aria-hidden=\"true\" focusable=\"false\">\n            <use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#icon-facebook\"></use>\n          </svg>\n        </a>\n      </li>\n      <li class=\"yourSocialButtonStyle\">\n        <a href=\"javascript:void(0);\">\n          <span>Share on Facebook</span>\n          <svg height=\"1em\" width=\"1em\" aria-hidden=\"true\" focusable=\"false\">\n            <use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#icon-twitter\"></use>\n          </svg>\n        </a>\n      </li>\n      <li class=\"yourSocialButtonStyle\">\n        <a href=\"javascript:void(0);\">\n          <span>Share on Facebook</span>\n          <svg height=\"1em\" width=\"1em\" aria-hidden=\"true\" focusable=\"false\">\n            <use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#icon-email\"></use>\n          </svg>\n        </a>\n      </li>\n    </ul>\n*/\n/*\n  Social button\n\n  @param { Number with unit } side-length - Figure with unit that determines width and height of \n  button\n  @param { Color } color - Color of the button \n  @param { Color } actionColor - Color of button in hover and focus states\n*/\n/*\n  Social button container\n*/\n/*\n  Text input\n\n  November 7, 2017\n  ask sorenfrederiksen@fairfaxmedia.com.au\n\n  A couple of mix-ins to help users get standard form-based text inputs up and running.\n\n  All mix-ins result in inputs that can be made to declare the user's input is invalid (apply the \n  '.is--invalid' class to your button) or to signify the input is deactivated (apply the \n  '.is--deactivated' class).\n\n  To use text inputs, add this to the top of your HTML document (or add the symbol elements to \n  an existing svg container):\n\n  ```\n  <svg xmlns=\"http://www.w3.org/2000/svg\" style=\"position:absolute; width: 0; height: 0;\">\n    <symbol viewBox=\"0 0 16 16\" id=\"icon-validation-alert\">\n      <circle r=\"8\" cx=\"8\" cy=\"8\" fill=\"currentColor\"></circle>\n      <text \n        text-anchor=\"middle\" \n        x=\"8\" \n        y=\"13\" \n        fill=\"#fff\" \n        style=\"font-size: 13px; font-weight: 700; font-family: 'PT Sans', sans-serif\">!</text>\n    </symbol>\n  </svg>\n  ```\n  \n  You can use this style as follows.\n\n  Example SCSS:\n\n  ```\n  .yourTextInputClass {\n    @include text-input(\"standard\");\n  }\n  ```\n\n  Example HTML:\n\n  ```\n  <div class=\"yourTextInputClass\">\n    <label>Some input label</label>\n    <div>\n      <input type=\"text\" placeholder=\"Some input text\"></input>\n      <svg viewBox=\"0 0 16 16\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" \n           xmlns:xlink=\"http://www.w3.org/1999/xlink\" class=\"validation-alert\">\n        <use \n          xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n          xlink:href=\"#icon-validation-alert\" \n          class=\"validation-alert__icon\">\n      </svg>\n    </div>\n    <p class=\"validation-error\">\n      You input the wrong thing.\n    </p>\n  </div>\n  ```\n\n  Example HTML where the user's input is invalid:\n\n  ```\n  <div class=\"yourTextInputClass is--invalid\">\n    <label>Some input label</label>\n    <div>\n      <input type=\"text\" placeholder=\"Some input text\"></input>\n      <svg viewBox=\"0 0 16 16\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" \n           xmlns:xlink=\"http://www.w3.org/1999/xlink\" class=\"validation-alert\">\n        <use \n          xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n          xlink:href=\"#icon-validation-alert\" \n          class=\"validation-alert__icon\">\n      </svg>\n    </div>\n    <p class=\"validation-error\">\n      You input the wrong thing.\n    </p>\n  </div>\n  ```\n\n  (Note the 'label', 'validation-alert' and 'validation-error' elements are optional.)\n*/\n/*\n  Text input\n\n  @param { Color } color - Colour of the input's text\n  @param { String } border - Border property of input\n  @param { Color } focus-color - Colour of the input's text when in focus state\n  @param { Color } focus-border - Border property of input when in focus state\n  @param { Number with unit } font-size - Size of the input's text\n  @param { Color } background - Background colour of the input\n  @param { Color } label-color - Color of the input's label\n  @param { Number with unit } label-font-size - Size of the input's label's font\n  @param { Color } outline - Color of the outline shown when the input is in focus\n*/\n/*\n  Text input without validation error\n\n  Included for use in other mix-ins where including validation error styles would add excessively\n  and needlessly to the stylesheet produced (e.g. with the 'search-input' mix-in).\n\n  @param { Color } color - Colour of the input's text\n  @param { String } border - Border property of input\n  @param { Color } focus-color - Colour of the input's text when in focus state\n  @param { Color } focus-border - Border property of input when in focus state\n  @param { Number with unit } font-size - Size of the input's text\n  @param { Color } background - Background colour of the input\n  @param { Color } label-color - Color of the input's label\n  @param { Number with unit } label-font-size - Size of the input's label's font\n  @param { Color } outline - Color of the outline shown when the input is in focus\n*/\n/*\n  Text input\n\n  @param { String } style - String denoting style of text input\n*/\n/*\n  Custom text input\n\n  @param { Color } border-color - Colour of the input's border\n  @param { Color } focus-border-color - Colour of the input's border in focus state\n  @param { Color } color - Colour of the input's text\n  @param { Number with unit } font-size - Size of input text (label is sized at 93.75% of this)\n  @param { Color } background - Colour of input's background\n  @param { Color } outline - Colour of outline shown around input when it is in focus\n*/\n/*\n  Search input\n\n  November 7, 2017\n  ask sorenfrederiksen@fairfaxmedia.com.au\n  \n  A kind of text input specifically designed for search functionality.\n\n  To use a search input, add this to the top of your HTML document (or add the symbol element to \n  an existing svg container):\n\n  ```\n  <svg xmlns=\"http://www.w3.org/2000/svg\" style=\"position:absolute; width: 0; height: 0;\">\n    <symbol viewBox=\"0 0 32 32\" id=\"icon-search\">\n      <path d=\"M21.08 18.573l10.4 10.4a1.773 1.773 0 1 1-2.508 2.507l-10.4-10.4a11.62 11.62 0 0 1-6.902 2.26C5.225 23.34 0 18.115 0 11.67S5.225 0 11.67 0s11.67 5.225 11.67 11.67c0 2.583-.84 4.97-2.26 6.903zm-1.287-6.903a8.123 8.123 0 1 0-16.247 0 8.123 8.123 0 0 0 16.247 0z\" fill=\"currentColor\" fill-rule=\"evenodd\"/>\n    </symbol>\n  </svg>\n  ```\n  \n  With the above in your HTML document, you can use this style as follows.\n\n  Your SCSS:\n\n  ```\n  .yourSearchInputClass {\n    @include search-input(\"standard\", \"right\", \"true\");\n  }\n  ```\n\n  Your HTML:\n  ```\n  <form class=\"yourSearchInputClass\">\n    <label>Some invisible search label</label>\n    <input type=\"text\" placeholder=\"Some search placeholder text\"></input>\n    <button type=\"submit\">\n      <svg viewBox=\"0 0 16 16\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" \n           xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n        <use \n          xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n          xlink:href=\"#icon-search\" >\n      </svg>\n    </button>\n  </form>\n  ```\n\n  Your HTML when using autocomplete:\n  ```\n  <form class=\"yourSearchInputClass\">\n    <label>Some invisible search label</label>\n    <input \n      type=\"text\" \n      placeholder=\"Some search placeholder text\" \n      id=\"text-input-with-autocomplete\"/>\n    <button type=\"submit\">\n      <svg viewBox=\"0 0 16 16\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" \n           xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n        <use \n          xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n          xlink:href=\"#icon-search\" >\n      </svg>\n    </button>\n  </form>\n\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/awesomplete/1.1.2/awesomplete.js\"></script>\n  <script>\n    var data = [\"Derpit\", \"Burpit\", \"Fartit\", \"McGardit\", \"Lardit\", \"Dingo\", \"Brunswick\", \"Brunton\", \"Brunsby\"]\n\n    var auto = new Awesomplete(\"#text-input-with-autocomplete\", {\n      minChars: 2,\n      maxItems: 5,\n      list: data\n    });\n  </script>\n  ```\n*/\n/*\n  Text input autocomplete\n\n  November 7, 2017\n  ask sorenfrederiksen@fairfaxmedia.com.au\n\n  A mix-in that adds styles to the autocomplete options appended to a text input when using \n  Awesomplete-style autocompletion.\n\n  Your SCSS:\n\n  ```\n  // The class of the element containing the text input you want to have autocomplete\n  .elementContainingTextInput {\n    \n    .awesomplete {\n      @include autocomplete(\"standard\");\n    }\n  }\n  ```\n\n  Your HTML:\n  ```\n  <div class=\"elementContainingTextInput\">\n    <input type=\"text\" id=\"text-input-with-autocomplete\" />\n  </div>\n\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/awesomplete/1.1.2/awesomplete.js\"></script>\n  <script>\n    var data = [\"Derpit\", \"Burpit\", \"Fartit\", \"McGardit\", \"Lardit\", \"Dingo\", \"Brunswick\", \"Brunton\", \"Brunsby\"]\n\n    var auto = new Awesomplete(\"#text-input-with-autocomplete\", {\n      minChars: 2,\n      maxItems: 5,\n      list: data\n    });\n  </script>\n  ```\n*/\n/*\n  Autocomplete\n\n  @param { String } style - String describing style of autocomplete \n*/\n/*\n  Search input\n\n  @param { String } style - String denoting style of text input\n  @param { String } icon-position - String denoting position of search icon\n  @param { String } autocomplete - String determining whether or search input will include \n  autocomplete\n*/\n/*\n  Custom search input\n\n  @param { Color } border-color - Colour of the input's border\n  @param { Color } focus-border-color - Colour of the input's border in focus state\n  @param { Color } color - Colour of the input's text\n  @param { Number with unit } font-size - Size of input text (label is sized at 93.75% of this)\n  @param { Color } background - Colour of input's background\n  @param { Color } outline - Colour of outline shown around input when it is in focus\n*/\n/*\n  Dropdown\n\n  March 1, 2018\n  ask sorenfrederiksen@fairfaxmedia.com.au\n\n  A couple of mix-ins to help users implement standard dropdowns as quickly as possible.\n\n  All mix-ins result in inputs that can signify the input is deactivated (apply the \n  '.is--deactivated' class).\n\n  To use dropdown inputs, add this to the top of your HTML document (or add the symbol elements to \n  an existing svg container):\n\n  ```\n  <svg xmlns=\"http://www.w3.org/2000/svg\" style=\"position:absolute; width: 0; height: 0;\">\n    <symbol viewBox=\"0 0 10 7\" id=\"icon-carat\">\n      <path d=\"M1 1l4 3.74L9 1\" stroke=\"currentColor\" stroke-width=\"2\" fill=\"none\" fill-rule=\"evenodd\"/>\n    </symbol>\n    <symbol viewBox=\"0 0 9 9\" id=\"icon-tick\">\n      <path d=\"M2.978 9a.998.998 0 0 1-.706-.294L.292 6.728a1 1 0 0 1 1.415-1.414L2.853 6.46 7.188.416a1 1 0 0 1 1.625 1.166l-5.022 7A.994.994 0 0 1 2.978 9\" fill=\"currentColor\" fill-rule=\"evenodd\"/>\n    </symbol>\n    <symbol viewBox=\"0 0 16 16\" id=\"icon-validation-alert\">\n      <circle r=\"8\" cx=\"8\" cy=\"8\" fill=\"currentColor\"></circle>\n      <text \n        text-anchor=\"middle\" \n        x=\"8\" \n        y=\"13\" \n        fill=\"#fff\" \n        style=\"font-size: 13px; font-weight: 700; font-family: 'PT Sans', sans-serif\">!</text>\n    </symbol>\n  </svg>\n  ```\n  \n  You can use this style as follows.\n\n  Example SCSS:\n  ```\n  .yourDropdownClass {\n    @include dropdown(\"standard\", false, true);\n  }\n  ```\n  Example HTML:\n  ```\n    <div class=\"yourDropdownClass\">\n      <label>Some input label</label>\n      <div class=\"dropdown__inner\" id=\"dropdown-container\">\n        <span class=\"dropdown__inner__current-value\" id=\"dropdown-current-value\">Soren Frederiksen</span>\n        <svg \n          viewBox=\"0 0 10 7\" version=\"1.1\" \n          xmlns=\"http://www.w3.org/2000/svg\"\n          class=\"dropdown__inner__carat\">\n          <use \n            xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n            xlink:href=\"#icon-carat\" \n            class=\"dropdown__inner__carat__image\">\n        </svg>\n        <svg \n          viewBox=\"0 0 16 16\" version=\"1.1\" \n          xmlns=\"http://www.w3.org/2000/svg\"\n          class=\"dropdown__inner__error\">\n          <use \n            xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n            xlink:href=\"#icon-validation-alert\" >\n        </svg>\n        <svg \n          viewBox=\"0 0 16 16\" version=\"1.1\" \n          xmlns=\"http://www.w3.org/2000/svg\"\n          class=\"dropdown__inner__error\">\n          <use \n            xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n            xlink:href=\"#icon-validation-alert\" >\n        </svg>\n        <select class=\"dropdown__inner__select\" id=\"dropdown-select-input\">\n          <option value=\"Soren Frederiksen\">Soren Frederiksen</option>\n          <option value=\"Richard Lama\">Richard Lama</option>\n          <option value=\"Reginal Sengkey\">Reginal Sengkey</option>\n        </select>\n        <ul class=\"dropdown__inner__list\" id=\"dropdown-list\">\n          <li value=\"Soren Frederiksen\"\n              class=\"dropdown__inner__list__item is--selected\">\n            Soren Frederiksen\n            <svg \n              viewBox=\"0 0 10 7\" version=\"1.1\" \n              xmlns=\"http://www.w3.org/2000/svg\"\n              class=\"dropdown__inner__list__item__tick\">\n              <use \n                xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n                xlink:href=\"#icon-tick\">\n            </svg>\n          </li>\n          <li value=\"Richard Lama\"\n              class=\"dropdown__inner__list__item\">\n            Richard Lama\n            <svg \n              viewBox=\"0 0 10 7\" version=\"1.1\" \n              xmlns=\"http://www.w3.org/2000/svg\"\n              class=\"dropdown__inner__list__item__tick\">\n              <use \n                xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n                xlink:href=\"#icon-tick\">\n            </svg>\n            </svg>\n          </li>\n          <li value=\"Reginal Sengkey\"\n              class=\"dropdown__inner__list__item\">\n            Reginal Sengkey\n            <svg \n              viewBox=\"0 0 10 7\" version=\"1.1\" \n              xmlns=\"http://www.w3.org/2000/svg\"\n              class=\"dropdown__inner__list__item__tick\">\n              <use \n                xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n                xlink:href=\"#icon-tick\">\n            </svg>\n            </svg>\n          </li>\n          <li value=\"Mark Stehle\"\n              class=\"dropdown__inner__list__item\">\n            Mark Stehle\n            <svg \n              viewBox=\"0 0 10 7\" version=\"1.1\" \n              xmlns=\"http://www.w3.org/2000/svg\"\n              class=\"dropdown__inner__list__item__tick\">\n              <use \n                xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n                xlink:href=\"#icon-tick\">\n            </svg>\n            </svg>\n          </li>\n          <li value=\"Matthew Absalom-Wong\"\n              class=\"dropdown__inner__list__item\">\n            Matthew Absalom-Wong\n            <svg \n              viewBox=\"0 0 10 7\" version=\"1.1\" \n              xmlns=\"http://www.w3.org/2000/svg\"\n              class=\"dropdown__inner__list__item__tick\">\n              <use \n                xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n                xlink:href=\"#icon-tick\">\n            </svg>\n            </svg>\n          </li>\n        </ul>\n      </div>\n      <p class=\"dropdown__error\">\n        You did something wrong.\n      </p>\n    </div>\n  ```\n  In order to work fully (included the custom dropdown list), this mix-in also requires some \n  JavaScript. \n\n  Below is some bare-bones vanilla JavaScript that developers will be able to more eloquently \n  implement using whatever framework or library they're using. In principal, though,\n  this is all you need.\n\n  Example JavaScript:\n  ```\n  var dropdownValueDisplay = document.getElementById('dropdown-current-value');\n  var dropdownSelectInput = document.getElementById('dropdown-select-input');\n  var dropdownContainer = document.getElementById('dropdown-container');\n  var dropdownListItems = dropdownContainer.getElementsByClassName('dropdown__inner__list__item');\n\n  // When the user clicks the dropdown container, show it as selected\n  dropdownContainer.addEventListener('click', function() {\n    dropdownContainer.classList.toggle('is--selected');\n  });\n\n  // When the user click a dropdown list item, select it\n  for (var i = 0; i < dropdownListItems.length; i += 1) {\n    dropdownListItems[i].addEventListener('click', selectDropdownListItem);\n  }\n\n  function selectDropdownListItem(e) {\n\n    var newDropdownValue = e.target.getAttribute('value');\n\n    // Update dropdown value display and input\n    dropdownValueDisplay.innerHTML = newDropdownValue;\n    dropdownSelectInput.value = newDropdownValue;\n\n    // Update dropdown list display (and calculate variables necessary to determine position of\n    // tick)\n    for (var i = 0; i < dropdownListItems.length; i += 1) {\n      if (dropdownListItems[i] !== e.target) {\n        dropdownListItems[i].classList.remove('is--selected');\n      }\n      else {\n        indexOfTargetListItem = i;\n        dropdownListItems[i].classList.add('is--selected');\n      }\n    }\n  }\n  ```\n*/\n/*\n  Dropdown\n\n  @param { Color } color - Colour of the input's text\n  @param { String } border - Border property of input\n  @param { Color } focus-color - Colour of the input's text when in focus state\n  @param { Color } focus-carat-color - Colour of the input's carat when in focus state\n  @param { Color } focus-border - Border property of input when in focus state\n  @param { Number with unit } font-size - Size of the input's text\n  @param { Color } background - Background colour of the input\n  @parma { Color } list-item-color - Color of dropdown list items\n  @parma { Color } selected-list-item-background - Background color signifying selected list item\n  @param { Color } label-color - Color of the input's label\n  @param { Number with unit } label-font-size - Size of the input's label's font\n  @param { Boolean } use-custom-dropdown-list-on-mobile - Boolean indicating whether or not to use \n  the custom dropdown list on mobile, or whether to rely on a device's in-built dropdown\n  @param { Boolean } can-be-invalid - Boolean indicating whether or not include invalid state styles\n*/\n/*\n  Dropdown desktop custom dropdown list styles\n*/\n/*\n  Dropdown\n\n  @param { String } style - String denoting style of dropdown menu\n  @param { Boolean } use-custom-dropdown-list-on-mobile - Boolean indicating whether or not to use \n  the custom dropdown list on mobile, or whether to rely on a device's in-built dropdown\n  @param { Boolean } can-be-invalid - Boolean indicating whether or not include invalid state styles\n*/\n/*\n  Custom dropdown\n\n  @param { Number with unit } font-size - Size of input text (label is sized at 93.75% of this)\n  @param { Color } color - Colour of the input's text\n  @param { Color } background - Colour of input's background\n  @param { Boolean } use-custom-dropdown-list-on-mobile - Boolean indicating whether or not to use \n  the custom dropdown list on mobile, or whether to rely on a device's in-built dropdown\n  @param { Boolean } can-be-invalid - Boolean indicating whether or not include invalid state styles\n  @param { Color } label-color - Colour of the input's label\n  @param { Color } border-color - Colour of the input's border\n  @param { Color } focus-border-color - Colour of the input's border in focus state\n  @param { Color } list-item-color - Colour of the input's list item text\n  @param { Number with unit } list-max-height - Maximum size of the dropdown list\n*/\n/*\n  Scrollbar\n\n  March 1, 2018\n  ask sorenfrederiksen@fairfaxmedia.com.au\n\n  A couple mix-ins that add a custom scrollbar to a scrolling container.\n  \n  You can use this style as follows.\n\n  Example SCSS:\n\n  ```\n  .yourScrollingContainerClass {\n    @include scrollbar(\"standard\");\n  }\n  ```\n\n  Example HTML:\n\n  ```\n  <div class=\"yourScrollingContainerClass\">\n    <!-- Lots of elements -->\n  </div>\n  ```\n*/\n/*\n  Scrollbar\n\n  @param { Number with unit } width - Width of the scrollbar\n  @param { Color } track-color - Color of the scrollbar track\n  @param { Color } thumb-color - Color of the scrollbar thumb (i.e. the movable control in the \n  scrollbar)\n  @param { Number with unit } track-border-radius - Border radius of the scrollbar track\n  @param { Number with unit } thumb-border-radius - Border radius of the scrollbar thumb (i.e. the\n  movable control in the scrollbar)\n  @param { Number with unit } thumb-padding - Gap between the thumb and the track\n*/\n/*\n  Scrollbar\n\n  @param { String } style - String describing the style of the scrollbar\n*/\n/*\n  Custom scrollbar\n\n  @param { Number with unit } width - Width of the scrollbar\n  @param { Color } track-color - Color of the scrollbar track\n  @param { Color } thumb-color - Color of the scrollbar thumb (i.e. the movable control in the \n  scrollbar)\n  @param { Number with unit } track-border-radius - Border radius of the scrollbar track\n  @param { Number with unit } thumb-border-radius - Border radius of the scrollbar thumb (i.e. the\n  movable control in the scrollbar)\n*/\n/*\n  Loader\n\n  January 1, 2017\n  ask sorenfrederiksen@fairfaxmedia.com.au\n\n  A loading indicator featuring a masthead-appropriate logo initial.\n\n  To use this loader style, add this to the top of your HTML document (or add the symbol elements to \n  an existing svg container):\n\n  ```\n  <svg xmlns=\"http://www.w3.org/2000/svg\" style=\"position:absolute; width: 0; height: 0;\">\n    <symbol viewBox=\"0 0 50 60\" id=\"icon-loading-ct\">\n      <path d=\"M18.244 19.205L16.378 20.5l-1.072-1.296L39.152 0c.285 1.58 1.219 6.812 4.092 6.31 2.152-.364 4.166-3.013 5.32-4.73H50c-.65 2.008-1.363 3.79-2.662 5.515-1.293 1.653-2.802 3.014-4.524 4.156-1.29.867-2.298 1.361-3.807 1.79l-.073 34.255c.787-.639 1.51-1.28 2.151-2.073 1.372-1.507 2.38-3.224 3.45-4.876l1.154.428c-1.226 3.37-2.445 6.813-4.669 9.745-2.37 3.085-5.675 6.1-9.273 7.67-2.508 1.151-6.033 1.653-8.76 1.79C12.138 60.418 3.158 53.324.86 42.786A42.985 42.985 0 0 1 0 34.182c.073-4.722 2.014-9.38 4.376-13.397 3.378-5.872 8.842-10.538 15.022-13.471 2.444-1.15 5.31-2.22 8.111-2.22.293 0 .723.066.861.35.073.145-.064.363-.21.363-2.729 1.07-3.306 1.143-5.815 2.795-2.452 1.645-4.815 3.37-6.617 5.662-4.523 5.59-5.886 12.968-5.1 20 .365 3.215 1.438 6.438 3.24 9.16 1.218 1.799 2.801 3.16 4.376 4.52v-28.74zm3.622 29.331c2.444 1.15 4.816 2.3 7.543 2.3 1.73.066 3.662 0 5.318-.648.577-.29 1.143-.712 1.721-1.077l.074-36.977-4.313-3.013-1.217 25.515c-.074 2.51-1.145 4.95-2.37 7.096-1.007 1.725-2.59 3.15-4.094 4.448-.86.72-1.72 1.506-2.662 2.356z\" fill=\"#0A1633\" fill-rule=\"evenodd\"/>\n    </symbol>\n    <symbol viewBox=\"0 0 59 62\" id=\"icon-loading-smh\">\n      <path d=\"M44.28 48.294c-4.229-3.036-9.12-5.265-13.698-6.539l-.124-.041 5.043-7.53c6.429 1.401 10.814 4.95 10.814 8.611 0 1.632-.746 3.81-1.975 5.418l-.06.08zM32.557 23.685c-.886-.123-3.722-.609-4.415-.766-2.306-.477-13.809-3.888-13.809-8.981 0-5.786 7.435-5.786 11.005-5.786.788 0 9.162.732 13.111 6.18-.041.078-4.838 7.711-5.892 9.353zm25.235-7.84l.115-.094c.566-.544 1.093-1.66 1.093-2.327 0-.776-.285-1.484-.799-2-.497-.565-1.268-.885-2.288-.96-.087-.006-.584-.03-.617-.03-2.5.024-5.195 1.598-8.038 4.36-2.497 2.425-3.438 4.221-5.015 6.71-1.28 2.024-1.892 2.98-2.235 3.528-.481-.06-3.38-.518-5.976-1.083.836-1.36 3.303-5.693 6.102-9.745 2.035-2.945 4.496-5.61 5.73-7.129.193-.236.38-.375.605-.502.168-.095.417-.22.5-.315.009-.113-.327-.447-.385-.49-.166.022-.265.06-.405.129-.191.09-.447.215-.801.215-.451 0-.916-.384-1.761-1.083C41.495 3.27 37.543.012 30.598 0 18.702-.018 11.679 10.125 11.767 16.839c.055 4.183.854 8.78 2.94 10.712 2.128 1.97 5.712 3.41 11.98 4.9l.421.11-1.005 1.117c-1.649 1.405-2.834 2.755-5.925 2.831-1.955 0-2.866-.669-3.566-1.296l-.147.062c.163.329.59 1.063 1.14 1.739.704.857 1.35 1.306 1.93 1.336.095.025.914.234 2.238-.179 1.71-.534 3.556-1.817 5.338-3.824l.688-.771.69-.769 4.475.799c.511.116 1.015.173 1.457.303l-1.843 2.806c-2.325 3.51-3.214 4.605-3.214 4.605s-1.551-.224-1.96-.303c-1.276-.255-3.283-.382-6.06-.359-5.432-.05-12.938 1.959-17.463 6.469a13.529 13.529 0 0 0-2.288 2.996A11.737 11.737 0 0 0 0 56.078C0 58.81 1.798 62 6.876 62c6.794 0 12.706-6.42 15.824-9.872l.5-.556c.928-1.019 1.353-1.732 1.692-2.095 3.593.995 9.43 3.433 14.54 6.786 1.038-1.058 4.088-4.69 6.947-8.944 1.568-2.334 5.184-7.758 5.313-11.921.126-3.987-3.603-8.775-10.497-10.197.221-.458.633-1.162 1.667-2.762 2.834-4.392 5.39-8.96 10.78-8.96.964 0 2.969.22 4.055 2.24.032.046.05.076.095.127zM17.445 55.863c-1.312 1.119-2.63 2.065-3.922 2.816-1.358.747-2.686 1.296-4.021 1.63a11.6 11.6 0 0 1-2.799.38c-.256 0-.516-.015-.822-.042-2.755-.271-4.47-1.906-4.47-4.277 0-6.279 10.526-8.23 14.361-8.23l.808-.005c1.756-.014 2.985.111 6.431.806l.723.192a46.746 46.746 0 0 1-5.011 5.552c-.435.407-.84.806-1.278 1.178z\" fill=\"#0A1633\" fill-rule=\"evenodd\"/>\n    </symbol>\n    <symbol viewBox=\"0 0 60 41\" id=\"icon-loading-watoday\">\n      <path d=\"M29.974 11.33h-.334c-.611 1.626-10.344 27.707-10.566 28.269-.22.618-.5 1.401-1.389 1.401-.611 0-.946-.449-1.167-1.12L4.007 4.318C3.45 2.746 2.448 2.297 1.725 2.297H.335C.055 2.297 0 2.074 0 1.85V.392C0 .112.056 0 .445 0c.445 0 2.17.166 7.897.166C12.347.166 14.624 0 15.18 0c.389 0 .446.166.446.447V1.85c0 .28-.057.447-.446.447h-1.223c-.89 0-1.446.788-1.112 1.91l7.62 24.453h.331c.668-1.906 7.34-19.744 7.34-21.763 0-1.403-.556-2.86-1.053-3.53-.502-.675-1.225-1.07-1.67-1.07h-1.112c-.279 0-.335-.113-.335-.447V.392c0-.226.056-.392.39-.392.502 0 2.449.166 7.34.166 4.67 0 6.784-.166 7.34-.166.334 0 .386.166.386.502v1.403c0 .224-.052.392-.385.392h-1.67c-.889 0-1.39 1.235-1.11 2.189l7.673 24.174h.333c2.728-7.627 7.564-21.874 7.564-24.904 0-.617-.723-1.459-1.78-1.459h-1.612c-.335 0-.392-.168-.392-.504v-1.4c0-.227.057-.393.446-.393.555 0 2.504.166 5.95.166C57.555.166 59.167 0 59.61 0c.336 0 .389.111.389.502v1.403c0 .224 0 .392-.389.392h-1.054c-.946 0-2.058.62-2.614 2.02-.668 1.796-11.846 32.252-12.958 34.946-.277.673-.667 1.737-1.669 1.737-.779 0-1.11-.728-1.389-1.51l-9.953-28.16\" fill=\"#0A1633\" fill-rule=\"evenodd\"/>\n    </symbol>\n    <symbol viewBox=\"0 0 61 56\" id=\"icon-loading-theage\">\n      <path d=\"M55.49 51.65a76.398 76.398 0 0 1-3.368-6.912L32.98 0h-4.86L16.7 28.195c-1.56 3.883-9.118 21.282-10.102 23.07-1.2 2.15-2.076 1.862-6.598 2.25V56c1.642-.077 6.268-.232 9.143-.232 2.547 0 5.093.155 7.394.232v-2.486c-6.16-.077-6.736-.387-6.736-1.24 0-.312.33-1.244.74-2.332l4.503-11.435c.494-1.165.741-1.398 1.808-1.398h18.65c1.481 0 1.645 0 2.137 1.165l4.953 12.367c.328.776.575 1.475.575 1.941 0 .39-.575.778-7.394.932V56c6.407-.154 9.2-.232 12.242-.232 4.435 0 9.37.078 12.985.232v-2.64c-3.184 0-4.771-.388-5.51-1.71zM35.61 34.391c0 .233-.411.466-.984.544H18.151c-1.151 0-1.48-.233-1.48-.466s.166-.544.329-1.088l8.973-22.253c.246-.466.33-.854.494-.854.162 0 .41.388.493.7l.047.116 8.274 22.291c.245.622.328.777.328 1.01z\" fill=\"#0A1633\" fill-rule=\"evenodd\"/>\n    </symbol>\n    <symbol viewBox=\"0 0 47 62\" id=\"icon-loading-bt\">\n      <path d=\"M25.33 53.374c-3.825 0-7.729-1.627-10.519-5.29V33.278c2.312-4.556 6.774-6.51 10.678-6.51 7.17 0 11.712 6.349 11.712 13.183 0 6.427-3.824 13.424-11.872 13.424m1.99-35.23c-4.38 0-9.479 1.79-12.508 5.776V0H0v8.782l5.172.34v51.9h8.764l.48-4.882C17.44 60.21 22.698 62 27.162 62 38.873 62 47 51.666 47 40.193c0-12.285-8.445-22.048-19.68-22.048\" fill=\"#0A1633\" fill-rule=\"evenodd\"/>\n    </symbol>\n  </svg>\n  ```\n  You can then use the button style as follows.\n\n  Your SCSS:\n  ```\n  .elementContainingYourLoaderClass {\n    position: relative;\n  }\n\n  .yourLoaderClass {\n    @include loader(\"standard\");\n  }\n  ```\n  Your HTML:\n  ```\n  <div class=\"yourLoaderClass\">\n    <div class=\"loader-icon\">\n      <div class=\"loader-icon__borders-container\">\n        <div class=\"loader-icon__borders-container__borders\"></div>   \n      </div>\n      <svg \n        viewBox=\"0 0 60 60\" version=\"1.1\" \n        xmlns=\"http://www.w3.org/2000/svg\"\n        class=\"loader-icon__svg\">\n        <use \n          xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n          xlink:href=\"#icon-loading-smh\" \n          class=\"loader-icon__svg__image\" >\n      </svg>\n    </div>\n    <p class=\"loader-message\">\n      Some default message.\n    </p>\n    <div class=\"loader-retry\">\n      <button class=\"loader-retry__button\">\n        Try again\n      </button>\n    </div>\n  </div>\n\n  ```\n*/\n/*\n  Loader\n\n  @param { Number with unit } icon-side-length - Length of the side of the loading icon to be displayed\n  @param { Color } icon-color - Color of the loading icon\n  @param { Color } inner-border-color - Color of the inner spinning border\n  @param { Color } outer-border-color - Color of the outer spinning border\n  @param { color } text-color - Color of the loading text\n*/\n/*\n  Loader\n\n  @param { String } style - String describing style of loader.\n*/\n/*\n  Loader container\n*/\n/*\n  Drop-cap\n\n  February 6, 2017\n  ask sorenfrederiksen@fairfaxmedia.com.au\n\n  A large capital letter used to start a section of a feature article.\n  \n  With the above in your HTML document, you can use this style as follows.\n\n  Your SCSS:\n\n  ```\n  .yourDropCapClass {\n    @include drop-cap(1rem);\n  }\n  ```\n\n  Your HTML:\n  ```\n  <p>\n    <span class=\"yourDropCapClass\">T</span>here are about 17,000 rips at beaches around Australia \n    on any given day. Chances are that – unless you’re a skilled surf lifesaver or an extremely \n    experienced surfer – you’d prefer not to be dicing with them.\n  </p>\n  ```\n*/\n/*\n  Drop cap\n\n  @param { Number with unit } normal-font-size - Size of most of the text in the drop-cap's \n  section\n*/\n/*\n  Fancy radio\n\n  April 9, 2018\n  ask sorenfrederiksen@fairfaxmedia.com.au\n\n  A pair of mix-ins to help users implement tab-like 'fancy' radio buttons.\n\n  All mix-ins result in radio button collections that can signify the buttons are deactivated (apply \n  the '.is--deactivated' class).\n\n  You can use this style as follows.\n\n  Example SCSS:\n  ```\n  .yourFancyRadioClass {\n    @include fancy-radio('standard');\n  }\n  ```\n\n  Example HTML:\n  ```\n  <div class=\"fancy-radio\">\n    <p>\n      Options label\n    </p>\n    <div>\n      <input \n        type=\"radio\" \n        name=\"options\" \n        id=\"option-1\"\n        value=\"option-1\"\n        checked>\n      <label \n        for=\"option-1\">\n        Option 1\n      </label>\n      <input \n        type=\"radio\" \n        name=\"options\" \n        id=\"option-2\"\n        value=\"option-2\">\n      <label \n        for=\"option-2\">\n        Option 2\n      </label>\n      <input \n        type=\"radio\" \n        name=\"options\" \n        id=\"option-3\"\n        value=\"option-3\">\n      <label \n        for=\"option-3\">\n        Option 3\n      </label>\n      <input \n        type=\"radio\" \n        name=\"options\" \n        id=\"option-4\"\n        value=\"option-4\">\n      <label \n        for=\"option-4\">\n        Option 4\n      </label>\n      <input \n        type=\"radio\" \n        name=\"options\" \n        id=\"option-5\"\n        value=\"option-5\">\n      <label \n        for=\"option-5\">\n        Option 5\n      </label>\n    </div>\n  </div>\n  ```\n*/\n/*\n  Fancy radio\n\n  @param { Color } color - Colour of the radio buttons' text\n  @param { Color } checked-color - Colour of the radio buttons' text when they are checked\n  @param { Color } background - Background colour of the radio buttons\n  @param { Color } checked-background - Background colour of the radio buttons when they are checked\n  @param { Color } hover-background - Background colour of the radio buttons when they are checked\n  @param { String } internal-border - Border between the radio buttons\n  @param { String } external-border - Border surrounding the collection of radio buttons\n  @param { Number with unit } font-size - Size of the radio buttons' text\n  @param { Color } label-color - Colour of the radio button group's label's text\n*/\n/*\n  Fancy radio\n\n  @param { String } style - String denoting style of fancy radio (e.g. 'standard', 'standard--dark')\n*/\n/*\n  Custom fancy radio\n\n  @param { Number with unit } font-size - Size of the radio buttons' text\n  @param { Color } color - Colour of the radio buttons' text\n  @param { Color } checked-color - Colour of the radio buttons' text when they are checked\n  @param { Color } background - Background colour of the radio buttons\n  @param { Color } checked-background - Background colour of the radio buttons when they are checked\n  @param { Color } hover-background - Background colour of the radio buttons when they are checked\n  @param { String } internal-border - Border between the radio buttons\n  @param { String } external-border - Border surrounding the collection of radio buttons\n  @param { Color } label-color - Colour of the radio button group's label's text\n*/\n/*\n  State rules are ways to describe how our modules or layouts will look when in a particular state. \n  Is it hidden or expanded? Is it active or inactive? They are about describing how a module or \n  layout looks on screens that are smaller or bigger. They are also about describing how a module \n  might look in different views like the home page or the inside page.\n*/\n.footer {\n  background: #0a1633;\n  padding: 0 20px; }\n  .footer__header {\n    padding: 8px 0;\n    text-align: center;\n    border-bottom: 1px solid #454f64;\n    display: -ms-flexbox;\n    display: flex;\n    -ms-flex-wrap: wrap;\n        flex-wrap: wrap;\n    -ms-flex-pack: center;\n        justify-content: center;\n    -ms-flex-align: center;\n        align-items: center; }\n    .footer__header__logo-container {\n      -ms-flex-positive: 1;\n          flex-grow: 1;\n      -ms-flex-preferred-size: 100%;\n          flex-basis: 100%;\n      height: 48px; }\n      .footer__header__logo-container__logo {\n        display: inline-block;\n        position: relative;\n        height: 100%; }\n        .footer__header__logo-container__logo.is--theage {\n          width: 213px; }\n        .footer__header__logo-container__logo.is--smh {\n          width: 282px; }\n        .footer__header__logo-container__logo.is--brisbanetimes {\n          width: 220.5px; }\n        .footer__header__logo-container__logo.is--watoday {\n          width: 133.5px; }\n        .footer__header__logo-container__logo__image {\n          height: 100%;\n          background-size: contain;\n          background-position: center;\n          background-repeat: no-repeat; }\n        .footer__header__logo-container__logo__link {\n          display: block;\n          width: 100%;\n          height: 100%;\n          position: absolute;\n          top: 0;\n          left: 0; }\n    .footer__header__social {\n      -ms-flex-positive: 1;\n          flex-grow: 1;\n      -ms-flex-preferred-size: 100%;\n          flex-basis: 100%;\n      text-align: center; }\n      .footer__header__social__button a {\n        color: #58b5ff; }\n  .footer__copyright {\n    font-family: 'PT Sans', 'Trebuchet MS', 'Arial Narrow', sans-serif;\n    color: #fff;\n    padding: 16px 0;\n    font-size: 0;\n    text-align: center; }\n    .footer__copyright__text {\n      font-size: 14px;\n      font-size: 0.8rem;\n      margin-bottom: 16px;\n      width: 100%;\n      display: inline-block; }\n    .footer__copyright__logo {\n      background-size: contain;\n      background-repeat: no-repeat;\n      background-position: center;\n      width: 100%;\n      height: 36px;\n      display: inline-block; }\n\n@media only screen and (min-width: 600px) {\n  .footer .article-section__super-subsection {\n    margin: 0 auto; }\n  .footer__header {\n    text-align: left;\n    padding: 16px 0; }\n    .footer__header__logo-container {\n      height: 56px;\n      -ms-flex-preferred-size: 50%;\n          flex-basis: 50%; }\n    .footer__header__social {\n      text-align: right;\n      margin: initial;\n      -ms-flex-preferred-size: 50%;\n          flex-basis: 50%; }\n  .footer__copyright {\n    text-align: left;\n    padding: 24px 0; }\n    .footer__copyright:after {\n      content: '';\n      display: table;\n      clear: both; }\n    .footer__copyright__text {\n      font-size: 16px;\n      font-size: 1rem;\n      line-height: 36px;\n      margin-bottom: initial;\n      width: initial;\n      float: left; }\n    .footer__copyright__logo {\n      width: 64px;\n      float: left;\n      margin-left: 16px; } }\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/components/App/Footer.css"],"sourceRoot":""}